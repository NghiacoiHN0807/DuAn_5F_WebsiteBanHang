[{"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Detail-product.js":"1","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\taiKhoanKhachHangSevice.js":"2","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\index.js":"3","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\reportWebVitals.js":"4","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\App.js":"5","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\serviceWorker.js":"6","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\routes.js":"7","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\index.js":"8","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\chart\\index.js":"9","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\scroll-to-top\\index.js":"10","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Page404.js":"11","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\BlogPage.js":"12","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\DirectSale-ADM.js":"13","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\UserPage.js":"14","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\DashboardAppPage.js":"15","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Cart-Bill-ADM.js":"16","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\OrderManagement-Timeline.js":"17","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\OrderManagement.js":"18","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Cart.js":"19","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Home.js":"20","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\LoginPage.js":"21","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\ProductsPage.js":"22","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Payment-Page.js":"23","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Contact.js":"24","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\discounts\\DiscountPage.js":"25","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\discounts\\ModalsAddNewGiamGia.js":"26","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\discounts\\ModalsUpdateGiamGia.js":"27","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\SignUp.js":"28","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Staff\\Modal-User-Staff.js":"29","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Staff\\Modal-Update-Staff.js":"30","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Staff\\Modal-Add-Staff.js":"31","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\AddClients.js":"32","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\SanPham\\SanPhamMain.js":"33","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\ClientsPage.js":"34","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\UpdateClients.js":"35","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\SanPham\\ModelAdd.js":"36","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\SanPham\\ModelUpdate.js":"37","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\diaChi\\UpdateAddress.js":"38","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\diaChi\\AddAddress.js":"39","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\diaChi\\AllAddress.js":"40","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\diaChi\\AddressByClient.js":"41","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\index.js":"42","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout-Client.js":"43","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\palette.js":"44","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\customShadows.js":"45","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\typography.js":"46","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\simple\\index.js":"47","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\shadows.js":"48","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\globalStyles.js":"49","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\scroll-to-top\\ScrollToTop.js":"50","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\chart\\styles.js":"51","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\chart\\useChart.js":"52","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\BillSevice.js":"53","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\OrderManagementTimeLine.js":"54","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\_mock\\blog.js":"55","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\_mock\\user.js":"56","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\bill-service.js":"57","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\san-pham-service.js":"58","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\index.js":"59","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Delete-Product.js":"60","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Delete-DirectSale.js":"61","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-AddKhachHang.js":"62","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-AddProduct.js":"63","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Create-Online.js":"64","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Payment-Confirm.js":"65","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-Update-Product-Cart.js":"66","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Update-Status.js":"67","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\SanPhamService.js":"68","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-SelectHistoryBill.js":"69","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\OderManagementSevice.js":"70","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Delete-All-Product.js":"71","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\MappingTimeLine\\TimelineEvent.jsx":"72","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\giamGiaService.js":"73","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\MappingTimeLine\\Timeline.jsx":"74","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\iconify\\index.js":"75","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\discounts\\Modal-Delete-Discount.js":"76","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\scrollbar\\index.js":"77","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\Detail-Cart.js":"78","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\Detail-Product.js":"79","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\utils\\formatNumber.js":"80","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\hooks\\useResponsive.js":"81","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\taiKhoanNhanVienService.js":"82","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\chucVuService.js":"83","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Staff\\Modal-Delete-Staff.js":"84","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\AlertContext.js":"85","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\index.js":"86","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\user\\index.js":"87","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\index.js":"88","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\logo\\index.js":"89","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\XuatXuService.js":"90","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\ChatLieuService.js":"91","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\index.js":"92","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\LoaiCoAoService.js":"93","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\LoaiSPService.js":"94","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\OngTayAoService.js":"95","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\label\\index.js":"96","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\ChiTietSPService.js":"97","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\color-utils\\index.js":"98","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\SizeService.js":"99","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\CloudinaryService.js":"100","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\AnhService.js":"101","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\apiDiaChi.js":"102","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\diaChiSevice.js":"103","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\MauSacService.js":"104","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\utils\\cssStyles.js":"105","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout.js":"106","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\simple\\SimpleLayout.js":"107","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\AlertSnackbar.js":"108","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\auth\\login\\index.js":"109","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\client\\Header.js":"110","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\client\\Footer.js":"111","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\custom-axios.js":"112","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Button.js":"113","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Card.js":"114","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Table.js":"115","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Paper.js":"116","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Input.js":"117","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\DirectSaleSevice.js":"118","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Backdrop.js":"119","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Typography.js":"120","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Autocomplete.js":"121","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Tooltip.js":"122","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\iconify\\Iconify.js":"123","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\MappingTimeLine\\Placeholder.jsx":"124","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\scrollbar\\Scrollbar.js":"125","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppNewsUpdate.js":"126","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTasks.js":"127","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTrafficBySite.js":"128","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentVisits.js":"129","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppOrderTimeline.js":"130","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead.js":"131","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWidgetSummary.js":"132","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppConversionRates.js":"133","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWebsiteVisits.js":"134","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentSubject.js":"135","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead-NoCheckbox.js":"136","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar-NoFilter.js":"137","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostCard.js":"138","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar.js":"139","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostsSearch.js":"140","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostsSort.js":"141","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\logo\\Logo.js":"142","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\color-utils\\ColorPreview.js":"143","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\label\\Label.js":"144","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList.js":"145","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\color-utils\\ColorMultiPicker.js":"146","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCard.js":"147","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\color-utils\\ColorSinglePicker.js":"148","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-ADM.js":"149","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductSort.js":"150","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-Client.js":"151","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCartWidget.js":"152","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCardAll.js":"153","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSidebar.js":"154","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductListAll.js":"155","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSB.js":"156","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\auth\\login\\LoginForm.js":"157","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\header\\index.js":"158","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\index.js":"159","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\_mock\\account.js":"160","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\utils\\formatTime.js":"161","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\scrollbar\\styles.js":"162","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\svg-color\\index.js":"163","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Detail-SanPham.js":"164","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\label\\styles.js":"165","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\color-utils\\Icon.js":"166","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\header\\LanguagePopover.js":"167","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\header\\Searchbar.js":"168","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\header\\NotificationsPopover.js":"169","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\header\\AccountPopover.js":"170","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\config.js":"171","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\nav-section\\index.js":"172","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\svg-color\\SvgColor.js":"173","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\nav-section\\NavSection.js":"174","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\nav-section\\styles.js":"175","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Payment-Page1.js":"176","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\SelectAllBill.js":"177","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\OrderClient-Timeline.js":"178","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-Add-Address.js":"179","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\Payment.js":"180","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\SelectBill.js":"181","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\client\\Modals-ReturnItem.js":"182","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\client\\Modals-DetailReturnItem.js":"183"},{"size":24668,"mtime":1701429000253,"results":"184","hashOfConfig":"185"},{"size":938,"mtime":1701429000291,"results":"186","hashOfConfig":"185"},{"size":714,"mtime":1700535372462,"results":"187","hashOfConfig":"185"},{"size":377,"mtime":1700535372483,"results":"188","hashOfConfig":"185"},{"size":972,"mtime":1700535372362,"results":"189","hashOfConfig":"185"},{"size":5175,"mtime":1700535372523,"results":"190","hashOfConfig":"185"},{"size":5833,"mtime":1701429000272,"results":"191","hashOfConfig":"185"},{"size":1214,"mtime":1700535372524,"results":"192","hashOfConfig":"185"},{"size":248,"mtime":1700535372442,"results":"193","hashOfConfig":"185"},{"size":42,"mtime":1700535372457,"results":"194","hashOfConfig":"185"},{"size":1591,"mtime":1700535372475,"results":"195","hashOfConfig":"185"},{"size":1568,"mtime":1700535372472,"results":"196","hashOfConfig":"185"},{"size":13232,"mtime":1701527289517,"results":"197","hashOfConfig":"185"},{"size":8747,"mtime":1700535372478,"results":"198","hashOfConfig":"185"},{"size":8632,"mtime":1701429000242,"results":"199","hashOfConfig":"185"},{"size":35652,"mtime":1701529067560,"results":"200","hashOfConfig":"185"},{"size":21624,"mtime":1701528841537,"results":"201","hashOfConfig":"185"},{"size":15033,"mtime":1701526999768,"results":"202","hashOfConfig":"185"},{"size":21513,"mtime":1701429000248,"results":"203","hashOfConfig":"185"},{"size":8885,"mtime":1700535372482,"results":"204","hashOfConfig":"185"},{"size":3256,"mtime":1701429000243,"results":"205","hashOfConfig":"185"},{"size":2165,"mtime":1700535372482,"results":"206","hashOfConfig":"185"},{"size":20089,"mtime":1701429000260,"results":"207","hashOfConfig":"185"},{"size":1710,"mtime":1700535372478,"results":"208","hashOfConfig":"185"},{"size":14338,"mtime":1700535372483,"results":"209","hashOfConfig":"185"},{"size":23974,"mtime":1701743919911,"results":"210","hashOfConfig":"185"},{"size":23901,"mtime":1700535372483,"results":"211","hashOfConfig":"185"},{"size":7377,"mtime":1701429000265,"results":"212","hashOfConfig":"185"},{"size":12776,"mtime":1700535372478,"results":"213","hashOfConfig":"185"},{"size":7164,"mtime":1700535372478,"results":"214","hashOfConfig":"185"},{"size":6277,"mtime":1700535372478,"results":"215","hashOfConfig":"185"},{"size":4913,"mtime":1700535372483,"results":"216","hashOfConfig":"185"},{"size":13570,"mtime":1700535372478,"results":"217","hashOfConfig":"185"},{"size":10633,"mtime":1700535372483,"results":"218","hashOfConfig":"185"},{"size":8737,"mtime":1700535372483,"results":"219","hashOfConfig":"185"},{"size":9532,"mtime":1700535372475,"results":"220","hashOfConfig":"185"},{"size":30261,"mtime":1700535372475,"results":"221","hashOfConfig":"185"},{"size":13746,"mtime":1700535372483,"results":"222","hashOfConfig":"185"},{"size":12478,"mtime":1700535372483,"results":"223","hashOfConfig":"185"},{"size":10354,"mtime":1701429000268,"results":"224","hashOfConfig":"185"},{"size":14321,"mtime":1700535372483,"results":"225","hashOfConfig":"185"},{"size":46,"mtime":1700535372467,"results":"226","hashOfConfig":"185"},{"size":516,"mtime":1700535372467,"results":"227","hashOfConfig":"185"},{"size":2040,"mtime":1701072635733,"results":"228","hashOfConfig":"185"},{"size":1261,"mtime":1700535372524,"results":"229","hashOfConfig":"185"},{"size":2435,"mtime":1700535372531,"results":"230","hashOfConfig":"185"},{"size":43,"mtime":1700535372472,"results":"231","hashOfConfig":"185"},{"size":3000,"mtime":1700535372530,"results":"232","hashOfConfig":"185"},{"size":1306,"mtime":1700535372524,"results":"233","hashOfConfig":"185"},{"size":335,"mtime":1700535372457,"results":"234","hashOfConfig":"185"},{"size":2070,"mtime":1700535372442,"results":"235","hashOfConfig":"185"},{"size":4415,"mtime":1700535372442,"results":"236","hashOfConfig":"185"},{"size":2108,"mtime":1701429000278,"results":"237","hashOfConfig":"185"},{"size":1640,"mtime":1701429000280,"results":"238","hashOfConfig":"185"},{"size":1943,"mtime":1700535372368,"results":"239","hashOfConfig":"185"},{"size":736,"mtime":1700535372372,"results":"240","hashOfConfig":"185"},{"size":2191,"mtime":1700535372518,"results":"241","hashOfConfig":"185"},{"size":1525,"mtime":1700535372522,"results":"242","hashOfConfig":"185"},{"size":662,"mtime":1700535372529,"results":"243","hashOfConfig":"185"},{"size":3204,"mtime":1701429000212,"results":"244","hashOfConfig":"185"},{"size":3069,"mtime":1700535372458,"results":"245","hashOfConfig":"185"},{"size":11045,"mtime":1700535372462,"results":"246","hashOfConfig":"185"},{"size":3838,"mtime":1700535372462,"results":"247","hashOfConfig":"185"},{"size":4254,"mtime":1700535372458,"results":"248","hashOfConfig":"185"},{"size":9009,"mtime":1701429000215,"results":"249","hashOfConfig":"185"},{"size":12357,"mtime":1701529121706,"results":"250","hashOfConfig":"185"},{"size":3783,"mtime":1701528266213,"results":"251","hashOfConfig":"185"},{"size":1178,"mtime":1700535372514,"results":"252","hashOfConfig":"185"},{"size":10390,"mtime":1701505768318,"results":"253","hashOfConfig":"185"},{"size":263,"mtime":1700535372512,"results":"254","hashOfConfig":"185"},{"size":3098,"mtime":1700535372458,"results":"255","hashOfConfig":"185"},{"size":6647,"mtime":1700535372362,"results":"256","hashOfConfig":"185"},{"size":2068,"mtime":1700535372522,"results":"257","hashOfConfig":"185"},{"size":4266,"mtime":1700535372362,"results":"258","hashOfConfig":"185"},{"size":38,"mtime":1700535372450,"results":"259","hashOfConfig":"185"},{"size":2829,"mtime":1700535372483,"results":"260","hashOfConfig":"185"},{"size":40,"mtime":1700535372458,"results":"261","hashOfConfig":"185"},{"size":990,"mtime":1701429000282,"results":"262","hashOfConfig":"185"},{"size":126,"mtime":1700535372520,"results":"263","hashOfConfig":"185"},{"size":912,"mtime":1700535372532,"results":"264","hashOfConfig":"185"},{"size":1221,"mtime":1700535372462,"results":"265","hashOfConfig":"185"},{"size":1116,"mtime":1700535372523,"results":"266","hashOfConfig":"185"},{"size":814,"mtime":1700535372519,"results":"267","hashOfConfig":"185"},{"size":3137,"mtime":1700535372478,"results":"268","hashOfConfig":"185"},{"size":655,"mtime":1700535372467,"results":"269","hashOfConfig":"185"},{"size":587,"mtime":1700535372499,"results":"270","hashOfConfig":"185"},{"size":286,"mtime":1700535372508,"results":"271","hashOfConfig":"185"},{"size":185,"mtime":1700535372499,"results":"272","hashOfConfig":"185"},{"size":35,"mtime":1700535372451,"results":"273","hashOfConfig":"185"},{"size":684,"mtime":1700535372514,"results":"274","hashOfConfig":"185"},{"size":700,"mtime":1700535372508,"results":"275","hashOfConfig":"185"},{"size":670,"mtime":1700535372502,"results":"276","hashOfConfig":"185"},{"size":775,"mtime":1700535372512,"results":"277","hashOfConfig":"185"},{"size":701,"mtime":1700535372512,"results":"278","hashOfConfig":"185"},{"size":794,"mtime":1700535372512,"results":"279","hashOfConfig":"185"},{"size":36,"mtime":1700535372451,"results":"280","hashOfConfig":"185"},{"size":1364,"mtime":1700535372508,"results":"281","hashOfConfig":"185"},{"size":195,"mtime":1700535372442,"results":"282","hashOfConfig":"185"},{"size":684,"mtime":1700535372514,"results":"283","hashOfConfig":"185"},{"size":257,"mtime":1700535372512,"results":"284","hashOfConfig":"185"},{"size":327,"mtime":1700535372508,"results":"285","hashOfConfig":"185"},{"size":422,"mtime":1700535372517,"results":"286","hashOfConfig":"185"},{"size":1123,"mtime":1700535372522,"results":"287","hashOfConfig":"185"},{"size":676,"mtime":1700535372512,"results":"288","hashOfConfig":"185"},{"size":2593,"mtime":1700535372532,"results":"289","hashOfConfig":"185"},{"size":1402,"mtime":1700535372467,"results":"290","hashOfConfig":"185"},{"size":742,"mtime":1700535372467,"results":"291","hashOfConfig":"185"},{"size":691,"mtime":1700535372467,"results":"292","hashOfConfig":"185"},{"size":53,"mtime":1700535372508,"results":"293","hashOfConfig":"185"},{"size":8598,"mtime":1701429000236,"results":"294","hashOfConfig":"185"},{"size":3113,"mtime":1700535372462,"results":"295","hashOfConfig":"185"},{"size":447,"mtime":1700535372520,"results":"296","hashOfConfig":"185"},{"size":1156,"mtime":1700535372527,"results":"297","hashOfConfig":"185"},{"size":852,"mtime":1700535372528,"results":"298","hashOfConfig":"185"},{"size":341,"mtime":1700535372529,"results":"299","hashOfConfig":"185"},{"size":314,"mtime":1700535372528,"results":"300","hashOfConfig":"185"},{"size":1776,"mtime":1700535372528,"results":"301","hashOfConfig":"185"},{"size":741,"mtime":1700535372512,"results":"302","hashOfConfig":"185"},{"size":419,"mtime":1700535372527,"results":"303","hashOfConfig":"185"},{"size":365,"mtime":1700535372529,"results":"304","hashOfConfig":"185"},{"size":289,"mtime":1700535372526,"results":"305","hashOfConfig":"185"},{"size":360,"mtime":1700535372529,"results":"306","hashOfConfig":"185"},{"size":647,"mtime":1700535372442,"results":"307","hashOfConfig":"185"},{"size":3060,"mtime":1700535372362,"results":"308","hashOfConfig":"185"},{"size":966,"mtime":1700535372457,"results":"309","hashOfConfig":"185"},{"size":2210,"mtime":1700535372492,"results":"310","hashOfConfig":"185"},{"size":4207,"mtime":1700535372492,"results":"311","hashOfConfig":"185"},{"size":1278,"mtime":1700535372492,"results":"312","hashOfConfig":"185"},{"size":2366,"mtime":1700535372492,"results":"313","hashOfConfig":"185"},{"size":2128,"mtime":1700535372492,"results":"314","hashOfConfig":"185"},{"size":2087,"mtime":1700535372502,"results":"315","hashOfConfig":"185"},{"size":1884,"mtime":1700535372492,"results":"316","hashOfConfig":"185"},{"size":1377,"mtime":1700535372492,"results":"317","hashOfConfig":"185"},{"size":1335,"mtime":1700535372492,"results":"318","hashOfConfig":"185"},{"size":1981,"mtime":1700535372492,"results":"319","hashOfConfig":"185"},{"size":1658,"mtime":1700535372502,"results":"320","hashOfConfig":"185"},{"size":2407,"mtime":1700535372508,"results":"321","hashOfConfig":"185"},{"size":5065,"mtime":1700535372499,"results":"322","hashOfConfig":"185"},{"size":2404,"mtime":1700535372508,"results":"323","hashOfConfig":"185"},{"size":1413,"mtime":1700535372499,"results":"324","hashOfConfig":"185"},{"size":593,"mtime":1700535372499,"results":"325","hashOfConfig":"185"},{"size":3413,"mtime":1700535372451,"results":"326","hashOfConfig":"185"},{"size":1214,"mtime":1700535372442,"results":"327","hashOfConfig":"185"},{"size":1395,"mtime":1700535372450,"results":"328","hashOfConfig":"185"},{"size":599,"mtime":1700535372502,"results":"329","hashOfConfig":"185"},{"size":1211,"mtime":1700535372442,"results":"330","hashOfConfig":"185"},{"size":2214,"mtime":1700535372499,"results":"331","hashOfConfig":"185"},{"size":1002,"mtime":1700535372442,"results":"332","hashOfConfig":"185"},{"size":1614,"mtime":1700535372502,"results":"333","hashOfConfig":"185"},{"size":1697,"mtime":1700535372502,"results":"334","hashOfConfig":"185"},{"size":1715,"mtime":1700535372502,"results":"335","hashOfConfig":"185"},{"size":1251,"mtime":1700535372502,"results":"336","hashOfConfig":"185"},{"size":2743,"mtime":1700535372502,"results":"337","hashOfConfig":"185"},{"size":5531,"mtime":1700535372502,"results":"338","hashOfConfig":"185"},{"size":604,"mtime":1700535372502,"results":"339","hashOfConfig":"185"},{"size":10884,"mtime":1700535372502,"results":"340","hashOfConfig":"185"},{"size":4576,"mtime":1701429000276,"results":"341","hashOfConfig":"185"},{"size":1982,"mtime":1700535372467,"results":"342","hashOfConfig":"185"},{"size":3556,"mtime":1700535372467,"results":"343","hashOfConfig":"185"},{"size":476,"mtime":1701428999982,"results":"344","hashOfConfig":"185"},{"size":663,"mtime":1700535372532,"results":"345","hashOfConfig":"185"},{"size":811,"mtime":1700535372458,"results":"346","hashOfConfig":"185"},{"size":39,"mtime":1700535372458,"results":"347","hashOfConfig":"185"},{"size":12853,"mtime":1700535372462,"results":"348","hashOfConfig":"185"},{"size":2269,"mtime":1701072637143,"results":"349","hashOfConfig":"185"},{"size":1781,"mtime":1700535372442,"results":"350","hashOfConfig":"185"},{"size":2214,"mtime":1700535372467,"results":"351","hashOfConfig":"185"},{"size":2187,"mtime":1700535372467,"results":"352","hashOfConfig":"185"},{"size":7760,"mtime":1700535372467,"results":"353","hashOfConfig":"185"},{"size":2989,"mtime":1700535372467,"results":"354","hashOfConfig":"185"},{"size":1211,"mtime":1700535372467,"results":"355","hashOfConfig":"185"},{"size":41,"mtime":1700535372454,"results":"356","hashOfConfig":"185"},{"size":721,"mtime":1700535372458,"results":"357","hashOfConfig":"185"},{"size":1284,"mtime":1700535372454,"results":"358","hashOfConfig":"185"},{"size":690,"mtime":1700535372454,"results":"359","hashOfConfig":"185"},{"size":15268,"mtime":1701442051253,"results":"360","hashOfConfig":"185"},{"size":13627,"mtime":1701762161437,"results":"361","hashOfConfig":"185"},{"size":21546,"mtime":1701765419717,"results":"362","hashOfConfig":"185"},{"size":9164,"mtime":1701429000230,"results":"363","hashOfConfig":"185"},{"size":348,"mtime":1701429000286,"results":"364","hashOfConfig":"185"},{"size":178,"mtime":1701689545894,"results":"365","hashOfConfig":"185"},{"size":5666,"mtime":1701765730584,"results":"366","hashOfConfig":"185"},{"size":4835,"mtime":1701765727578,"results":"367","hashOfConfig":"185"},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},"9sjma0",{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"371"},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"371"},{"filePath":"414","messages":"415","suppressedMessages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"417","usedDeprecatedRules":"371"},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"371"},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"371"},{"filePath":"438","messages":"439","suppressedMessages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"371"},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"445","messages":"446","suppressedMessages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"371"},{"filePath":"452","messages":"453","suppressedMessages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"371"},{"filePath":"459","messages":"460","suppressedMessages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"462","messages":"463","suppressedMessages":"464","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"465","usedDeprecatedRules":"371"},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"371"},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"371"},{"filePath":"474","messages":"475","suppressedMessages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"477","messages":"478","suppressedMessages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"480","messages":"481","suppressedMessages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"371"},{"filePath":"484","messages":"485","suppressedMessages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"493","usedDeprecatedRules":"371"},{"filePath":"494","messages":"495","suppressedMessages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"503","usedDeprecatedRules":"371"},{"filePath":"504","messages":"505","suppressedMessages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"371"},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"511","messages":"512","suppressedMessages":"513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"514","messages":"515","suppressedMessages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"517","messages":"518","suppressedMessages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"520","messages":"521","suppressedMessages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"523","messages":"524","suppressedMessages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"526","messages":"527","suppressedMessages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"529","messages":"530","suppressedMessages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"544","messages":"545","suppressedMessages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"547","messages":"548","suppressedMessages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},{"filePath":"550","messages":"551","suppressedMessages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"553","messages":"554","suppressedMessages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"556","messages":"557","suppressedMessages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":8,"source":"559","usedDeprecatedRules":"371"},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"371"},{"filePath":"582","messages":"583","suppressedMessages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"585","messages":"586","suppressedMessages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"594","messages":"595","suppressedMessages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"597","messages":"598","suppressedMessages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"600","messages":"601","suppressedMessages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"371"},{"filePath":"616","messages":"617","suppressedMessages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"619","messages":"620","suppressedMessages":"621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"622","messages":"623","suppressedMessages":"624","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"625","messages":"626","suppressedMessages":"627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"628","messages":"629","suppressedMessages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"631","messages":"632","suppressedMessages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":6,"source":"634","usedDeprecatedRules":"371"},{"filePath":"635","messages":"636","suppressedMessages":"637","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"638","usedDeprecatedRules":"371"},{"filePath":"639","messages":"640","suppressedMessages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"371"},{"filePath":"643","messages":"644","suppressedMessages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"646","usedDeprecatedRules":"371"},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"659","messages":"660","suppressedMessages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"662","messages":"663","suppressedMessages":"664","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"665","messages":"666","suppressedMessages":"667","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"668","messages":"669","suppressedMessages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"671","messages":"672","suppressedMessages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"674","messages":"675","suppressedMessages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"677","messages":"678","suppressedMessages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"680","messages":"681","suppressedMessages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"683","messages":"684","suppressedMessages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"686","messages":"687","suppressedMessages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"689","messages":"690","suppressedMessages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"692","messages":"693","suppressedMessages":"694","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"695","messages":"696","suppressedMessages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"698","messages":"699","suppressedMessages":"700","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"701","messages":"702","suppressedMessages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"704","messages":"705","suppressedMessages":"706","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"707","messages":"708","suppressedMessages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"710","messages":"711","suppressedMessages":"712","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"713","messages":"714","suppressedMessages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"716","messages":"717","suppressedMessages":"718","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"719","messages":"720","suppressedMessages":"721","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722","usedDeprecatedRules":"371"},{"filePath":"723","messages":"724","suppressedMessages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"726","messages":"727","suppressedMessages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"729","messages":"730","suppressedMessages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"732","messages":"733","suppressedMessages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"735","messages":"736","suppressedMessages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"738","messages":"739","suppressedMessages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"741","messages":"742","suppressedMessages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"744","messages":"745","suppressedMessages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"747","messages":"748","suppressedMessages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"750","messages":"751","suppressedMessages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"753","messages":"754","suppressedMessages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"756","messages":"757","suppressedMessages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"759","messages":"760","suppressedMessages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"762","messages":"763","suppressedMessages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"765","messages":"766","suppressedMessages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"768","messages":"769","suppressedMessages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"771","messages":"772","suppressedMessages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"774","messages":"775","suppressedMessages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"777","messages":"778","suppressedMessages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"780","messages":"781","suppressedMessages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"783","messages":"784","suppressedMessages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"786","messages":"787","suppressedMessages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"789","messages":"790","suppressedMessages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"792","messages":"793","suppressedMessages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"795","messages":"796","suppressedMessages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"798","messages":"799","suppressedMessages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"801","messages":"802","suppressedMessages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"804","messages":"805","suppressedMessages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},{"filePath":"807","messages":"808","suppressedMessages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"810","messages":"811","suppressedMessages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},{"filePath":"813","messages":"814","suppressedMessages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},{"filePath":"816","messages":"817","suppressedMessages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"819","messages":"820","suppressedMessages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"822","messages":"823","suppressedMessages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"825","messages":"826","suppressedMessages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"828","messages":"829","suppressedMessages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"831","messages":"832","suppressedMessages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"834","messages":"835","suppressedMessages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"837","messages":"838","suppressedMessages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"840","messages":"841","suppressedMessages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"843","messages":"844","suppressedMessages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"846","messages":"847","suppressedMessages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"849","messages":"850","suppressedMessages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"852","messages":"853","suppressedMessages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"855","messages":"856","suppressedMessages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"858","messages":"859","suppressedMessages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"861","usedDeprecatedRules":"371"},{"filePath":"862","messages":"863","suppressedMessages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"865","messages":"866","suppressedMessages":"867","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"868","messages":"869","suppressedMessages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871","usedDeprecatedRules":"371"},{"filePath":"872","messages":"873","suppressedMessages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"875","messages":"876","suppressedMessages":"877","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"878","messages":"879","suppressedMessages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"881","messages":"882","suppressedMessages":"883","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"884","messages":"885","suppressedMessages":"886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"887","messages":"888","suppressedMessages":"889","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"890","messages":"891","suppressedMessages":"892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"893","messages":"894","suppressedMessages":"895","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"896","messages":"897","suppressedMessages":"898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"899","messages":"900","suppressedMessages":"901","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"902","messages":"903","suppressedMessages":"904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"905","messages":"906","suppressedMessages":"907","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"908","messages":"909","suppressedMessages":"910","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"911","messages":"912","suppressedMessages":"913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"914","messages":"915","suppressedMessages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"917","messages":"918","suppressedMessages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"920","messages":"921","suppressedMessages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"923","messages":"924","suppressedMessages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"926","messages":"927","suppressedMessages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","suppressedMessages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"932","messages":"933","suppressedMessages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"935","messages":"936","suppressedMessages":"937","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"938","messages":"939","suppressedMessages":"940","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941"},{"filePath":"942","messages":"943","suppressedMessages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Detail-product.js",[],[],["945","946","947","948","949","950","951"],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\taiKhoanKhachHangSevice.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\reportWebVitals.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\App.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\serviceWorker.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\routes.js",["952"],[],"import { Navigate, useRoutes } from 'react-router-dom';\r\n\r\n// layouts\r\nimport DashboardLayout from './layouts/dashboard';\r\nimport SimpleLayout from './layouts/simple';\r\n\r\n//\r\nimport UserPage from './pages/UserPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport Page404 from './pages/Page404';\r\nimport ProductsPage from './pages/client/ProductsPage';\r\nimport DashboardAppPage from './pages/DashboardAppPage';\r\nimport Sales from './pages/DirectSale-ADM';\r\nimport CartBillADM from './pages/Cart-Bill-ADM';\r\nimport OrderManagement from './pages/OrderManagement';\r\nimport OrderManagementTimeline from './pages/OrderManagement-Timeline';\r\nimport Home from './pages/client/Home';\r\nimport DashboardLayoutClient from './layouts/dashboard/DashboardLayout-Client';\r\nimport DiscountPage from './pages/discounts/DiscountPage';\r\nimport ModelAddNewGiamGia from './pages/discounts/ModalsAddNewGiamGia';\r\nimport ModelUpdateGiamGia from './pages/discounts/ModalsUpdateGiamGia';\r\nimport DetailProduct from './pages/client/Detail-product';\r\nimport Cart from './pages/client/Cart';\r\nimport UserStaff from './pages/Staff/Modal-User-Staff';\r\nimport AddTKNV from './pages/Staff/Modal-Add-Staff';\r\nimport UpdateTkNV from './pages/Staff/Modal-Update-Staff';\r\nimport Contact from './pages/client/Contact';\r\nimport PaymentPage1 from './pages/client/Payment-Page1';\r\n\r\n// san pham\r\nimport ProductMain from './pages/SanPham/SanPhamMain';\r\nimport ProductAdd from './pages/SanPham/ModelAdd';\r\nimport ProductUpdate from './pages/SanPham/ModelUpdate';\r\n\r\nimport ClientsPage from './pages/taiKhoanKhachHang/ClientsPage';\r\nimport AddClients from './pages/taiKhoanKhachHang/AddClients';\r\nimport UpdateClients from './pages/taiKhoanKhachHang/UpdateClients';\r\nimport AllAddress from './pages/diaChi/AllAddress';\r\nimport AddressByClient from './pages/diaChi/AddressByClient';\r\nimport AddAddress from './pages/diaChi/AddAddress';\r\nimport UpdateAddress from './pages/diaChi/UpdateAddress';\r\nimport SignUp from './pages/client/SignUp';\r\nimport OrderClientTimeline from './pages/client/OrderClient-Timeline';\r\nimport SelectAllBillOfClient from './pages/client/SelectAllBill';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Router() {\r\n  const getLocalStore = localStorage.getItem('userFormToken');\r\n  const authorities = getLocalStore && JSON.parse(getLocalStore).authorities[0].authority;\r\n\r\n  const layoutElement =\r\n    authorities === 'ROLE_ADMIN' || authorities === 'ROLE_STAFF' ? <DashboardLayout /> : <DashboardLayoutClient />;\r\n\r\n  const routes = useRoutes([\r\n    {\r\n      path: authorities === 'ROLE_ADMIN' || authorities === 'ROLE_STAFF' ? '/dashboard' : '/client',\r\n      element: layoutElement,\r\n      children:\r\n        authorities === 'ROLE_ADMIN' || authorities === 'ROLE_STAFF'\r\n          ? [\r\n              { element: <Navigate to=\"/dashboard/app\" />, index: true },\r\n              { path: 'app', element: <DashboardAppPage /> },\r\n              { path: 'bills', element: <OrderManagement /> },\r\n              { path: 'bills/time-line/:id', element: <OrderManagementTimeline /> },\r\n              { path: 'sales', element: <Sales /> },\r\n              { path: 'sales/card-bill/:id', element: <CartBillADM /> },\r\n              { path: 'staff', element: <UserStaff /> },\r\n              { path: 'addNewTKNV', element: <AddTKNV /> },\r\n              { path: 'detail/:id', element: <UpdateTkNV /> },\r\n              { path: 'staff', element: <UserPage /> },\r\n              { path: 'discounts', element: <DiscountPage /> },\r\n              { path: 'discount/add', element: <ModelAddNewGiamGia /> },\r\n              { path: 'discount/update/:id', element: <ModelUpdateGiamGia /> },\r\n              { path: 'clients', element: <ClientsPage /> },\r\n              { path: 'clients/add', element: <AddClients /> },\r\n              { path: 'clients/detail/:id', element: <UpdateClients /> },\r\n              { path: 'address', element: <AllAddress /> },\r\n              { path: 'address/:id', element: <AddressByClient /> },\r\n              { path: 'address/add/:id', element: <AddAddress /> },\r\n              { path: 'address/detail/:id', element: <UpdateAddress /> },\r\n              { path: 'products', element: <ProductMain /> },\r\n              { path: 'products/add', element: <ProductAdd /> },\r\n              { path: 'products/update/:id', element: <ProductUpdate /> },\r\n            ]\r\n          : [\r\n              { element: <Navigate to=\"/client/home\" />, index: true },\r\n              { path: 'home', element: <Home /> },\r\n              { path: 'detail/:id', element: <DetailProduct /> },\r\n              { path: 'cart', element: <Cart /> },\r\n              { path: 'payment/:id', element: <PaymentPage1 /> },\r\n              { path: 'contact', element: <Contact /> },\r\n              { path: 'products', element: <ProductsPage /> },\r\n              { path: 'client-timeline/:id', element: <OrderClientTimeline /> },\r\n              { path: 'select-bill-client/:idKH', element: <SelectAllBillOfClient /> },\r\n              // { path: 'select-bill-client', element: <SelectAllBillOfClient /> },\r\n            ],\r\n    },\r\n    {\r\n      path: 'login',\r\n      element: <LoginPage />,\r\n    },\r\n    {\r\n      path: 'signUp',\r\n      element: <SignUp />,\r\n    },\r\n    {\r\n      element: <SimpleLayout />,\r\n      children: [\r\n        {\r\n          element:\r\n            authorities === 'ROLE_ADMIN' || authorities === 'ROLE_STAFF' ? (\r\n              <Navigate to=\"/dashboard/app\" />\r\n            ) : (\r\n              <Navigate to=\"/client/home\" />\r\n            ),\r\n          index: true,\r\n        },\r\n        { path: '404', element: <Page404 /> },\r\n        { path: '*', element: <Navigate to=\"/404\" /> },\r\n      ],\r\n    },\r\n    {\r\n      path: '*',\r\n      element: <Navigate to=\"/404\" replace />,\r\n    },\r\n  ]);\r\n\r\n  return routes;\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\chart\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\scroll-to-top\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Page404.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\BlogPage.js",[],[],["953","954","955","956","957","958","959"],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\DirectSale-ADM.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\UserPage.js",["960","961"],[],"import { Helmet } from 'react-helmet-async';\r\n// import { filter } from 'lodash';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useEffect, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Button,\r\n  Popover,\r\n  Checkbox,\r\n  TableRow,\r\n  MenuItem,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  TableContainer,\r\n  TablePagination,\r\n} from '@mui/material';\r\n// components\r\nimport Iconify from '../components/iconify';\r\nimport Scrollbar from '../components/scrollbar';\r\n// sections\r\nimport { UserListHead, UserListToolbar } from '../sections/@dashboard/user';\r\n// mock\r\nimport USERLIST from '../_mock/user';\r\nimport { fetchAllTKKH } from '../service/taiKhoanKhachHangSevice';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Name', alignRight: false },\r\n  { id: 'company', label: 'Company', alignRight: false },\r\n  { id: 'role', label: 'Role', alignRight: false },\r\n  { id: 'isVerified', label: 'Verified', alignRight: false },\r\n  { id: 'status', label: 'Status', alignRight: false },\r\n  { id: '' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// function descendingComparator(a, b, orderBy) {\r\n//   if (b[orderBy] < a[orderBy]) {\r\n//     return -1;\r\n//   }\r\n//   if (b[orderBy] > a[orderBy]) {\r\n//     return 1;\r\n//   }\r\n//   return 0;\r\n// }\r\n\r\n// function getComparator(order, orderBy) {\r\n//   return order === 'desc'\r\n//     ? (a, b) => descendingComparator(a, b, orderBy)\r\n//     : (a, b) => -descendingComparator(a, b, orderBy);\r\n// }\r\n\r\n// function applySortFilter(array, comparator, query) {\r\n//   const stabilizedThis = array.map((el, index) => [el, index]);\r\n//   stabilizedThis.sort((a, b) => {\r\n//     const order = comparator(a[0], b[0]);\r\n//     if (order !== 0) return order;\r\n//     return a[1] - b[1];\r\n//   });\r\n//   if (query) {\r\n//     return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n//   }\r\n//   return stabilizedThis.map((el) => el[0]);\r\n// }\r\n\r\nexport default function UserPage() {\r\n  // Select list of users\r\n\r\n  const [listData, setListData] = useState([]);\r\n\r\n  const getListData = async (page, query) => {\r\n    try {\r\n      const res = await fetchAllTKKH(page, query);\r\n      console.log('Check res: ', res);\r\n      setListData(res.content);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getListData(0);\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const [orderBy, setOrderBy] = useState('name');\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = USERLIST.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setPage(0);\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  // const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - USERLIST.length) : 0;\r\n\r\n  // const filteredUsers = applySortFilter(USERLIST, getComparator(order, orderBy), filterName);\r\n\r\n  // const isNotFound = !filteredUsers.length && !!filterName;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> User | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            User\r\n          </Typography>\r\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n            New User\r\n          </Button>\r\n        </Stack>\r\n\r\n        <Card>\r\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              {/* <h1>{listData.data.content.length}</h1> */}\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={listData.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {listData.map((row) => (\r\n                    <TableRow key={row.idTaiKhoan}>\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={selected.indexOf(row.id) !== -1}\r\n                          onChange={(event) => handleClick(event, row.id)}\r\n                        />\r\n                      </TableCell>\r\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                          <Avatar alt={row.name} src={row.avatarUrl} />\r\n                          <Typography variant=\"subtitle2\" noWrap>\r\n                            {row.name}\r\n                          </Typography>\r\n                        </Stack>\r\n                      </TableCell> */}\r\n                      {/* <TableCell align=\"left\">{row.company}</TableCell> */}\r\n                      <TableCell align=\"left\">{row.ho}</TableCell>\r\n                      {/* <TableCell align=\"left\">{row.isVerified ? 'Yes' : 'No'}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Label color={(row.status === 'banned' && 'error') || 'success'}>\r\n                          {sentenceCase(row.status)}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <IconButton size=\"large\" color=\"inherit\" onClick={handleOpenMenu}>\r\n                          <Iconify icon={'eva:more-vertical-fill'} />\r\n                        </IconButton>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={USERLIST.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 140,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem>\r\n          <Iconify icon={'eva:edit-fill'} sx={{ mr: 2 }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem sx={{ color: 'error.main' }}>\r\n          <Iconify icon={'eva:trash-2-outline'} sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\DashboardAppPage.js",["962","963","964","965","966","967","968"],[],"import { Helmet } from 'react-helmet-async';\r\nimport { faker } from '@faker-js/faker';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, Container, Typography } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// icon\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSackDollar } from '@fortawesome/free-solid-svg-icons';\r\n// components\r\nimport Iconify from '../components/iconify';\r\nimport { totalRevenue, totalInvoieces, totalTheoNgay, tyLeTraHang, tongSpDaBan } from '../service/bill-service';\r\nimport { topSpTrending } from '../service/san-pham-service';\r\n// sections\r\nimport {\r\n  AppTasks,\r\n  AppNewsUpdate,\r\n  AppOrderTimeline,\r\n  AppCurrentVisits,\r\n  AppWebsiteVisits,\r\n  AppTrafficBySite,\r\n  AppWidgetSummary,\r\n  AppCurrentSubject,\r\n  AppConversionRates,\r\n} from '../sections/@dashboard/app';\r\n\r\n// ----------------------------------------------------------------------\r\nlibrary.add(faSackDollar);\r\n\r\nexport default function DashboardAppPage() {\r\n  const theme = useTheme();\r\n  const [totalBill, setTotalBill] = useState(0);\r\n  const [invoieces, setinvoieces] = useState(0);\r\n  const [spTrending, setSpTrending] = useState([]);\r\n  const [hdNgay, setheoNgay] = useState([]); // State for trending data\r\n  const [rate, setRate] = useState(0); // State for\r\n  const [allSp, setAllSp] = useState(0);\r\n\r\n  theme.palette.info.main = '#4CAF50';\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await totalRevenue();\r\n      const invoiecesResponse = await totalInvoieces();\r\n      const trendingResponse = await topSpTrending();\r\n      const rateResponse = await tyLeTraHang();\r\n      const response = await totalTheoNgay();\r\n      const allSpres = await tongSpDaBan();\r\n\r\n      setTotalBill(Number(res));\r\n      setinvoieces(Number(invoiecesResponse));\r\n      setSpTrending(trendingResponse); // Set trending data\r\n      setRate(Number(rateResponse));\r\n      setheoNgay(response);\r\n      setAllSp(Number(allSpres));\r\n\r\n      console.log(hdNgay);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const currentVisitsData = spTrending.map((item) => ({\r\n    label: item[1], // Tên quốc gia, ví dụ \"Ao Kakame\"\r\n    value: item[0], // Số lượng lượt truy cập, ví dụ 5z`\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n          Thống Kê\r\n        </Typography>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppWidgetSummary title=\"Tổng Doanh Thu (vnđ)\" total={totalBill} icon={'ant-design:android-filled'} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppWidgetSummary title=\"Tổng Đơn Hàng\" total={invoieces} color=\"info\" icon={'ant-design:apple-filled'} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppWidgetSummary\r\n              title=\"Tổng sản phẩm đã bán\"\r\n              total={allSp}\r\n              color=\"warning\"\r\n              icon={'ant-design:windows-filled'}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppWidgetSummary title=\"Tỷ Lệ Trả Hàng (%)\" total={rate} color=\"error\" icon={'ant-design:bug-filled'} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AppWebsiteVisits\r\n              title=\"Tổng Tiền Theo Ngày\"\r\n              subheader=\"Biểu đồ tổng tiền theo ngày\"\r\n              chartLabels={hdNgay.map((item) => item[0])} // Assuming the first element in each sub-array is the date\r\n              chartData={[\r\n                {\r\n                  name: 'Tổng Tiền',\r\n                  type: 'line',\r\n                  fill: 'solid',\r\n                  data: hdNgay.map((item) => item[1]), // Assuming the second element in each sub-array is the total amount\r\n                },\r\n              ]}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppCurrentVisits\r\n              title=\"Top 4 sản phẩm bán chạy \"\r\n              chartData={currentVisitsData} // Truyền dữ liệu từ mảng đã biến đổi\r\n              chartColors={[\r\n                '#4CAF50', // Sử dụng màu xanh lá thay thế\r\n                theme.palette.primary.main,\r\n                theme.palette.warning.main,\r\n                theme.palette.error.main,\r\n              ]}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AppConversionRates\r\n              title=\"Conversion Rates\"\r\n              subheader=\"(+43%) than last year\"\r\n              chartData={[\r\n                { label: 'Italy', value: 400 },\r\n                { label: 'Japan', value: 430 },\r\n                { label: 'China', value: 448 },\r\n                { label: 'Canada', value: 470 },\r\n                { label: 'France', value: 540 },\r\n                { label: 'Germany', value: 580 },\r\n                { label: 'South Korea', value: 690 },\r\n                { label: 'Netherlands', value: 1100 },\r\n                { label: 'United States', value: 1200 },\r\n                { label: 'United Kingdom', value: 1380 },\r\n              ]}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppCurrentSubject\r\n              title=\"Current Subject\"\r\n              chartLabels={['English', 'History', 'Physics', 'Geography', 'Chinese', 'Math']}\r\n              chartData={[\r\n                { name: 'Series 1', data: [80, 50, 30, 40, 100, 20] },\r\n                { name: 'Series 2', data: [20, 30, 40, 80, 20, 80] },\r\n                { name: 'Series 3', data: [44, 76, 78, 13, 43, 10] },\r\n              ]}\r\n              chartColors={[...Array(6)].map(() => theme.palette.text.secondary)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AppNewsUpdate\r\n              title=\"News Update\"\r\n              list={[...Array(5)].map((_, index) => ({\r\n                id: faker.datatype.uuid(),\r\n                title: faker.name.jobTitle(),\r\n                description: faker.name.jobTitle(),\r\n                image: `/assets/images/covers/cover_${index + 1}.jpg`,\r\n                postedAt: faker.date.recent(),\r\n              }))}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppOrderTimeline\r\n              title=\"Order Timeline\"\r\n              list={[...Array(5)].map((_, index) => ({\r\n                id: faker.datatype.uuid(),\r\n                title: [\r\n                  '1983, orders, $4220',\r\n                  '12 Invoices have been paid',\r\n                  'Order #37745 from September',\r\n                  'New order placed #XF-2356',\r\n                  'New order placed #XF-2346',\r\n                ][index],\r\n                type: `order${index + 1}`,\r\n                time: faker.date.past(),\r\n              }))}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppTrafficBySite\r\n              title=\"Traffic by Site\"\r\n              list={[\r\n                {\r\n                  name: 'FaceBook',\r\n                  value: 323234,\r\n                  icon: <Iconify icon={'eva:facebook-fill'} color=\"#1877F2\" width={32} />,\r\n                },\r\n                {\r\n                  name: 'Google',\r\n                  value: 341212,\r\n                  icon: <Iconify icon={'eva:google-fill'} color=\"#DF3E30\" width={32} />,\r\n                },\r\n                {\r\n                  name: 'Linkedin',\r\n                  value: 411213,\r\n                  icon: <Iconify icon={'eva:linkedin-fill'} color=\"#006097\" width={32} />,\r\n                },\r\n                {\r\n                  name: 'Twitter',\r\n                  value: 443232,\r\n                  icon: <Iconify icon={'eva:twitter-fill'} color=\"#1C9CEA\" width={32} />,\r\n                },\r\n              ]}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AppTasks\r\n              title=\"Tasks\"\r\n              list={[\r\n                { id: '1', label: 'Create FireStone Logo' },\r\n                { id: '2', label: 'Add SCSS and JS files if required' },\r\n                { id: '3', label: 'Stakeholder Meeting' },\r\n                { id: '4', label: 'Scoping & Estimations' },\r\n                { id: '5', label: 'Sprint Showcase' },\r\n              ]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Cart-Bill-ADM.js",["969"],[],"import '../scss/Car-Bill-ADM.scss';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  Button,\r\n  Chip,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Snackbar,\r\n  Stack,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport axios from 'axios';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport DeleteSweepOutlinedIcon from '@mui/icons-material/DeleteSweepOutlined';\r\nimport { pink } from '@mui/material/colors';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Alert, Image } from 'react-bootstrap';\r\nimport { styled } from '@mui/material/styles';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport ModalDeleteDirectSale from '../forms/Modal-Delete-DirectSale';\r\nimport ModalCreateBillOnline from '../forms/Modal-Create-Online';\r\nimport { updateTongTien } from '../service/OrderManagementTimeLine';\r\nimport ModalAddKhachHang from '../forms/Modals-AddKhachHang';\r\nimport { detailBill, finByProductOnCart, findById, postAddBill, selectAllInvoiceWaiting } from '../service/BillSevice';\r\nimport ModalAddProduct from '../forms/Modals-AddProduct';\r\nimport ModalUpdateProductOnCart from '../forms/Modals-Update-Product-Cart';\r\nimport ModalDeleteProductOnCart from '../forms/Modal-Delete-Product';\r\nimport ModalDeleteAllProductOnCart from '../forms/Modal-Delete-All-Product';\r\nimport ModalPaymentComfirm from '../forms/Modal-Payment-Confirm';\r\nimport Iconify from '../components/iconify';\r\n\r\n// Dislay invoice waiting\r\nconst AntTabs = styled(Tabs)({\r\n  borderBottom: '1px solid #e8e8e8',\r\n  '& .MuiTabs-indicator': {\r\n    backgroundColor: '#1890ff',\r\n  },\r\n});\r\n\r\nconst AntTab = styled((props) => <Tab disableRipple {...props} />)(({ theme }) => ({\r\n  textTransform: 'none',\r\n  minWidth: 0,\r\n  [theme.breakpoints.up('sm')]: {\r\n    minWidth: 0,\r\n  },\r\n  fontWeight: theme.typography.fontWeightRegular,\r\n  marginRight: theme.spacing(1),\r\n  color: 'rgba(0, 0, 0, 0.85)',\r\n  fontFamily: [\r\n    '-apple-system',\r\n    'BlinkMacSystemFont',\r\n    '\"Segoe UI\"',\r\n    'Roboto',\r\n    '\"Helvetica Neue\"',\r\n    'Arial',\r\n    'sans-serif',\r\n    '\"Apple Color Emoji\"',\r\n    '\"Segoe UI Emoji\"',\r\n    '\"Segoe UI Symbol\"',\r\n  ].join(','),\r\n  '&:hover': {\r\n    color: '#40a9ff',\r\n    opacity: 1,\r\n  },\r\n  '&.Mui-selected': {\r\n    color: '#1890ff',\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n  '&.Mui-focusVisible': {\r\n    backgroundColor: '#d1eaff',\r\n  },\r\n}));\r\n\r\nconst CartBillADM = () => {\r\n  // Get IdHd on http\r\n  const param = useParams();\r\n  const idHdParam = param.id;\r\n\r\n  // Detail Hd\r\n  const [listHD, setlistHD] = useState([]);\r\n\r\n  const getDetailHD = useCallback(async () => {\r\n    try {\r\n      const getData = await detailBill(idHdParam);\r\n      console.log('getData: ', getData);\r\n      setlistHD(getData);\r\n    } catch (error) {\r\n      console.error('Error: ', error);\r\n    }\r\n  }, [idHdParam]);\r\n  useEffect(() => {\r\n    getDetailHD();\r\n  }, [getDetailHD]);\r\n  // Select invoice waiting.\r\n  const [tabs, setTabs] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const getListData = useCallback(async () => {\r\n    try {\r\n      const res = await selectAllInvoiceWaiting();\r\n      setTabs(res);\r\n      const idHdParamNumber = parseInt(idHdParam, 10);\r\n      const checkIndexTab = res.findIndex((item) => item.idHd === idHdParamNumber);\r\n      console.log('checkIndexTab: ', checkIndexTab);\r\n\r\n      setValue(checkIndexTab);\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  }, [idHdParam]);\r\n\r\n  useEffect(() => {\r\n    getListData();\r\n  }, [getListData]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    console.log('newValue', newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChange1 = (tabLabel) => {\r\n    navigate(`/dashboard/sales/card-bill/${tabLabel.idHd}`);\r\n  };\r\n\r\n  // Create a new Detail Direct\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const handleAddTab = async () => {\r\n    if (tabs.length >= 5) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Đã Tồn Tại 5 Hóa Đơn Chờ. Vui Lòng Thanh Toán!!!',\r\n      });\r\n    } else {\r\n      const res = await postAddBill(1, 8);\r\n      getListData();\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Tạo thành công hóa đơn',\r\n      });\r\n\r\n      // Update the tabs state to include the new tab\r\n      const nextTabNumber = tabs.length + 1;\r\n      const newTab = { maHd: `Tab ${nextTabNumber}` };\r\n      console.log('Check newTab: ', newTab);\r\n      const newTabs = [...tabs, newTab];\r\n      console.log('Check newTabs: ', newTabs);\r\n      setTabs(newTabs);\r\n\r\n      // Set the value state to the index of the newly added tab\r\n      setValue(newTabs.length - 1);\r\n\r\n      const getIdHttp = res.idHd;\r\n      navigate(`/dashboard/sales/card-bill/${getIdHttp}`);\r\n    }\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [information, setInformation] = useState();\r\n  const handleCloseTab = (index) => {\r\n    setOpen(true);\r\n    setInformation(index);\r\n  };\r\n  const handleCloseDeleteInvoice = () => {\r\n    setOpen(false);\r\n    getListData();\r\n    setValue(0);\r\n    const newTab = { maHd: `Tab ${1}` };\r\n    const newTabs = [...tabs, newTab];\r\n    setTabs(newTabs);\r\n    navigate(`/dashboard/sales/card-bill/${newTabs[0].idHd}`);\r\n  };\r\n\r\n  // Select Product On Cart\r\n  const [DataCart, setDataCart] = useState([]);\r\n  // const [numberPages, setNumberPages] = useState(0);\r\n  // const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const selectDataCart = useCallback(async () => {\r\n    try {\r\n      const res = await finByProductOnCart(idHdParam);\r\n      if (res) {\r\n        setDataCart(res);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [idHdParam]);\r\n  useEffect(() => {\r\n    selectDataCart();\r\n  }, [selectDataCart]);\r\n\r\n  // const handlePageClick = (page) => {\r\n  //   selectDataCart(page);\r\n  //   setCurrentPage(page);\r\n  // };\r\n  // Add Product\r\n  const [showModalsAdd, setShowModalAdd] = useState(false);\r\n  const handleAddProduct = () => {\r\n    setShowModalAdd(true);\r\n  };\r\n  const handleClose = () => {\r\n    setShowModalAdd(false);\r\n  };\r\n\r\n  // Delete product on cart\r\n  const [showModalsDelete, setShowModalDelete] = useState(false);\r\n  const [itemDelete, setIntemDelete] = useState();\r\n  const handleDelete = (item) => {\r\n    console.log('Check item', item);\r\n    setShowModalDelete(true);\r\n    setIntemDelete(item);\r\n  };\r\n  const handleCloseModalDelelte = () => {\r\n    setShowModalDelete(false);\r\n  };\r\n  // Delete all products\r\n  const [showModalsDeleteAll, setShowModalDeleteAll] = useState(false);\r\n  const handDeleteAll = () => {\r\n    setShowModalDeleteAll(true);\r\n  };\r\n  const handCloseDeleteAll = () => {\r\n    setShowModalDeleteAll(false);\r\n  };\r\n  // Update classify on the cart\r\n  const [showModalsUpdate, setShowModalsUpdate] = useState(false);\r\n  const [itemUpdateClassify, setItemUpdateClassify] = useState({});\r\n  const [itemUpdate, setItemUpdate] = useState({});\r\n\r\n  const handleUpdateClassify = async (item) => {\r\n    setShowModalsUpdate(true);\r\n    try {\r\n      const getOneSP = await findById(item[3]);\r\n      setItemUpdateClassify(getOneSP);\r\n      setItemUpdate(item);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleCloseUpdateClassify = () => {\r\n    setShowModalsUpdate(false);\r\n  };\r\n  // Show  payment information\r\n  const [isDeliveryChecked, setIsDeliveryChecked] = useState(false);\r\n\r\n  const handleDeliveryChange = (event) => {\r\n    setIsDeliveryChecked(event.target.checked);\r\n  };\r\n\r\n  // Fetch list of provinces on component mount\r\n  const [diachiCuThe, setDiachiCuThe] = useState('');\r\n  useEffect(() => {\r\n    fetchProvinces();\r\n  }, []);\r\n\r\n  // Get API Provinces\r\n  // const host = 'https://online-gateway.ghn.vn/shiip/public-api/master-data/province';\r\n\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [selectedProvince, setSelectedProvince] = useState('');\r\n  const [districts, setDistricts] = useState([]);\r\n  const [selectedDistrict, setSelectedDistrict] = useState('');\r\n  const [wards, setWards] = useState([]);\r\n  const [selectedWard, setSelectedWard] = useState('');\r\n\r\n  const [result, setResult] = useState('');\r\n\r\n  const fetchProvinces = async () => {\r\n    try {\r\n      const response = await axios.get('https://online-gateway.ghn.vn/shiip/public-api/master-data/province', {\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      console.log('response: ', response.data.data);\r\n      setProvinces(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching provinces:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchProvinces();\r\n  }, []);\r\n\r\n  const callApiDistrict = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/master-data/district`, {\r\n        params: { province_id: selectedProvince },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      console.log('Quận/Huyện: ', response.data);\r\n      setDistricts(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching districts:', error);\r\n    }\r\n  }, [selectedProvince]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProvince) {\r\n      console.log('selectedProvince: ', selectedProvince);\r\n      callApiDistrict();\r\n    }\r\n  }, [selectedProvince, callApiDistrict]);\r\n\r\n  const callApiWard = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/master-data/ward`, {\r\n        params: { district_id: selectedDistrict },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      setWards(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching wards:', error);\r\n    }\r\n  }, [selectedDistrict]);\r\n\r\n  // API gets service pack information\r\n  const [tienShip, getTienShip] = useState(0);\r\n\r\n  const getSevice = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee`, {\r\n        params: {\r\n          service_type_id: 2,\r\n          insurance_value: 500000,\r\n          coupon: null,\r\n          from_district_id: 1542,\r\n          to_district_id: selectedDistrict,\r\n          height: 15,\r\n          length: 15,\r\n          weight: 1000,\r\n          width: 15,\r\n        },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n          shop_id: 4699724,\r\n        },\r\n      });\r\n      const totalShip = response.data?.data?.total || 0;\r\n      console.log('getSevice: ', response);\r\n      getTienShip(totalShip);\r\n    } catch (error) {\r\n      console.error('Error get service:', error);\r\n    }\r\n  }, [selectedDistrict]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDistrict) {\r\n      console.log('selectedProvince: ', selectedDistrict);\r\n      callApiWard();\r\n      getSevice();\r\n    }\r\n  }, [getSevice, selectedDistrict, callApiWard]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDistrict && selectedProvince && selectedWard) {\r\n      const selectedProvinceName =\r\n        provinces.find((province) => province.ProvinceID === selectedProvince)?.ProvinceName || '';\r\n\r\n      const selectedDistrictName =\r\n        districts.find((district) => district.DistrictID === selectedDistrict)?.DistrictName || '';\r\n\r\n      const selectedWardName = wards.find((ward) => ward.WardCode === selectedWard)?.WardName || '';\r\n\r\n      setResult(`${selectedProvinceName}, ${selectedDistrictName}, ${selectedWardName}, ${diachiCuThe}`);\r\n    }\r\n  }, [selectedDistrict, selectedProvince, selectedWard, districts, provinces, wards, diachiCuThe]);\r\n\r\n  // Show thanhTien\r\n  const [thanhTien, setThanhTien] = useState(0);\r\n  const [tongTien, setTongTien] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const calculateTotalPrice = async () => {\r\n      // let total = 0;\r\n      const total = DataCart.reduce((accumulator, item) => accumulator + item[9], 0);\r\n      // Set Tong Tien\r\n      setTongTien(total);\r\n      // Set Tien Ship\r\n      console.log('getDataShip: ', listHD.tienShip);\r\n      const totalShip = tienShip === 0 && listHD && listHD.tienShip ? listHD.tienShip : tienShip;\r\n      // Set Thanh Tien\r\n      setThanhTien(total + totalShip);\r\n      await updateTongTien(idHdParam, total, totalShip, thanhTien);\r\n    };\r\n\r\n    calculateTotalPrice();\r\n  }, [DataCart, idHdParam, tienShip, listHD, thanhTien]);\r\n\r\n  // Modal add KH\r\n  const [showModalsKH, setShowModalKH] = useState(false);\r\n  const handleAddKH = () => {\r\n    setShowModalKH(true);\r\n  };\r\n  const handleCloseAddKH = () => {\r\n    setShowModalKH(false);\r\n  };\r\n\r\n  // Handle Save\r\n  const navigate = useNavigate();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [tenKhTT, getTenKHTT] = useState('');\r\n  const [sdtKHTT, getSdtKHTT] = useState('');\r\n  const [tenKhShip, getTenKHShip] = useState('');\r\n  const [sdtKHShip, getSdtKHShip] = useState('');\r\n\r\n  const [openPayment, setOpenPayment] = useState(false);\r\n  const [openCreateOnline, setCreateOnline] = useState(false);\r\n  // const [information, setInformation] = useState();\r\n  const handleClick = async () => {\r\n    console.log('handleClick');\r\n    // const currentDate = new Date();\r\n    // const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n    if (isDeliveryChecked === false) {\r\n      setOpenPayment(true);\r\n    } else if (!tenKhShip.trim() || !sdtKHShip.trim()) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Hãy Thông Tin Người Nhận Hàng!!!',\r\n      });\r\n    } else {\r\n      setCreateOnline(true);\r\n    }\r\n  };\r\n  const handlePaymentClose = () => {\r\n    setOpenPayment(false);\r\n  };\r\n  const handleCloseCreateOnline = () => {\r\n    setCreateOnline(false);\r\n  };\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n  // Format thanhTien\r\n  const formatCurrency = (amount) => amount.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Box sx={{ bgcolor: '#fff' }}>\r\n          <Box sx={{ p: 3 }}>\r\n            <Button variant=\"contained\" onClick={handleAddTab}>\r\n              Thêm Hóa Đơn Chờ\r\n            </Button>\r\n          </Box>\r\n          <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\r\n            {tabs.map((tabLabel, index) => (\r\n              <AntTab\r\n                key={index}\r\n                onClick={() => handleChange1(tabLabel)}\r\n                label={\r\n                  <span>\r\n                    {tabLabel.maHd}\r\n                    <CloseIcon\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleCloseTab(tabLabel);\r\n                      }}\r\n                    />\r\n                  </span>\r\n                }\r\n              />\r\n            ))}\r\n          </AntTabs>\r\n\r\n          <Box sx={{ p: 3 }}>\r\n            {/* <p>Content: {tabContent[value]}</p> */}\r\n            <div>\r\n              <p>Bill Code: {listHD.maHd}</p>\r\n              <div className=\"class-add-product\">\r\n                <Button onClick={() => handleAddProduct()} variant=\"outlined\">\r\n                  <FontAwesomeIcon icon={faCartPlus} size=\"lg\" />\r\n                  Thêm Sản Phẩm\r\n                </Button>{' '}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row cart-information\">\r\n              <div className=\"row\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Giỏ Hàng{' '}\r\n                  </Typography>\r\n                </Stack>\r\n              </div>\r\n              <TableContainer sx={{ marginTop: 2, marginBottom: 2 }} component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Ảnh</TableCell>\r\n                      <TableCell>Mã Sản Phẩm</TableCell>\r\n                      <TableCell align=\"right\">Sản Phẩm</TableCell>\r\n                      <TableCell align=\"right\">Thuộc tính</TableCell>\r\n                      <TableCell align=\"right\">Giá</TableCell>\r\n                      <TableCell align=\"right\">Số Lượng</TableCell>\r\n                      <TableCell align=\"right\">Tổng</TableCell>\r\n                      <TableCell align=\"right\">Thao Tác</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {DataCart && DataCart.length > 0 ? (\r\n                      DataCart.map((item, index) => {\r\n                        const imagesArray = item[2].split(','); // Tách chuỗi thành mảng\r\n                        const firstImage = imagesArray[0];\r\n                        return (\r\n                          <TableRow\r\n                            key={index}\r\n                            sx={{\r\n                              '&:last-child td, &:last-child th': { border: 0 },\r\n                            }}\r\n                          >\r\n                            <TableCell>\r\n                              <Image rounded style={{ width: '150px', height: 'auto' }} src={firstImage} />\r\n                            </TableCell>\r\n                            <TableCell>{item[4]}</TableCell>\r\n                            <TableCell align=\"right\">{item[5]}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <Button onClick={() => handleUpdateClassify(item)} size=\"small\" variant=\"outlined\">\r\n                                Size: {item[6]}\r\n                                <br />\r\n                                Màu: {item[11]}\r\n                              </Button>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{item[7]}</TableCell>\r\n                            <TableCell align=\"right\">{item[8]}</TableCell>\r\n                            <TableCell align=\"right\">{item[9]}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <IconButton aria-label=\"delete\" size=\"large\" onClick={() => handleDelete(item)}>\r\n                                <DeleteSweepOutlinedIcon sx={{ color: pink[500] }} />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow>\r\n                        <TableCell align=\"right\" colSpan={8}>\r\n                          KHÔNG CÓ DỮ LIỆU\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n\r\n              <div className=\"col-2\">\r\n                <Button sx={{ marginBottom: 3 }} onClick={handDeleteAll} variant=\"outlined\" startIcon={<DeleteIcon />}>\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                {/* <Stack direction=\"row\" spacing={2} justify=\"center\" alignItems=\"center\">\r\n                  <Pagination\r\n                    onChange={(event, page) => handlePageClick(page - 1)}\r\n                    count={numberPages}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Stack> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"row customer-information\">\r\n              <div className=\"row\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thông Tin Khách Hàng{' '}\r\n                  </Typography>\r\n                  <Button onClick={() => handleAddKH()} variant=\"outlined\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                    Khách Hàng{' '}\r\n                  </Button>\r\n                </Stack>\r\n              </div>\r\n\r\n              <div className=\"text-information\">\r\n                {listHD.idKH ? (\r\n                  <>\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Mã Tài Khoản \"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={listHD.idKH.maTaiKhoan}\r\n                      // value={listHD.idKH.maTaiKhoan}\r\n                      fullWidth\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Tên Khách Hàng\"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={`${listHD.idKH.ho} ${listHD.idKH.ten}`}\r\n                      // value={selectedCustomerName}\r\n                      fullWidth\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Số Điện Thoại\"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={listHD.idKH.sdt}\r\n                      fullWidth\r\n                      // value={selectedCustomerEmail}\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Chip label=\"Khách Lẻ\" color=\"primary\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row information-payment\">\r\n              <div className=\"row header-information\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thông Tin Thanh Toán{' '}\r\n                  </Typography>\r\n                  <Button onClick={() => handleAddKH()} variant=\"outlined\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                    Primary{' '}\r\n                  </Button>\r\n                </Stack>\r\n                {/* <div className=\"col-6\">\r\n\r\n                  <h6>Thông Tin Thanh Toán</h6>\r\n                </div>\r\n                <div className=\"col-6 button-list\">\r\n                  <Button size=\"small\" variant=\"outlined\">\r\n                    Primary\r\n                  </Button>\r\n                </div> */}\r\n              </div>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6} md={7}>\r\n                  {isDeliveryChecked ? (\r\n                    <div className=\"text-information\">\r\n                      <div>\r\n                        <h5>\r\n                          {' '}\r\n                          <AccountBoxIcon />\r\n                          Thông Tin Người Nhận\r\n                        </h5>\r\n                      </div>\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Tên Người Nhận\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        onChange={(e) => getTenKHShip(e.target.value)}\r\n                        sx={{ marginTop: 2 }}\r\n                      />\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Số Điện Thoại\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getSdtKHShip(e.target.value)}\r\n                      />\r\n                      <div className=\"address\">\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 165, marginRight: 3, marginTop: 2 }}>\r\n                          <InputLabel id=\"province-label\">Tỉnh/Thành Phố</InputLabel>\r\n                          <Select\r\n                            labelId=\"province-label\"\r\n                            id=\"province-select\"\r\n                            value={selectedProvince}\r\n                            onChange={(e) => setSelectedProvince(e.target.value)}\r\n                            label=\"Tỉnh/Thành Phố\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Tỉnh/Thành Phố</em>\r\n                            </MenuItem>\r\n                            {provinces.map((province) => (\r\n                              <MenuItem key={province.ProvinceID} value={province.ProvinceID}>\r\n                                {province.ProvinceName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 165, marginRight: 3, marginTop: 2 }}>\r\n                          <InputLabel id=\"district-label\">Quận/Huyện</InputLabel>\r\n                          <Select\r\n                            labelId=\"district-label\"\r\n                            id=\"district-select\"\r\n                            value={selectedDistrict}\r\n                            onChange={(e) => setSelectedDistrict(e.target.value)}\r\n                            label=\"Quận/Huyện\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Quận/Huyện</em>\r\n                            </MenuItem>\r\n                            {districts.map((district) => (\r\n                              <MenuItem key={district.DistrictID} value={district.DistrictID}>\r\n                                {district.DistrictName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 170, marginTop: 2 }}>\r\n                          <InputLabel id=\"ward-label\">Phường/Xã</InputLabel>\r\n                          <Select\r\n                            labelId=\"ward-label\"\r\n                            id=\"ward-select\"\r\n                            value={selectedWard}\r\n                            onChange={(e) => setSelectedWard(e.target.value)}\r\n                            label=\"Phường/Xã\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Phường/Xã</em>\r\n                            </MenuItem>\r\n                            {wards.map((ward) => (\r\n                              <MenuItem key={ward.WardCode} value={ward.WardCode}>\r\n                                {ward.WardName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <div id=\"result\">{result}</div>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <TextField\r\n                          id=\"standard-multiline-flexible\"\r\n                          label=\"Địa Chỉ Cụ Thể\"\r\n                          multiline\r\n                          maxRows={4}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          sx={{ marginTop: 2 }}\r\n                          value={diachiCuThe}\r\n                          onChange={(e) => setDiachiCuThe(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-information\">\r\n                      <div>\r\n                        <h5>\r\n                          <AccountBoxIcon />\r\n                          Thông Tin Khách Hàng\r\n                        </h5>\r\n                      </div>\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Người Thanh Toán\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getTenKHTT(e.target.value)}\r\n                      />\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Số Điện Thoại\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getSdtKHTT(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12} md={6} lg={4}>\r\n                  <h5>\r\n                    <AccountBalanceWalletIcon />\r\n                    THÔNG TIN THANH TOÁN\r\n                  </h5>\r\n                  <FormControlLabel control={<Switch />} onChange={handleDeliveryChange} label=\"Giao Hàng\" />\r\n                  <br />\r\n                  <div className=\"row\">\r\n                    <Stack\r\n                      sx={{ marginTop: 5 }}\r\n                      direction=\"row\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"space-between\"\r\n                      mb={3}\r\n                    >\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Tiền Hàng{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {formatCurrency(tongTien)}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Tiền Ship{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {tienShip === 0 ? listHD.tienShip : tienShip}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Thành Tiền{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {formatCurrency(thanhTien)}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div className=\"class-checkout\">\r\n              <LoadingButton\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n                onClick={handleClick}\r\n                loading={loading}\r\n                loadingPosition=\"start\"\r\n                startIcon={<SaveIcon />}\r\n                variant=\"contained\"\r\n              >\r\n                <span>Save</span>\r\n              </LoadingButton>\r\n            </div>\r\n\r\n            {/* Add Modals */}\r\n            <ModalAddProduct\r\n              show={showModalsAdd}\r\n              selectDataCart={selectDataCart}\r\n              handleClose={handleClose}\r\n              DataCart={DataCart}\r\n            />\r\n            {/* Modal Update Product */}\r\n            <ModalUpdateProductOnCart\r\n              show={showModalsUpdate}\r\n              handleClose={handleCloseUpdateClassify}\r\n              itemUpdateClassify={itemUpdateClassify}\r\n              selectDataCart={selectDataCart}\r\n              itemUpdate={itemUpdate}\r\n            />\r\n            {/* Modal Delete Product  */}\r\n            {itemDelete !== undefined && (\r\n              <ModalDeleteProductOnCart\r\n                open={showModalsDelete}\r\n                handleClose={handleCloseModalDelelte}\r\n                itemDelete={itemDelete}\r\n                selectDataCart={selectDataCart}\r\n              />\r\n            )}\r\n            {/* Modal Delete Product  */}\r\n            <ModalDeleteAllProductOnCart\r\n              open={showModalsDeleteAll}\r\n              handleClose={handCloseDeleteAll}\r\n              selectDataCart={selectDataCart}\r\n              DataCart={DataCart}\r\n            />\r\n            {/* Modal Add Customer */}\r\n            <ModalAddKhachHang\r\n              open={showModalsKH}\r\n              handleClose={handleCloseAddKH}\r\n              // setSelectedCustomerName={setSelectedCustomerName}\r\n              // setSelectedMaTk={setSelectedMaTk}\r\n              // setSelectedCustomerEmail={setSelectedCustomerEmail}\r\n            />\r\n            {/* ModalDeleteDirectSale */}\r\n            <ModalDeleteDirectSale open={open} handleClose={handleCloseDeleteInvoice} information={information} />\r\n            {DataCart.length > 0 && (\r\n              <>\r\n                <ModalPaymentComfirm\r\n                  show={openPayment}\r\n                  handleClose={handlePaymentClose}\r\n                  thanhTien={thanhTien}\r\n                  listHD={listHD}\r\n                  tenKhTT={tenKhTT}\r\n                  sdtKHTT={sdtKHTT}\r\n                />\r\n\r\n                <ModalCreateBillOnline\r\n                  open={openCreateOnline}\r\n                  handleClose={handleCloseCreateOnline}\r\n                  thanhTien={thanhTien}\r\n                  listHD={listHD}\r\n                  tenKhShip={tenKhShip}\r\n                  sdtKHShip={sdtKHShip}\r\n                  result={result}\r\n                />\r\n              </>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CartBillADM;\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\OrderManagement-Timeline.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\OrderManagement.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Cart.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Home.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\LoginPage.js",["970","971","972"],[],"import { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Link, Container, Typography, Divider, Stack, Button } from '@mui/material';\r\n// hooks\r\nimport useResponsive from '../hooks/useResponsive';\r\n// components\r\nimport Logo from '../components/logo';\r\nimport Iconify from '../components/iconify';\r\n// sections\r\nimport { LoginForm } from '../sections/auth/login';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledRoot = styled('div')(({ theme }) => ({\r\n  [theme.breakpoints.up('md')]: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst StyledSection = styled('div')(({ theme }) => ({\r\n  width: '100%',\r\n  maxWidth: 480,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  boxShadow: theme.customShadows.card,\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledContent = styled('div')(({ theme }) => ({\r\n  maxWidth: 480,\r\n  margin: 'auto',\r\n  minHeight: '100vh',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  flexDirection: 'column',\r\n  padding: theme.spacing(12, 0),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginPage() {\r\n  const mdUp = useResponsive('up', 'md');\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Login | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <StyledRoot>\r\n        <Logo\r\n          sx={{\r\n            position: 'fixed',\r\n            top: { xs: 16, sm: 24, md: 40 },\r\n            left: { xs: 16, sm: 24, md: 40 },\r\n          }}\r\n        />\r\n\r\n        {mdUp && (\r\n          <StyledSection>\r\n            <Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\r\n              Hi, Welcome Back\r\n            </Typography>\r\n            <img src=\"/assets/illustrations/illustration_login.png\" alt=\"login\" />\r\n          </StyledSection>\r\n        )}\r\n\r\n        <Container maxWidth=\"sm\">\r\n          <StyledContent>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Đăng ký 5F Store\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\" sx={{ mb: 5 }}>\r\n              Chưa có tài khoản? {''}\r\n              <Link variant=\"subtitle2\" href=\"/signUp\" >Get started</Link>\r\n            </Typography>\r\n\r\n            <Stack direction=\"row\" spacing={2}>\r\n              <Button fullWidth size=\"large\" color=\"inherit\" variant=\"outlined\">\r\n                <Iconify icon=\"eva:google-fill\" color=\"#DF3E30\" width={22} height={22} />\r\n              </Button>\r\n\r\n              <Button fullWidth size=\"large\" color=\"inherit\" variant=\"outlined\">\r\n                <Iconify icon=\"eva:facebook-fill\" color=\"#1877F2\" width={22} height={22} />\r\n              </Button>\r\n\r\n              <Button fullWidth size=\"large\" color=\"inherit\" variant=\"outlined\">\r\n                <Iconify icon=\"eva:twitter-fill\" color=\"#1C9CEA\" width={22} height={22} />\r\n              </Button>\r\n            </Stack>\r\n\r\n            <Divider sx={{ my: 3 }}>\r\n              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                OR\r\n              </Typography>\r\n            </Divider>\r\n\r\n            <LoginForm />\r\n          </StyledContent>\r\n        </Container>\r\n      </StyledRoot>\r\n    </>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\ProductsPage.js",["973","974","975"],[],"import { Helmet } from 'react-helmet-async';\r\nimport { useState, useEffect, useMemo } from 'react';\r\n// @mui\r\nimport { Container, Stack, Typography } from '@mui/material';\r\n// components\r\nimport { ProductSort, ProductListAll, ProductfilterSB } from '../../sections/@dashboard/products';\r\n// mock\r\n\r\n//\r\nimport { fetchSpForClient } from '../../service/SanPhamService';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProductsPage() {\r\n  const [listSP, setListSP] = useState([]);\r\n\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  const handleOpenFilter = () => {\r\n    setOpenFilter(true);\r\n  };\r\n\r\n  const handleCloseFilter = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  const getListData = async () => {\r\n    try {\r\n      const res = await fetchSpForClient();\r\n      console.log('Check res: ', res);\r\n      setListSP(res);\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getListData();\r\n  }, []);\r\n\r\n  // filter\r\n  // const listLoc = listSP.filter((sp) => sp.chatLieus.includes('12'));\r\n\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Products | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n          Products\r\n        </Typography>\r\n\r\n        <Stack direction=\"row\" flexWrap=\"wrap-reverse\" alignItems=\"center\" justifyContent=\"flex-end\" sx={{ mb: 5 }}>\r\n          <Stack direction=\"row\" spacing={1} flexShrink={0} sx={{ my: 1 }}>\r\n            <ProductfilterSB\r\n              openFilter={openFilter}\r\n              onOpenFilter={handleOpenFilter}\r\n              onCloseFilter={handleCloseFilter}\r\n              listSP={listSP}\r\n              // onFilter={(filteredList) => {\r\n              //   // Lấy kết quả đã lọc từ ProductFilterSB\r\n              //   setFilteredList(filteredList);\r\n              // }}\r\n            />\r\n            <ProductSort />\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <ProductListAll products={listSP} />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Payment-Page.js",["976"],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Contact.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\discounts\\DiscountPage.js",["977","978","979","980"],[],"import { Helmet } from 'react-helmet-async';\r\nimport { filter } from 'lodash';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n// @mui\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Paper,\r\n  Button,\r\n  Popover,\r\n  Checkbox,\r\n  TableRow,\r\n  MenuItem,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  IconButton,\r\n  TableContainer,\r\n  TablePagination,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\n// components\r\nimport Iconify from '../../components/iconify';\r\nimport Scrollbar from '../../components/scrollbar';\r\n// sections\r\nimport { UserListHead, UserListToolbar } from '../../sections/@dashboard/user';\r\nimport ModalDeleteDiscount from './Modal-Delete-Discount';\r\n// mock\r\n// import USERLIST from '../_mock/user';\r\n// import { useEffect } from 'react';\r\nimport { getSanPhamDetails } from '../../service/giamGiaService';\r\nimport ModelUpdateGiamGia from './ModalsUpdateGiamGia';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'stt', label: 'STT', alignRight: false },\r\n  { id: 'anh', label: 'Ảnh', alignRight: false },\r\n  { id: 'tenchuongtrinh', label: 'Chương Trình', alignRight: false },\r\n  { id: 'tensanpham', label: 'Tên sản phẩm', alignRight: false },\r\n  { id: 'mucgiam', label: 'Mức giảm', alignRight: false },\r\n  { id: 'thoigian', label: 'Thời gian', alignRight: false },\r\n  { id: 'dongia', label: 'Đơn giá', alignRight: false },\r\n  { id: 'sotienconlai', label: 'Số tiền còn lại', alignRight: false },\r\n  { id: 'trangthai', label: 'Trạng Thái', alignRight: false },\r\n  { id: 'thaotac', label: 'Thao Tác', alignRight: false }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function DiscountPage() {\r\n  // Select list of users\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const [orderBy, setOrderBy] = useState('tenChuongTrinh');\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const [listData, setListData] = useState([]);\r\n\r\n  // Show Data On Tables\r\n  // const [numberPages, setNumberPages] = useState(0);\r\n  const getListData = async () => {\r\n    try {\r\n      const res = await getSanPhamDetails();\r\n      console.log('Check res: ', res);\r\n      setListData(res);\r\n\r\n      // setNumberPages(Math.ceil(res.totalPages));\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  };\r\n  // const [currentPage, setCurrentPage] = useState(0);\r\n  useEffect(() => {\r\n    getListData();\r\n  }, []);\r\n\r\n  // Open and Close menu\r\n  const [object, getObject] = useState([]);\r\n  const handleOpenMenu = (event, row) => {\r\n    console.log('Check event: ', event);\r\n    console.log('Check row: ', row);\r\n    getObject(row);\r\n\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = listData.map((n) => n.idGgct);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n  // Next Page\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setPage(0);\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - listData.length) : 0;\r\n\r\n  const filteredUsers =\r\n    listData && listData ? applySortFilter(listData, getComparator(order, orderBy), filterName) : [];\r\n  const isNotFound = !filteredUsers.length && !!filterName;\r\n\r\n  // Set status of trangThai\r\n  function mapTrangThaiToStatus(trangThai) {\r\n    return trangThai === 0 ? 'Hoạt động' : trangThai === 10 ? 'Ngưng hoạt động' : 'Không xác định';\r\n  }\r\n  const navigate = useNavigate();\r\n\r\n  // Create a new Detail Direct\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  const [lastGeneratedNumber, setLastGeneratedNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Đọc số lớn nhất từ cơ sở dữ liệu (localStorage) khi ứng dụng khởi động\r\n    const savedNumber = localStorage.getItem('lastGeneratedNumber');\r\n    if (savedNumber) {\r\n      setLastGeneratedNumber(Number(savedNumber));\r\n    }\r\n  }, []);\r\n  const generateNewCode = () => {\r\n    const newNumber = lastGeneratedNumber + 1;\r\n    setLastGeneratedNumber(newNumber);\r\n\r\n    // Lưu số mới vào cơ sở dữ liệu (localStorage)\r\n    localStorage.setItem('lastGeneratedNumber', newNumber.toString());\r\n\r\n    return `HD${newNumber.toString().padStart(5, '0')}`;\r\n  };\r\n\r\n  let getIdHttp;\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  // Handle delete\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [information, setInformation] = useState();\r\n  const handleDelete = () => {\r\n    setInformation(object);\r\n    setOpenDelete(true);\r\n    setOpen(null);\r\n  };\r\n  const handleClose = () => {\r\n    setOpenDelete(false);\r\n    getListData();\r\n  };\r\n\r\n  // Handle edit\r\n  const handleEdit = () => {\r\n    console.log(\"abc\");\r\n    navigate(`/dashboard/discount/update/${object.idGgct}`);\r\n  };\r\n\r\n  function formatCurrency(price) {\r\n    if (!price) return \"0\";\r\n\r\n    const formatter = new Intl.NumberFormat(\"vi-VN\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n  \r\n    const dateTime = new Date(dateString);\r\n    const formattedEndDate = format(dateTime, 'HH:mm dd/MM/yyyy');\r\n  \r\n    return formattedEndDate;\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Discount | 5F Store </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Giảm giá\r\n          </Typography>\r\n          <Link to={'/dashboard/discount/add'}>\r\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n            Thêm Giảm Giá\r\n          </Button>\r\n          </Link>\r\n        </Stack>\r\n\r\n        <Card>\r\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={listData.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                    const { idGgct, urlImage, tenChuongTrinh, tenSp, mucGiamPhanTram, mucGiamTienMat, ngayBatDau, ngayKetThuc, giaBanMin, giaBanMax, giaThucTeMin, giaThucTeMax, trangThai } = row;\r\n                    const selectedUser = selected.indexOf(idGgct) !== -1;\r\n\r\n                    return (\r\n                      <TableRow hover key={idGgct} tabIndex={-1} role=\"checkbox\" selected={selectedUser}>\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox checked={selectedUser} onChange={(event) => handleClick(event, idGgct)} />\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{index + 1}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <img src={urlImage} alt=\"Mô tả ảnh\" width=\"100\" height=\"100\" />\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{tenChuongTrinh}</TableCell>\r\n                        <TableCell align=\"left\">{tenSp}</TableCell>\r\n                        <TableCell align=\"left\">{mucGiamTienMat === null ? `${mucGiamPhanTram} %` : formatCurrency(mucGiamTienMat)}</TableCell>\r\n                        <TableCell align=\"left\">{`${formatDate(ngayBatDau)} - ${formatDate(ngayKetThuc)}`}</TableCell>\r\n                        <TableCell align=\"left\">{giaBanMin === giaBanMax ? formatCurrency(giaBanMin) : `${formatCurrency(giaBanMin)} - ${formatCurrency(giaBanMax)}`}</TableCell>\r\n                        <TableCell align=\"left\">{giaThucTeMin === giaThucTeMax ? formatCurrency(giaThucTeMin) : `${formatCurrency(giaThucTeMin)} - ${formatCurrency(giaThucTeMax)}`}</TableCell>\r\n                        <TableCell align=\"left\">{mapTrangThaiToStatus(trangThai)}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <IconButton size=\"large\" color=\"inherit\" onClick={(event) => handleOpenMenu(event, row)}>\r\n                            <Iconify icon={'eva:more-vertical-fill'} />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={3} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n\r\n                {isNotFound && (\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                        <Paper\r\n                          sx={{\r\n                            textAlign: 'center',\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h6\" paragraph>\r\n                            Not found\r\n                          </Typography>\r\n\r\n                          <Typography variant=\"body2\">\r\n                            No results found for &nbsp;\r\n                            <strong>&quot;{filterName}&quot;</strong>.\r\n                            <br /> Try checking for typos or using complete words.\r\n                          </Typography>\r\n                        </Paper>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={listData && listData.length ? listData.length : 0}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 140,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem onClick={() => handleEdit()}>\r\n          <Iconify icon={'eva:edit-fill'} sx={{ mr: 2 }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={() => handleDelete()} sx={{ color: 'error.main' }}>\r\n          <Iconify icon={'eva:trash-2-outline'} sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n      {/* Dialog xác nhận xóa */}\r\n      <ModalDeleteDiscount open={openDelete} handleClose={handleClose} information={information} />\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\discounts\\ModalsAddNewGiamGia.js",["981"],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\discounts\\ModalsUpdateGiamGia.js",["982","983","984","985","986","987","988","989"],[],"import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { DateTimePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport dayjs from 'dayjs';\r\nimport { DemoContainer, DemoItem } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { Alert, Button, Checkbox, Chip, Grid, Paper, Snackbar, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TextField } from '@mui/material';\r\nimport { Col, Image, Table } from 'react-bootstrap';\r\nimport { detail, getAllSanPham, update } from \"../../service/giamGiaService\";\r\nimport \"../../scss/GiamGiaClient.scss\";\r\nimport \"../../scss/GiamGiaAdd.scss\";\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nconst ModelUpdateGiamGia = (props) => {\r\n\r\n  console.log(\"Data: \", props.data);\r\n\r\n  const { id } = useParams();\r\n\r\n  // const { show, handleClose, isDataGiamGia, getGiamGia } = props;\r\n  // console.log(dataSanPham)\r\n  const navigate = useNavigate();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([]);\r\n  const [right, setRight] = React.useState([]);\r\n  const [leftPage, setLeftPage] = React.useState(0);\r\n  const [leftRowsPerPage, setLeftRowsPerPage] = React.useState(5);\r\n  const [rightPage, setRightPage] = React.useState(0);\r\n  const [rightRowsPerPage, setRightRowsPerPage] = React.useState(5);\r\n  const [chiTietList, setchiTietList] = React.useState([]);\r\n  const [image, setImage] = useState([]);\r\n  const [images, setImages] = useState({});\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n\r\n\r\n  const [giamGia, setGiamGia] = useState({\r\n    maGiamGia: '',\r\n    tenChuongTrinh: '',\r\n    ngayBatDau: '',\r\n    ngayKetThuc: '',\r\n    mucGiamPhanTram: '',\r\n    mucGiamTienMat: '',\r\n    trangThai: 0,\r\n  });\r\n\r\n  const [selected, setSelected] = useState(\"\");\r\n  const getAllSp = async () => {\r\n    try {\r\n      const res = await getAllSanPham();\r\n      const resDetail = await detail(id);\r\n      console.log(\"data: \", res);\r\n      console.log(\"resDetail: \", resDetail.data.idGiamGia);\r\n      if (resDetail.data.idGiamGia.mucGiamPhanTram !== null) {\r\n        setSelected(\"phanTram\");\r\n      } else if (resDetail.data.idGiamGia.mucGiamTienMat !== null) {\r\n        setSelected(\"mucGiam\");\r\n      }\r\n      setGiamGia(resDetail.data.idGiamGia);\r\n      setLeft(res);\r\n\r\n    } catch (error) {\r\n      console.error('Error loading images:', error);\r\n    }\r\n  }\r\n\r\n\r\n  console.log(\"Img: \", image)\r\n\r\n  React.useEffect(() => {\r\n    getAllSp();\r\n  }, [])\r\n\r\n  const leftChecked = intersection(checked, left);\r\n\r\n  const handleToggle = (value, isLeft) => () => {\r\n    if (isLeft) {\r\n      const currentIndex = checked.indexOf(value);\r\n      const newChecked = [...checked];\r\n\r\n      if (currentIndex === -1) {\r\n        newChecked.push(value);\r\n      } else {\r\n        newChecked.splice(currentIndex, 1);\r\n      }\r\n\r\n      setChecked(newChecked);\r\n    } else {\r\n      const currentIndex = chiTietList.indexOf(value);\r\n      const newchiTietList = [...chiTietList];\r\n\r\n      if (currentIndex === -1) {\r\n        newchiTietList.push(value);\r\n      } else {\r\n        newchiTietList.splice(currentIndex, 1);\r\n      }\r\n      setchiTietList(newchiTietList);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    const newRight = right.concat(leftChecked);\r\n    const newLeft = not(left, leftChecked);\r\n\r\n    const sortedRight = leftChecked.concat(newRight.filter((value) => leftChecked.indexOf(value) === -1));\r\n\r\n    setRight(sortedRight);\r\n    setLeft(newLeft);\r\n    setChecked(not(checked, leftChecked));\r\n\r\n    setchiTietList([...chiTietList, ...leftChecked]);\r\n    console.log([...chiTietList, ...leftChecked])\r\n  };\r\n\r\n\r\n  const handleCheckedLeft = () => {\r\n    const newLeft = left.concat(chiTietList); // Sửa từ rightChecked sang chiTietList\r\n    const newRight = not(right, chiTietList); // Sửa từ rightChecked sang chiTietList\r\n\r\n    // Move the selected items to the top of the newLeft array\r\n    const sortedLeft = chiTietList.concat(newLeft.filter((value) => chiTietList.indexOf(value) === -1)); // Sửa từ rightChecked sang chiTietList\r\n\r\n    setLeft(sortedLeft);\r\n    setRight(newRight);\r\n    setchiTietList([]); // Xóa các phần tử đã chọn khỏi chiTietList\r\n    setChecked([]); // Xóa các phần tử đã chọn\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleLeftPageChange = (event, newPage) => {\r\n    setLeftPage(newPage);\r\n  };\r\n\r\n  const handleLeftRowsPerPageChange = (event) => {\r\n    setLeftRowsPerPage(parseInt(event.target.value, 10));\r\n    setLeftPage(0);\r\n  };\r\n\r\n  const handleRightPageChange = (event, newPage) => {\r\n    setRightPage(newPage);\r\n  };\r\n\r\n  const handleRightRowsPerPageChange = (event) => {\r\n    setRightRowsPerPage(parseInt(event.target.value, 10));\r\n    setRightPage(0);\r\n  };\r\n\r\n  const isMoveLeftDisabled = chiTietList.length === 0;\r\n\r\n  function formatCurrency(price) {\r\n    if (!price) return \"0\";\r\n\r\n    const formatter = new Intl.NumberFormat(\"vi-VN\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  console.log(chiTietList)\r\n\r\n  const { maGiamGia, tenChuongTrinh, ngayBatDau, ngayKetThuc, mucGiamPhanTram, mucGiamTienMat } = giamGia;\r\n\r\n  const onChangeNbd = (newDate) => {\r\n    // Lấy ngày giờ mới từ newDate\r\n    const newDatetime = newDate;\r\n    setGiamGia({\r\n      ...giamGia,\r\n      ngayBatDau: newDatetime\r\n    })\r\n  }\r\n\r\n  const onChangeNkt = (newDate) => {\r\n    // Lấy ngày giờ mới từ newDate\r\n    const newDatetime = newDate;\r\n    setGiamGia({\r\n      ...giamGia,\r\n      ngayKetThuc: newDatetime\r\n    })\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    console.log(\"e: \", e);\r\n    setGiamGia({ ...giamGia, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  console.log(giamGia);\r\n\r\n  const changeHandler = e => {\r\n    setSelected(e.target.value);\r\n    // Clear the values based on the selected radio button\r\n    if (e.target.value === 'phanTram') {\r\n      setGiamGia({\r\n        ...giamGia,\r\n        mucGiamTienMat: null\r\n      });\r\n    } else if (e.target.value === 'mucGiam') {\r\n      setGiamGia({\r\n        ...giamGia,\r\n        mucGiamPhanTram: null\r\n      });\r\n    }\r\n  };\r\n  console.log(selected);\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    if (!maGiamGia.trim() || !tenChuongTrinh.trim() || !ngayBatDau || !ngayKetThuc) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập đầy đủ thông tin chương trình giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!selected) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng chọn loại giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selected === 'phanTram' && (!mucGiamPhanTram || Number.isNaN(mucGiamPhanTram) || mucGiamPhanTram < 1 || mucGiamPhanTram > 50)) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập mức giảm phần trăm hợp lệ (1-50)!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selected === 'mucGiam' && (!mucGiamTienMat || Number.isNaN(mucGiamTienMat))) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập mức giảm tiền mặt hợp lệ!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (chiTietList.length === 0) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng chọn ít nhất một sản phẩm để áp dụng giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const checkDateValidity = () => {\r\n      const startDate = dayjs(ngayBatDau);\r\n      const endDate = dayjs(ngayKetThuc);\r\n\r\n      return endDate.isAfter(startDate);\r\n    }\r\n\r\n    if (!checkDateValidity()) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Ngày kết thúc phải sau ngày bắt đầu!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // try {\r\n    const selectedDate = dayjs(ngayBatDau);\r\n\r\n    // Format ngày bắt đầu\r\n    const formattedStartDate = selectedDate.format('YYYY-MM-DDTHH:mm:ss');\r\n\r\n    const selectedDateEnd = dayjs(ngayKetThuc);\r\n\r\n    // Format ngày kết thúc \r\n    const formattedEndDate = selectedDateEnd.format('YYYY-MM-DDTHH:mm:ss');\r\n\r\n    const giaGiaAa = {\r\n      maGiamGia: giamGia.maGiamGia,\r\n      tenChuongTrinh: giamGia.tenChuongTrinh,\r\n      ngayBatDau: formattedStartDate,\r\n      ngayKetThuc: formattedEndDate,\r\n      mucGiamPhanTram: giamGia.mucGiamPhanTram,\r\n      mucGiamTienMat: giamGia.mucGiamTienMat,\r\n      trangThai: 0,\r\n    }\r\n\r\n    console.log(\"giaGiaAa: \", giaGiaAa)\r\n\r\n\r\n    // Trích xuất danh sách idSp từ chiTietList\r\n    const idSpList = chiTietList.map(item => item.sanPham.idSp);\r\n\r\n    // Cập nhật state listIdSp\r\n    const giamGiaChiTietOk = {\r\n      giamGia: giaGiaAa,\r\n      idSp: idSpList\r\n    }\r\n    console.log(\"giamGiaChiTietOk\", giamGiaChiTietOk);\r\n\r\n    const response = await update(giamGiaChiTietOk, id);\r\n\r\n    if (response.status === 'Ok!') {\r\n      navigate('/dashboard/discounts');\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Cập nhật thành công!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Cập nhật không thành công!',\r\n      });\r\n    }\r\n    // } catch (error) {\r\n    //   setAlertContent({\r\n    //     type: 'error',\r\n    //     message: 'Đã xảy ra lỗi khi cập nhật giảm giá!',\r\n    //   });\r\n    // }\r\n\r\n  };\r\n  // if (!giamGiaData) {\r\n  //   return <div>Loading...</div>;\r\n  // }\r\n  const todayAtNoon = dayjs().set('hour', 12).startOf('hour');\r\n  const todayAt9AM = dayjs().set('hour', 9).startOf('hour');\r\n\r\n  const ngayBatDauFromApi = giamGia.ngayBatDau;\r\n  const parsedStartDate = dayjs(ngayBatDauFromApi);\r\n\r\n  // const [ngayBatDau, setNgayBatDau] = useState(giamGia.ngayBatDau);\r\n  // console.log(ngayBatDau);\r\n  // const [ngayKetThuc, setNgayKetThuc] = useState();\r\n  return (\r\n    <>\r\n      <Modal.Header>\r\n        <Modal.Title className='text-center m-25 w-100 text-uppercase'>Chỉnh sửa chương trình giảm giá</Modal.Title>\r\n      </Modal.Header>\r\n      <div className=\"d-flex justify-content-around\">\r\n        <div className=\"content-left\">\r\n          <p className='text-center info-discount'>Thông tin giảm giá</p>\r\n          <Modal.Body>\r\n            <div className=\"body-add-new\">\r\n              <form>\r\n                <div className=\"mb-3\">\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    name='maGiamGia'\r\n                    label=\"Mã chương trình\"\r\n                    value={maGiamGia}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Tên chương trình\"\r\n                    name='tenChuongTrinh'\r\n                    value={tenChuongTrinh}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Mức Giảm</p>\r\n                  <div>\r\n                    <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" onChange={(e) => changeHandler(e)} type=\"radio\" name=\"flexRadioDefault\" id=\"form-check-label\" value={\"mucGiam\"} checked={selected === \"mucGiam\"} />\r\n                      <p className=\"form-check-label\">\r\n                        Tiền Mặt\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" onChange={(e) => changeHandler(e)} type=\"radio\" name=\"flexRadioDefault\" id=\"form-check-label1\" value={\"phanTram\"} checked={selected === \"phanTram\"} />\r\n                      <p className=\"form-check-label1\">\r\n                        Phần Trăm\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" aria-hidden={selected !== \"phanTram\"}>\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Mức giảm %\"\r\n                    name='mucGiamPhanTram'\r\n                    value={mucGiamPhanTram}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\" aria-hidden={selected !== \"mucGiam\"}>\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Mức giảm tiền mặt\"\r\n                    name='mucGiamTienMat'\r\n                    value={mucGiamTienMat}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Ngày bắt đầu</p>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={['DateTimePicker']}>\r\n                      <DemoItem>\r\n                        <DateTimePicker\r\n                          defaultValue={ngayBatDau}\r\n                          name='ngayBatDau'\r\n                          value={dayjs(ngayBatDau)}\r\n                          onChange={(e) => onChangeNbd(e)}\r\n                        />\r\n                      </DemoItem>\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Ngày kết thúc</p>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={['DateTimePicker']}>\r\n                      <DemoItem>\r\n                        <DateTimePicker\r\n                          minDateTime={todayAt9AM}\r\n                          name='ngayKetThuc'\r\n                          value={dayjs(ngayKetThuc)}\r\n                          onChange={(e) => onChangeNkt(e)}\r\n                        />\r\n                      </DemoItem>\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </div>\r\n\r\n                {/* <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Ngày kết thúc</label>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DateTimePicker\r\n                      renderInput={(props) => <TextField {...props} />}\r\n                      name='ngayKetThuc'\r\n                      value={ngayKetThuc}\r\n                      onChange={(newDate) => onInputChange(newDate)}\r\n                    />\r\n                  </LocalizationProvider>\r\n                </div> */}\r\n\r\n                <button onClick={(e) => handleSave(e)} className=\"btn bg-primary text-light d-flex align-items-end\">Thêm</button>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </div>\r\n\r\n        <div className=\"content-right\">\r\n          <p className='text-center info-discount'>Chọn sản phẩm cần giảm giá</p>\r\n          <div>\r\n            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n              <Grid item>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            onClick={handleToggleAll(left)}\r\n                            checked={numberOfChecked(left) === left.length && left.length !== 0}\r\n                            indeterminate={numberOfChecked(left) !== left.length && numberOfChecked(left) !== 0}\r\n                            disabled={left.length === 0}\r\n                            inputProps={{\r\n                              'aria-label': 'all items selected',\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>STT</TableCell>\r\n                        <TableCell>Mã</TableCell>\r\n                        <TableCell>Tên sản phẩm</TableCell>\r\n                        <TableCell>Trạng thái</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {left.slice(leftPage * leftRowsPerPage, leftPage * leftRowsPerPage + leftRowsPerPage).map((value, index) =>\r\n                      (\r\n                        <TableRow key={`left_${value.sanPham.idSp}`} onClick={handleToggle(value, true)}>\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              value={value.sanPham.idSp}\r\n                              checked={checked.indexOf(value) !== -1}\r\n\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{index + 1}</TableCell>\r\n                          <TableCell>{value.sanPham.maSp}</TableCell>\r\n                          <TableCell>{value.sanPham.tenSp}</TableCell>\r\n                          <TableCell>{value.sanPham.trangThai === 0 ? <Chip label=\"Hoạt động\" className=\"bg-success text-light\" /> : <Chip label=\"Ngưng hoạt động\" className=\"bg-danger text-light\" />}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={left.length}\r\n                  rowsPerPage={leftRowsPerPage}\r\n                  page={leftPage}\r\n                  onPageChange={handleLeftPageChange}\r\n                  onRowsPerPageChange={handleLeftRowsPerPageChange}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    sx={{ my: 0.5 }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCheckedRight}\r\n                    disabled={leftChecked.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    &gt;\r\n                  </Button>\r\n                  <Button\r\n                    sx={{ my: 0.5 }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCheckedLeft}\r\n                    disabled={isMoveLeftDisabled}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    &lt;\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>STT</TableCell>\r\n                        <TableCell>Ảnh sản phẩm</TableCell>\r\n                        <TableCell>Mã sản phẩm</TableCell>\r\n                        <TableCell>Tên sản phẩm</TableCell>\r\n                        <TableCell>Giá sản phẩm</TableCell>\r\n                        <TableCell>Trạng thái</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {right.slice(rightPage * rightRowsPerPage, rightPage * rightRowsPerPage + rightRowsPerPage).map((value, index) => (\r\n                        <TableRow key={`right_${value.sanPham.idSp}`}>\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              value={value.sanPham.idSp}\r\n                              checked={chiTietList.indexOf(value) !== -1} // Sử dụng chiTietList thay vì checked\r\n                              onClick={handleToggle(value, false)} // Đặt isLeft là false để xác định là bảng phải\r\n                            // onChange={handleChange}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{index + 1}</TableCell>\r\n                          <TableCell>\r\n                            <Col xs={6} md={4}>\r\n                              <Image\r\n                                rounded\r\n                                style={{ width: \"150px\", height: \"auto\" }}\r\n                                src={value.url_image}\r\n                                alt={`Ảnh sản phẩm ${value.maSp}`}\r\n                              />\r\n                            </Col>\r\n                          </TableCell>\r\n                          <TableCell>{value.sanPham.maSp}</TableCell>\r\n                          <TableCell>{value.sanPham.tenSp}</TableCell>\r\n                          <TableCell>{formatCurrency(value.sanPham.giaBan)}</TableCell>\r\n                          <TableCell>{value.sanPham.trangThai === 0 ? <Chip label=\"Hoạt động\" className=\"bg-success text-light\" /> : <Chip label=\"Ngưng hoạt động\" className=\"bg-danger text-light\" />}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={right.length}\r\n                  rowsPerPage={rightRowsPerPage}\r\n                  page={rightPage}\r\n                  onPageChange={handleRightPageChange}\r\n                  onRowsPerPageChange={handleRightRowsPerPageChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/* <ModelAddNewGiamGia dataSanPham={chiTietList}/> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelUpdateGiamGia;","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\SignUp.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Staff\\Modal-User-Staff.js",["990","991","992","993","994"],[],"import { Link, Navigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\n// icon\r\nimport Chip from '@mui/material/Chip';\r\n\r\n// import { filter } from 'lodash';\r\nimport { useEffect, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Button,\r\n  Popover,\r\n  Checkbox,\r\n  TableRow,\r\n  MenuItem,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  IconButton,\r\n  TableContainer,\r\n  TablePagination,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\n// components\r\nimport { filter } from 'lodash';\r\nimport Iconify from '../../components/iconify';\r\nimport Scrollbar from '../../components/scrollbar';\r\n// sections\r\nimport { UserListHead, UserListToolbar } from '../../sections/@dashboard/user';\r\n// mock\r\nimport { taiKhoan } from '../../service/taiKhoanNhanVienService';\r\nimport ModalDeleteDiscount from './Modal-Delete-Staff';\r\n// import { Navigate } from 'react-router-dom';\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'maTaiKhoan', label: 'Mã Tài Khoản', alignRight: false },\r\n  { id: 'ten', label: 'Tên', alignRight: false },\r\n  { id: 'chucVu', label: 'Chức Vụ', alignRight: false },\r\n  { id: 'soCanCuoc', label: 'Số Căn Cước', alignRight: false },\r\n  { id: 'email', label: 'Email', alignRight: false },\r\n  { id: 'sdt', label: 'SĐT', alignRight: false },\r\n  { id: 'trangThai', label: 'Trạng Thái', alignRight: false },\r\n  { id: '' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user) => _user.maTaiKhoan.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function UserStaff() {\r\n  // Select list of users\r\n\r\n  const [listData, setListData] = useState([]);\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  const getListData = async (page, query) => {\r\n    try {\r\n      const res = await taiKhoan(page, query);\r\n      console.log('Check res: ', res);\r\n      // Cập nhật giá trị của listData sau khi tìm kiếm\r\n      setListData(res);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await taiKhoan(0);\r\n      setListData(res);\r\n      setFilteredList(res); // Cập nhật danh sách đã lọc\r\n\r\n      const storedMessage = localStorage.getItem('successMessage');\r\n      if (storedMessage) {\r\n        setAlertContent(JSON.parse(storedMessage));\r\n        localStorage.removeItem('successMessage');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    getListData(0);\r\n    const storedMessage = localStorage.getItem('successMessage');\r\n    if (storedMessage) {\r\n      setAlertContent(JSON.parse(storedMessage));\r\n      localStorage.removeItem('successMessage');\r\n    }\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const [orderBy, setOrderBy] = useState('name');\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  // Create a new Detail Direct\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  const [lastGeneratedNumber, setLastGeneratedNumber] = useState(0);\r\n  const [object, setOject] = useState([]);\r\n\r\n  const handleOpenMenu = (event, row) => {\r\n    setOpen(event.currentTarget);\r\n    setOject(row);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  // handDelete\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [information, setInformation] = useState();\r\n  const handleDelete = () => {\r\n    console.log(object);\r\n    setInformation(object);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpenDelete(false);\r\n    getListData();\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = listData.map((n) => n.idTaiKhoan);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    // setPage(0);\r\n    // setFilterName(event.target.value);\r\n\r\n    const query = event.target.value.toLowerCase();\r\n\r\n    // Lọc danh sách dựa trên tên\r\n    const filteredUsers = listData.filter((user) =>\r\n      (user.maTaiKhoan && user.maTaiKhoan.toLowerCase().includes(query)) ||\r\n      (user.ten && user.ten.toLowerCase().includes(query)) ||\r\n      (user.chuVu && user.chucVu.toLowerCase().includes(query)) ||\r\n      (user.soCanCuoc && user.soCanCuoc.toLowerCase().includes(query)) ||\r\n      (user.email && user.email.toLowerCase().includes(query)) ||\r\n      (user.sdt && user.sdt.toLowerCase().includes(query)) ||\r\n      (user.trangThai && typeof user.trangThai === 'string' && user.trangThai.toLowerCase().includes(query))\r\n    );\r\n\r\n    setFilteredList(filteredUsers); // Cập nhật danh sách đã lọc\r\n\r\n    setPage(0); // Đặt lại trang khi tìm kiếm\r\n\r\n    setFilterName(query); // Cập nhật trường tìm kiếm\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - listData.length) : 0;\r\n\r\n  const filteredUsers = applySortFilter(listData, getComparator(order, orderBy), filterName);\r\n\r\n  const isNotFound = !filteredUsers.length && !!filterName;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Tài Khoản Admin </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Tài Khoản Nhân Viên\r\n          </Typography>\r\n          <Link to=\"/dashboard/addNewTKNV\">\r\n            <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n              Thêm Nhân Viên\r\n            </Button>\r\n          </Link>\r\n        </Stack>\r\n\r\n        <Card>\r\n          <UserListToolbar\r\n            numSelected={selected.length}\r\n            filterName={filterName}\r\n            onFilterName={handleFilterByName} // Truyền hàm xử lý tìm kiếm\r\n          />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={listData.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {filteredList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                    <TableRow key={row.idTaiKhoan}>\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={selected.indexOf(row.idTaiKhoan) !== -1}\r\n                          onChange={(event) => handleClick(event, row.idTaiKhoan)}\r\n                        />\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"left\">{row.maTaiKhoan}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row.ho} {row.ten}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.idChucVu.tenCv}</TableCell>\r\n                      <TableCell align=\"left\">{row.soCanCuoc}</TableCell>\r\n                      <TableCell align=\"left\">{row.email}</TableCell>\r\n                      <TableCell align=\"left\">{row.sdt}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row.trangThai === 0 ? (\r\n                          <Chip\r\n                            label=\"Hoạt động\"\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            style={{ color: 'white', backgroundColor: 'green', border: 'none' }}\r\n                          />\r\n\r\n                        ) : (\r\n                          <Chip\r\n                            label=\"Dừng hoạt động\"\r\n                            color=\"secondary\"\r\n                            variant=\"outlined\"\r\n                            style={{ color: 'white', backgroundColor: 'red', border: 'none' }}\r\n                          />\r\n\r\n                        )}\r\n                      </TableCell>\r\n\r\n\r\n\r\n                      <TableCell align=\"right\">\r\n                        <IconButton size=\"large\" color=\"inherit\" onClick={(event) => handleOpenMenu(event, row)}>\r\n                          <Iconify icon={'eva:more-vertical-fill'} />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={listData && listData.length ? listData.length : 0}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 140,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Link to={`/dashboard/detail/${object.idTaiKhoan}`} style={{ textDecoration: 'none' }}>\r\n          <MenuItem sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Iconify icon={'eva:edit-fill'} sx={{ fontSize: 20, marginRight: 2, color: 'primary.main' }} />\r\n            <span>Edit</span>\r\n          </MenuItem>\r\n        </Link>\r\n\r\n        <MenuItem onClick={() => handleDelete()} sx={{ color: 'error.main' }}>\r\n          <Iconify icon={'eva:trash-2-outline'} sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n      {/* Dialog xác nhận xóa */}\r\n      <ModalDeleteDiscount open={openDelete} handleClose={handleClose} information={information} />\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Staff\\Modal-Update-Staff.js",["995"],[],"import { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Alert,\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  InputLabel,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Snackbar,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { detailTaiKhoan, postUpdateTaiKhoan, } from \"../../service/taiKhoanNhanVienService\";\r\nimport { chucVu3 ,detailTen} from \"../../service/chucVuService\";\r\n\r\n\r\nconst UpdateTkNV = (props) => {\r\n  const param = useParams();\r\n  const idNV = param.id;\r\n  const [Data, setData] = useState([]);\r\n  const [chucVu, setChucVu] = useState(\"\");\r\n  const [ho, setHo] = useState(\"\");\r\n  const [ten, setTen] = useState(\"\");\r\n  const [sdt, setSdt] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [matKhau, setMatKhau] = useState(\"\");\r\n  const [soCanCuoc, setSoCanCuoc] = useState(\"\");\r\n  const [trangThai, setTrangThai] = useState(\"0\");\r\n  const [myChucVu, setMyChucVu] = useState([]);\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const getAllChucVu = async () => {\r\n    const rs = await chucVu3(0);\r\n    setMyChucVu(rs);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllChucVu();\r\n  }, []);\r\n\r\n  // chuyen trang\r\n  const navigate = useNavigate();\r\n  const getListData = useCallback(async () => {\r\n    try {\r\n      const res = await detailTaiKhoan(idNV);\r\n      setData(res);\r\n      setChucVu(res.idChucVu.tenCv);\r\n      setHo(res.ho);\r\n      setTen(res.ten);\r\n      setEmail(res.email);\r\n      setSdt(res.sdt);\r\n      setMatKhau(res.matKhau);\r\n      setSoCanCuoc(res.soCanCuoc);\r\n      setTrangThai(res.trangThai);\r\n      console.log(\"check res: \", res);\r\n    } catch (error) {\r\n      console.log(\"error: \", error);\r\n    }\r\n  }, [idNV]);\r\n  useEffect(() => {\r\n    getListData();\r\n  }, [getListData]);\r\n\r\n  const handleSave = async () => {\r\n    if (\r\n      ho === \"\" ||\r\n      ten === \"\" ||\r\n      email === \"\" ||\r\n      sdt === \"\" ||\r\n      matKhau === \"\" ||\r\n      soCanCuoc === \"\"\r\n    ) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Một số trường đang trống!',\r\n      });\r\n    } else {\r\n      const tenCv = await detailTen({ tenCv: chucVu });\r\n      const res = await postUpdateTaiKhoan(\r\n        Data.idTaiKhoan,\r\n        Data.maTaiKhoan,\r\n        tenCv,\r\n        ho,\r\n        ten,\r\n        sdt,\r\n        email,\r\n        matKhau,\r\n        soCanCuoc,\r\n        trangThai\r\n      );\r\n      console.log(\"Check res: \", res);\r\n      if (res && res.idTaiKhoan) {\r\n        const successMessage = {\r\n          type: 'success',\r\n          message: 'Cập nhập Nhân Viên Thành Công!',\r\n        };\r\n        localStorage.setItem('successMessage', JSON.stringify(successMessage));\r\n        navigate('/dashboard/staff');\r\n      } else {\r\n        setAlertContent({\r\n          type: 'error',\r\n          message: 'Cập Nhập tài khoản thất bại!',\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"row row-order-management\">\r\n        <div\r\n          className=\"title\"\r\n          style={{ textAlign: \"center\", margin: \"20px 0\" }}\r\n        >\r\n          <h4>Cập Nhập Tài Khoản</h4>\r\n          <h5>Mã tài khoản: {Data.maTaiKhoan}</h5>\r\n        </div>\r\n        <Box\r\n          component=\"form\"\r\n          sx={{\r\n            \"& .MuiTextField-root\": { m: 1, width: \"120\" },\r\n          }}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          alignItems={\"center\"}\r\n        >\r\n          <FormControl fullWidth margin=\"dense\">\r\n            <InputLabel>Chức Vụ</InputLabel>\r\n            <Select\r\n              value={chucVu}\r\n              onChange={(event) => setChucVu(event.target.value)}\r\n            >\r\n              {myChucVu\r\n                .filter((item) => item.idCv === 1 || item.idCv === 8) // Lọc theo idCv\r\n                .map((item, index) => (\r\n                  <MenuItem\r\n                    key={index}\r\n                    value={item.tenCv}\r\n                  >\r\n                    {item.tenCv}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Họ\"\r\n            id=\"fullWidth\"\r\n            value={ho}\r\n            onChange={(event) => setHo(event.target.value)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Tên\"\r\n            id=\"fullWidth\"\r\n            value={ten}\r\n            onChange={(event) => setTen(event.target.value)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Email\"\r\n            id=\"fullWidth\"\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Số Điện Thoại\"\r\n            id=\"fullWidth\"\r\n            value={sdt}\r\n            onChange={(event) => setSdt(event.target.value)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            label=\"Mật Khẩu\"\r\n            // value={matKhau}\r\n            onChange={(event) => setMatKhau(event.target.value)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            label=\"Số Căn Cước\"\r\n            value={soCanCuoc}\r\n            onChange={(event) => setSoCanCuoc(event.target.value)}\r\n          />\r\n          <FormControl style={{ marginLeft: \"10px\" }}>\r\n            <FormLabel id=\"demo-radio-buttons-group-label\">\r\n              Trạng thái\r\n            </FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n              name=\"row-radio-buttons-group\"\r\n              value={trangThai}\r\n              onChange={(event) => setTrangThai(event.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"0\"\r\n                control={<Radio />}\r\n                label=\"Đang Hoạt Động\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"10\"\r\n                control={<Radio />}\r\n                label=\"Dừng Hoạt Động\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        <div style={{ textAlign: \"right\", margin: \"20px 0\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => handleSave()}\r\n          >\r\n            Cập Nhập\r\n          </Button>\r\n        </div>\r\n        {alertContent && (\r\n          <Snackbar\r\n            open\r\n            autoHideDuration={3000}\r\n            onClose={handleSnackbarClose}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          >\r\n            <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n              {alertContent.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\nexport default UpdateTkNV;\r\n\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Staff\\Modal-Add-Staff.js",["996","997","998"],[],"import React, { useEffect, useState } from 'react';\r\nimport QrReader from 'react-qr-scanner';\r\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\r\nimport { Box, Button, TextField, FormControl, InputLabel, Select, MenuItem, Snackbar, Alert } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { chucVu } from '../../service/chucVuService';\r\nimport { postAddTaiKhoan } from '../../service/taiKhoanNhanVienService';\r\n\r\nconst AddTKNV = () => {\r\n  const [maTaiKhoan, setMaTaiKhoan] = useState(null);\r\n  const [ho, setHo] = useState('');\r\n  const [ten, setTen] = useState('');\r\n  const [chucVuId, setChucVuId] = useState('');\r\n  const [sdt, setSdt] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [soCanCuoc, setSoCanCuoc] = useState('');\r\n  const [matKhau, setMatKhau] = useState('');\r\n  const [trangThai, setTrangThai] = useState(0);\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  const [scanning, setScanning] = useState(false);\r\n  const [result, setResult] = useState('No result');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!chucVuId || !ho || !ten || !email || !sdt || !soCanCuoc || !matKhau) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập đầy đủ thông tin nhân viên!',\r\n      });\r\n    } else {\r\n      const res = await postAddTaiKhoan(maTaiKhoan, chucVuId, ho, ten, sdt, email, soCanCuoc, matKhau, trangThai);\r\n      if (res && res.idTaiKhoan) {\r\n        const successMessage = {\r\n          type: 'success',\r\n          message: 'Thêm Nhân Viên mới Thành Công!',\r\n        };\r\n        localStorage.setItem('successMessage', JSON.stringify(successMessage));\r\n        navigate('/dashboard/staff');\r\n      } else {\r\n        setAlertContent({\r\n          type: 'error',\r\n          message: 'Thêm Nhân Viên thất bại!',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const [myChucVu, setMyChucVu] = useState([]);\r\n\r\n  const getAllChucVu = async () => {\r\n    const rs = await chucVu(0);\r\n    setMyChucVu(rs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllChucVu();\r\n  }, []);\r\n\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      setResult(data);\r\n      try {\r\n        const qrData = data.text;\r\n        const dataParts = qrData.split('|');\r\n        const cleanedData = dataParts.map((part) => part.replace(/\\|/g, ''));\r\n        if (cleanedData.length >= 2) {\r\n          const hoTenParts = cleanedData[2].split(' ');\r\n          const ho = hoTenParts[0] || '';\r\n          const ten = hoTenParts.slice(1).join(' ') || '';\r\n          setHo(ho);\r\n          setTen(ten);\r\n          setSoCanCuoc(cleanedData[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error processing QR Code data:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n  };\r\n\r\n  const handleStartScan = () => {\r\n    setScanning(true);\r\n  };\r\n\r\n  const handleStopScan = () => {\r\n    setScanning(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ textAlign: 'center', margin: '20px 0' }}>\r\n        <h4>Thêm</h4>\r\n      </div>\r\n\r\n      <div>\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n          {scanning ? (\r\n            <>\r\n              <QrReader delay={100} style={{ height: 240, width: 320 }} onError={handleError} onScan={handleScan} />\r\n              <Button size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleStopScan} style={{ marginTop: '10px' }}>\r\n                Stop Scanning\r\n              </Button>\r\n              <p>Scanned Tên: {ten}</p>\r\n              <p>Scanned Số Căn Cước: {soCanCuoc}</p>\r\n            </>\r\n          ) : (\r\n            <Button size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleStartScan} style={{ marginTop: '10px' }}>\r\n              <QrCodeScannerIcon />\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <FormControl fullWidth margin=\"dense\">\r\n          <InputLabel>Chức Vụ</InputLabel>\r\n          <Select value={chucVuId} onChange={(event) => setChucVuId(event.target.value)}>\r\n            {myChucVu\r\n              .filter((item) => item.idCv === 1 || item.idCv === 8)\r\n              .map((item, index) => (\r\n                <MenuItem key={index} value={item}>\r\n                  {item.tenCv}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField fullWidth margin=\"dense\" label=\"Họ\" value={ho} onChange={(event) => setHo(event.target.value)} />\r\n        <TextField fullWidth margin=\"dense\" label=\"Tên\" value={ten} onChange={(event) => setTen(event.target.value)} />\r\n        <TextField fullWidth margin=\"dense\" label=\"Mật Khẩu\" value={matKhau} onChange={(event) => setMatKhau(event.target.value)} />\r\n        <TextField fullWidth margin=\"dense\" label=\"Email\" value={email} onChange={(event) => setEmail(event.target.value)} />\r\n        <TextField fullWidth margin=\"dense\" label=\"Số Điện Thoại\" onChange={(event) => setSdt(event.target.value)} />\r\n        <TextField fullWidth margin=\"dense\" label=\"Số Căn Cước\" value={soCanCuoc} onChange={(event) => setSoCanCuoc(event.target.value)} />\r\n        <Button size=\"large\" variant=\"contained\" color=\"success\" onClick={handleSave} style={{ marginTop: '20px' }}>\r\n          Thêm tài khoản nhân viên mới\r\n        </Button>\r\n      </Box>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTKNV;\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\AddClients.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\SanPham\\SanPhamMain.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\ClientsPage.js",["999","1000","1001"],[],"import {useEffect, useState} from \"react\";\r\nimport {Helmet} from \"react-helmet-async\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {\r\n    DataGrid,\r\n    GridActionsCellItem,\r\n    GridToolbarColumnsButton,\r\n    GridToolbarContainer,\r\n    GridToolbarDensitySelector,\r\n    GridToolbarExport,\r\n    GridToolbarFilterButton\r\n} from \"@mui/x-data-grid\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    IconButton,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    Stack,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AddLocationAltIcon from \"@mui/icons-material/AddLocationAlt\";\r\n\r\n\r\nimport {deleteTaiKhoanKH, fetchAllTKKH} from \"../../service/taiKhoanKhachHangSevice\";\r\nimport Iconify from \"../../components/iconify\";\r\nimport {useAlert} from \"../../layouts/dashboard/AlertContext\";\r\n\r\n\r\nconst ClientPage = () => {\r\n    const [listData, setListData] = useState([]);\r\n\r\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n    const [selectedStatus, setSelectedStatus] = useState(\"Tất cả\");\r\n    const [originalListData, setOriginalListData] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const {showAlert} = useAlert();\r\n\r\n    const getListData = async (page, query) => {\r\n        try {\r\n            const res = await fetchAllTKKH(page, query);\r\n            setListData(res);\r\n            setOriginalListData(res);\r\n            setListData(res);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getListData(0);\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {field: \"index\", headerName: \"Index\", width: 50},\r\n        {field: \"maTaiKhoan\", headerName: \"Mã Tài Khoản\", width: 120},\r\n        {field: \"tenKh\", headerName: \"Tên Khách Hàng\", width: 180},\r\n        {field: \"sdtKh\", headerName: \"Số Điện Thoại\", width: 120,},\r\n        {field: \"email\", headerName: \"Email\", width: 200,},\r\n        {\r\n            field: \"trangThai\",\r\n            headerName: \"Trạng Thái\",\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                const {value: trangThai} = params;\r\n                let badgeVariant;\r\n                let statusText;\r\n\r\n                switch (trangThai) {\r\n                    case 1:\r\n                        badgeVariant = \"primary\";\r\n                        statusText = \"Đã kích hoạt\";\r\n                        break;\r\n                    case 4:\r\n                        badgeVariant = \"info\";\r\n                        statusText = \"Đã Ngưng hoạt động\";\r\n                        break;\r\n                    default:\r\n                        badgeVariant = \"light\";\r\n                        statusText = \"Chưa Kích Hoạt\";\r\n                        break;\r\n                }\r\n\r\n                return (\r\n                    <Badge bg={badgeVariant} text=\"dark\">\r\n                        {statusText}\r\n                    </Badge>\r\n                );\r\n            },\r\n\r\n        },\r\n\r\n        {\r\n            field: \"actions\",\r\n            headerName: \"Hành Động\",\r\n            width: 100,\r\n            renderCell: (params) => {\r\n                const {row} = params;\r\n                return [\r\n                    <GridActionsCellItem\r\n                        color=\"info\"\r\n                        onClick={() => handlClickRow(row)}\r\n                        icon={<EditIcon/>}\r\n                    />,\r\n                    <GridActionsCellItem\r\n                        color=\"inherit\"\r\n                        icon={<AddLocationAltIcon/>}\r\n                        onClick={() => handAddDiaChi(row)}\r\n                    />,\r\n                    <GridActionsCellItem\r\n                        color=\"error\"\r\n                        icon={<DeleteIcon/>}\r\n                        onClick={() => handleClickOpenDelete(row)}\r\n                    />\r\n                ];\r\n            },\r\n        },\r\n    ];\r\n    // Xử lý dữ liệu của bảng vào mảng rows\r\n    const rows = listData\r\n        .filter((item) =>\r\n            Object.values(item).some((value) =>\r\n                String(value).toLowerCase().includes(searchKeyword.toLowerCase())\r\n            )\r\n        )\r\n        .map((item, index) => ({\r\n            idTaiKhoan: item.idTaiKhoan,\r\n            id: item.idTaiKhoan,\r\n            index: index + 1,\r\n            maTaiKhoan: item.maTaiKhoan,\r\n            tenKh: `${item.ho} ${item.ten}`,\r\n            sdtKh: item.sdt,\r\n            email: item.email,\r\n            trangThai: item.trangThai,\r\n        }));\r\n\r\n\r\n    const handlePageClick = (page) => {\r\n        getListData(page);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const filteredData =\r\n            selectedStatus === \"Tất cả\"\r\n                ? originalListData // Sử dụng danh sách dữ liệu gốc khi chọn \"All\"\r\n                : originalListData.filter(\r\n                    (item) =>\r\n                        item.trangThai === parseInt(selectedStatus, 10)\r\n                );\r\n        setListData(filteredData);\r\n    }, [selectedStatus, originalListData]);\r\n\r\n\r\n    const handAdd = () => {\r\n        showAlert('success', 'Chuyển trang thêm Thành Công');\r\n        navigate(\"/dashboard/clients/add\");\r\n\r\n    };\r\n    const handAddDiaChi = (item) => {\r\n        showAlert('success', 'Chuyển trang địa chỉ Thành Công');\r\n        navigate(`/dashboard/address/${item.maTaiKhoan}`);\r\n    };\r\n\r\n    const handlClickRow = (item) => {\r\n        showAlert('success', 'Chuyển trang update Thành Công');\r\n        navigate(`/dashboard/clients/detail/${item.idTaiKhoan}`);\r\n\r\n    };\r\n\r\n\r\n    const handleDelete = async (item) => {\r\n        const res = await deleteTaiKhoanKH(item.id);\r\n        console.log(\"Check res: \", res);\r\n        if (res) {\r\n            showAlert('success', 'Xóa Thành Công');\r\n            handleClose();\r\n            handlePageClick(0);\r\n        } else {\r\n            showAlert('warning', 'Xóa Thất Bại');\r\n            handleClose();\r\n        }\r\n    };\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [idDelete, setIdDelete] = useState(\"\");\r\n\r\n    const handleClickOpenDelete = (id) => {\r\n        setOpen(true);\r\n        setIdDelete(id);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function CustomToolbar() {\r\n        return (\r\n            <GridToolbarContainer>\r\n                <GridToolbarFilterButton/>\r\n                <GridToolbarColumnsButton/>\r\n                <GridToolbarDensitySelector/>\r\n                <GridToolbarExport\r\n                    csvOptions={{\r\n                        fileName: 'Client',\r\n                        utf8WithBom: true,\r\n                    }}\r\n                />\r\n\r\n                <FormControl variant=\"standard\" sx={{m: 1, minWidth: 120}}>\r\n                    <InputLabel id=\"status-select\">Trạng Thái:</InputLabel>\r\n                    <Select\r\n                        labelId=\"status-select\"\r\n                        id=\"status-select\"\r\n                        value={selectedStatus}\r\n                        label=\"Trạng Thái\"\r\n                        onChange={(e) => setSelectedStatus(e.target.value)}\r\n                    >\r\n                        <MenuItem value={\"Tất cả\"}>Tất Cả</MenuItem>\r\n                        <MenuItem value={0}>Chưa Kích Hoạt</MenuItem>\r\n                        <MenuItem value={1}>Đã Kích Hoạt</MenuItem>\r\n                        <MenuItem value={2}>Ngưng Hoạt Động</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n            </GridToolbarContainer>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title> Client || 5F Store </title>\r\n            </Helmet>\r\n            <Container>\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        Tài Khoản Khách Hàng\r\n                    </Typography>\r\n                    <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\"/>} onClick={() => handAdd()}>\r\n                        Tài Khoản Mới\r\n                    </Button>\r\n                </Stack>\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    sx={{ml: 1, flex: 1}}\r\n                    placeholder=\"Tìm Kiếm\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <IconButton type=\"button\" sx={{p: '10px'}} aria-label=\"search\">\r\n                                <SearchIcon/>\r\n                            </IconButton>\r\n                        ),\r\n                    }}\r\n                    onChange={(e) => setSearchKeyword(e.target.value)}\r\n                />\r\n\r\n\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    initialState={{\r\n                        pagination: {\r\n                            paginationModel: {page: 0, pageSize: 5},\r\n                        },\r\n                    }}\r\n                    slots={{toolbar: CustomToolbar}}\r\n                    getRowSpacing={(params) => ({\r\n                        top: params.isFirstVisible ? 0 : 5,\r\n                        bottom: params.isLastVisible ? 0 : 5,\r\n                    })}\r\n                    pageSizeOptions={[5, 10, 15]}\r\n                />\r\n\r\n            </Container>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Xác nhận xóa?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Bạn có chắc chắn muốn xóa Tài Khoản này không?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Hủy</Button>\r\n                    <Button onClick={() => handleDelete(idDelete)} autoFocus>\r\n                        Xóa\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClientPage;\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\UpdateClients.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\SanPham\\ModelAdd.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\SanPham\\ModelUpdate.js",["1002","1003"],[],"import { Helmet } from 'react-helmet-async';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { pink } from '@mui/material/colors';\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { CardGroup } from 'react-bootstrap';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport {\r\n  Card,\r\n  Stack,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Snackbar,\r\n  Alert,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  TableHead,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Box,\r\n  IconButton,\r\n  FormLabel,\r\n  Backdrop,\r\n  Chip,\r\n} from '@mui/material';\r\nimport Iconify from '../../components/iconify';\r\nimport { putUpdateSanPham, detailSP } from '../../service/SanPhamService';\r\nimport { findCtspById, addColorAndSize, updateNumber, detailCTSP } from '../../service/ChiTietSPService';\r\nimport { deleteAnh, fetchAnh } from '../../service/AnhService';\r\nimport { postAddCloud, deleteCloud } from '../../service/CloudinaryService';\r\n\r\nimport { fetchXX, detailXX } from '../../service/XuatXuService';\r\nimport { fetchCL, detailCL } from '../../service/ChatLieuService';\r\nimport { fetchCoAo, detailCoAo } from '../../service/LoaiCoAoService';\r\nimport { fetchLSP, detailLSP } from '../../service/LoaiSPService';\r\nimport { fetchTayAo, detailTayAo } from '../../service/OngTayAoService';\r\nimport { fetchMS } from '../../service/MauSacService';\r\nimport { fetchSize } from '../../service/SizeService';\r\nimport '../../scss/UpdateSp.scss';\r\n\r\nfunction renderTrangThai(trangThai) {\r\n  let badgeVariant;\r\n  let statusText;\r\n\r\n  switch (trangThai) {\r\n    case 0:\r\n      badgeVariant = 'success';\r\n      statusText = 'Còn bán';\r\n      break;\r\n    case 1:\r\n      badgeVariant = 'warning';\r\n      statusText = 'Đang cập nhật';\r\n      break;\r\n    case 10:\r\n      badgeVariant = 'error';\r\n      statusText = 'Ngừng kinh doanh';\r\n      break;\r\n    default:\r\n      badgeVariant = 'default';\r\n      statusText = 'Unknown status';\r\n      break;\r\n  }\r\n\r\n  return <Chip label={statusText} color={badgeVariant} />;\r\n}\r\n\r\nfunction formatCurrency(price) {\r\n  if (!price) return '0';\r\n\r\n  const formatter = new Intl.NumberFormat('vi-VN', {\r\n    style: 'currency',\r\n    currency: 'VND',\r\n    minimumFractionDigits: 0,\r\n  });\r\n\r\n  return formatter.format(price);\r\n}\r\n\r\nexport default function UpdateSanPham() {\r\n  const [maSp, setMaSp] = useState('');\r\n  const [tenSp, setTenSp] = useState('');\r\n  const [moTa, setMoTa] = useState('');\r\n  const [trangThai, setTrangThai] = useState('0');\r\n\r\n  const [chatLieu, setChatLieu] = useState('');\r\n  const [loaiSP, setLoaiSP] = useState('');\r\n  const [xuatXu, setXuatXu] = useState('');\r\n  const [tayAo, setTayAo] = useState('');\r\n  const [coAo, setCoAo] = useState('');\r\n\r\n  const [mauSac, setMauSac] = useState('');\r\n  const [size, setSize] = useState('');\r\n\r\n  const [idCtsp, setIdCtsp] = useState('');\r\n  const [giaNhap, setGiaNhap] = useState('');\r\n  const [giaBan, setGiaBan] = useState('');\r\n  const [soLuongTon, setSoLuongTon] = useState('');\r\n  const [statusAtt, setStatusAtt] = useState('');\r\n\r\n  const [listCL, setListCL] = useState([]);\r\n  const [listLSP, setListLSP] = useState([]);\r\n  const [listXX, setListXX] = useState([]);\r\n  const [listTayAo, setListTayAo] = useState([]);\r\n  const [listCoAo, setListCoAo] = useState([]);\r\n  const [listCTSP, setListCTSP] = useState([]);\r\n  const [listImg, setListImg] = useState([]);\r\n  const [listMS, setListMS] = useState([]);\r\n  const [listSize, setListSize] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllList();\r\n  }, []);\r\n\r\n  const getAllList = async () => {\r\n    const resCL = await fetchCL();\r\n    setListCL(resCL);\r\n\r\n    const resLSP = await fetchLSP();\r\n    setListLSP(resLSP);\r\n\r\n    const resXX = await fetchXX();\r\n    setListXX(resXX);\r\n\r\n    const resTayAo = await fetchTayAo();\r\n    setListTayAo(resTayAo);\r\n\r\n    const resCoAo = await fetchCoAo();\r\n    setListCoAo(resCoAo);\r\n\r\n    const resMS = await fetchMS();\r\n    setListMS(resMS);\r\n\r\n    const resSize = await fetchSize();\r\n    setListSize(resSize);\r\n  };\r\n\r\n  // Detail sp\r\n  const param = useParams();\r\n  const idSpHttp = param.id;\r\n\r\n  const getListData = useCallback(async () => {\r\n    try {\r\n      const res = await detailSP(idSpHttp);\r\n      setMaSp(res.maSp);\r\n      setTenSp(res.tenSp);\r\n      setMoTa(res.moTa);\r\n      setTrangThai(res.trangThai);\r\n      setChatLieu(res.idCl.idCl);\r\n      setLoaiSP(res.idLsp.idLoaisp);\r\n      setXuatXu(res.idXx.idXx);\r\n      setTayAo(res.idTayAo.idTayAo);\r\n      setCoAo(res.idCoAo.idCoAo);\r\n\r\n      const resCTSP = await findCtspById(idSpHttp);\r\n      setListCTSP(resCTSP);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n  }, [idSpHttp]);\r\n  useEffect(() => {\r\n    getListData();\r\n  }, [getListData]);\r\n\r\n  // dong mo confirm\r\n  const [openUpdate, setOpenUpdate] = useState(false);\r\n\r\n  const handleClickUpdate = () => {\r\n    setOpenUpdate(true);\r\n  };\r\n\r\n  const handleCloseUpdate = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const [openColorAndSize, setOpenColorAndSize] = useState(false);\r\n\r\n  const handleClickColorAndSize = () => {\r\n    setOpenColorAndSize(true);\r\n  };\r\n\r\n  const handleCloseColorAndSize = () => {\r\n    setOpenColorAndSize(false);\r\n  };\r\n\r\n  // edit attributes\r\n  const [openEditAtt, setOpenEditAtt] = useState(false);\r\n\r\n  const getCtspNumber = async (id) => {\r\n    try {\r\n      const res = await detailCTSP(id);\r\n      setIdCtsp(res.idCtsp);\r\n      if (res.giaNhap == null || res.giaBan == null || res.soLuongTon == null) {\r\n        setGiaNhap('');\r\n        setGiaBan('');\r\n        setSoLuongTon('');\r\n      } else {\r\n        setGiaNhap(res.giaNhap);\r\n        setGiaBan(res.giaBan);\r\n        setSoLuongTon(res.soLuongTon);\r\n      }\r\n\r\n      setStatusAtt(res.trangThai);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n  };\r\n\r\n  const handleClickEditAtt = (id) => {\r\n    // setIdCtsp(id);\r\n    getCtspNumber(id);\r\n    setOpenEditAtt(true);\r\n    setOpenColorAndSize(false);\r\n    setOpenDulicateUpdate(false);\r\n  };\r\n\r\n  const handleClostEditAtt = () => {\r\n    getListData();\r\n    setOpenEditAtt(false);\r\n  };\r\n\r\n  // alert\r\n\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertSeverity, setAlertSeverity] = useState('success');\r\n\r\n  const handleAlertClick = (message, severity) => {\r\n    setAlertMessage(message);\r\n    setAlertSeverity(severity);\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleAlertClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSave = async () => {\r\n    // get object all\\\r\n    const getObjChatLieu = await detailCL(chatLieu);\r\n    const getObjLoaiSP = await detailLSP(loaiSP);\r\n    const getObjXuatXu = await detailXX(xuatXu);\r\n    const getObjTayAo = await detailTayAo(tayAo);\r\n    const getObjCoAo = await detailCoAo(coAo);\r\n\r\n    if (\r\n      setMaSp('') &&\r\n      setTenSp('') &&\r\n      setChatLieu('') &&\r\n      setLoaiSP('') &&\r\n      setXuatXu('') &&\r\n      setTayAo('') &&\r\n      setCoAo('') &&\r\n      setMoTa('') &&\r\n      setTrangThai('')\r\n    ) {\r\n      handleAlertClick('Cập nhật thất bại!', 'danger');\r\n    } else {\r\n      const res = await putUpdateSanPham(\r\n        idSpHttp,\r\n        maSp,\r\n        tenSp,\r\n        getObjChatLieu,\r\n        getObjLoaiSP,\r\n        getObjXuatXu,\r\n        getObjCoAo,\r\n        getObjTayAo,\r\n        moTa,\r\n        trangThai\r\n      );\r\n\r\n      console.log('Check res: ', res);\r\n      if (res && res.idSp) {\r\n        handleAlertClick('Cập nhật thành công!', 'success');\r\n        handleCloseUpdate();\r\n        navigate(`/dashboard/products`);\r\n      } else {\r\n        handleAlertClick('Cập nhật thất bại!', 'danger');\r\n        handleCloseUpdate();\r\n      }\r\n    }\r\n  };\r\n\r\n  // image\r\n  const getAnhData = useCallback(async () => {\r\n    try {\r\n      const res = await fetchAnh(idSpHttp);\r\n      setListImg(res);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n  }, [idSpHttp]);\r\n  useEffect(() => {\r\n    getAnhData();\r\n  }, [getAnhData]);\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const uploadImage = useCallback(async () => {\r\n    if (selectedImages.length !== 0) {\r\n      const formData = new FormData();\r\n      selectedImages.forEach((image) => {\r\n        formData.append('images', image);\r\n        formData.append('idSp', idSpHttp);\r\n      });\r\n      const res = await postAddCloud(formData);\r\n      getAnhData();\r\n      console.log('Check res: ', res);\r\n      setSelectedImages([]);\r\n      const input = document.querySelector('input[type=\"file\"]');\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n    }\r\n  }, [selectedImages, getAnhData, idSpHttp]);\r\n\r\n  useEffect(() => {\r\n    if (selectedImages.length > 0) {\r\n      uploadImage();\r\n    }\r\n  }, [selectedImages, uploadImage]);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const imageFiles = acceptedFiles.filter((file) => file.type.startsWith('image/'));\r\n    setSelectedImages(imageFiles);\r\n    handleOpenBD();\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: 'image/*',\r\n    multiple: true,\r\n  });\r\n\r\n  const handlDeleteImg = async (idImg, url) => {\r\n    const parts = url.split('/');\r\n    const publicId = parts[parts.length - 2].concat('/', parts[parts.length - 1].split('.')[0]);\r\n\r\n    await deleteCloud(publicId);\r\n    await deleteAnh(idImg);\r\n    getAnhData();\r\n  };\r\n\r\n  // add color and size\r\n  const hanldeAddColorAndSize = async () => {\r\n    const res = await addColorAndSize(idSpHttp, mauSac, size);\r\n    console.log('Check res: ', res);\r\n    if (res && res.idCtsp) {\r\n      if (res.trangThai === 1) {\r\n        handleAlertClick('Thêm thành công!', 'success');\r\n        handleClickEditAtt(res.idCtsp);\r\n        handleCloseColorAndSize();\r\n      } else {\r\n        handleOpenDulicateUpdate();\r\n        setIdCtsp(res.idCtsp);\r\n      }\r\n    } else {\r\n      handleAlertClick('Cập nhật thất bại!', 'danger');\r\n      handleCloseColorAndSize();\r\n    }\r\n  };\r\n\r\n  // update number\r\n\r\n  const handlUpdateNumber = async () => {\r\n    const res = await updateNumber(idCtsp, giaNhap, giaBan, soLuongTon, statusAtt);\r\n    console.log('Check res: ', res);\r\n    if (res && res.idCtsp) {\r\n      handleAlertClick('Cập nhật thành công!', 'success');\r\n      handleClostEditAtt();\r\n    } else {\r\n      handleAlertClick('Cập nhật thất bại!', 'danger');\r\n      handleClostEditAtt();\r\n    }\r\n  };\r\n\r\n  // comfirm update\r\n  const [openDulicateUpdate, setOpenDulicateUpdate] = useState(false);\r\n\r\n  const handleOpenDulicateUpdate = () => {\r\n    setOpenDulicateUpdate(true);\r\n  };\r\n\r\n  const handleCloseDulicateUpdate = () => {\r\n    setOpenDulicateUpdate(false);\r\n  };\r\n\r\n  // backdrop\r\n  const [openBD, setOpenBD] = useState(false);\r\n  const handleCloseBD = () => {\r\n    setOpenBD(false);\r\n  };\r\n  const handleOpenBD = () => {\r\n    setOpenBD(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCloseBD();\r\n  }, [listImg]);\r\n\r\n  // set size\r\n  const [isSizeSelected, setIsSizeSelected] = useState(false);\r\n\r\n  const handleShowSize = (item) => {\r\n    if (isSizeSelected && size === item) {\r\n      setSize('');\r\n      setIsSizeSelected(false);\r\n    } else {\r\n      setSize(item);\r\n      setIsSizeSelected(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> User | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Cập nhật sản phẩm\r\n          </Typography>\r\n        </Stack>\r\n\r\n        <Card sx={{ padding: '25px' }}>\r\n          <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n            <Grid item xs={12}>\r\n              <TextField id=\"fullWidth\" label=\"Mã sản phẩm\" fullWidth disabled value={maSp} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"fullWidth\"\r\n                label=\"Tên sản phẩm\"\r\n                fullWidth\r\n                onChange={(event) => setTenSp(event.target.value)}\r\n                value={tenSp}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {listCL.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Chất liệu</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Chất liệu\"\r\n                    value={chatLieu}\r\n                    onChange={(event) => setChatLieu(event.target.value)}\r\n                  >\r\n                    {listCL.map((item, index) => (\r\n                      <MenuItem value={item.idCl} key={index}>\r\n                        {item.tenCl}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              {listLSP.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Loại sản phẩm</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Loại sản phẩm\"\r\n                    value={loaiSP}\r\n                    onChange={(event) => setLoaiSP(event.target.value)}\r\n                  >\r\n                    {listLSP.map((option, index) => (\r\n                      <MenuItem key={index} value={option.idLoaisp}>\r\n                        {option.tenLsp}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {listXX.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Xuất xứ</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Xuất xứ\"\r\n                    value={xuatXu}\r\n                    onChange={(event) => setXuatXu(event.target.value)}\r\n                  >\r\n                    {listXX.map((item, index) => (\r\n                      <MenuItem value={item.idXx} key={index}>\r\n                        {item.tenNuoc}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {listCoAo.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Loại cổ áo</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Loại cổ áo\"\r\n                    value={coAo}\r\n                    onChange={(event) => setCoAo(event.target.value)}\r\n                  >\r\n                    {listCoAo.map((item, index) => (\r\n                      <MenuItem value={item.idCoAo} key={index}>\r\n                        {item.loaiCoAo}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {listTayAo.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Ống tay áo</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Ống tay áo\"\r\n                    value={tayAo}\r\n                    onChange={(event) => setTayAo(event.target.value)}\r\n                  >\r\n                    {listTayAo.map((option, index) => (\r\n                      <MenuItem key={index} value={option.idTayAo}>\r\n                        {option.loaiTayAo}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n              <div>\r\n                <RadioGroup\r\n                  row\r\n                  aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                  name=\"row-radio-buttons-group\"\r\n                  sx={{ marginTop: '15px' }}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"0\"\r\n                    control={<Radio />}\r\n                    label=\"Còn bán\"\r\n                    checked={Number(trangThai) === 0}\r\n                    onChange={(event) => setTrangThai(event.target.value)}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"10\"\r\n                    control={<Radio />}\r\n                    label=\"Ngừng kinh doanh\"\r\n                    checked={Number(trangThai) === 10}\r\n                    onChange={(event) => setTrangThai(event.target.value)}\r\n                  />\r\n                </RadioGroup>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Mô tả\"\r\n                multiline\r\n                rows={4}\r\n                fullWidth\r\n                onChange={(event) => setMoTa(event.target.value)}\r\n                value={moTa}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              fullWidth\r\n              sx={{ marginTop: '25px' }}\r\n              onClick={() => handleClickUpdate()}\r\n            >\r\n              Cập nhật\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card sx={{ padding: '25px', marginTop: '15px' }}>\r\n          <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Cập nhật thuộc tính\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6} style={{ textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n                onClick={() => handleClickColorAndSize()}\r\n              >\r\n                Thêm thuộc tính\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Màu sắc</TableCell>\r\n                      <TableCell>Size</TableCell>\r\n                      <TableCell>Giá nhập</TableCell>\r\n                      <TableCell>Giá bán</TableCell>\r\n                      <TableCell>Số lượng tồn</TableCell>\r\n                      <TableCell>Trạng thái</TableCell>\r\n                      <TableCell> </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {listCTSP.map((row) => (\r\n                      <TableRow key={row.idCtsp} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.idMs.tenMs}\r\n                        </TableCell>\r\n                        <TableCell>{row.idSize.tenSize}</TableCell>\r\n                        <TableCell>{formatCurrency(row.giaNhap)}</TableCell>\r\n                        <TableCell>{formatCurrency(row.giaBan)}</TableCell>\r\n                        <TableCell>{row.soLuongTon}</TableCell>\r\n                        <TableCell>{renderTrangThai(row.trangThai)}</TableCell>\r\n                        <TableCell>\r\n                          <IconButton aria-label=\"add an alarm\" onClick={() => handleClickEditAtt(row.idCtsp)}>\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        <Card sx={{ padding: '25px', marginTop: '15px' }}>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ paddingBottom: '20px' }}>\r\n            Cập nhật hình ảnh\r\n          </Typography>\r\n\r\n          <div className=\"image-container\">\r\n            <CardGroup>\r\n              <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n                {listImg &&\r\n                  listImg.length > 0 &&\r\n                  listImg.map((item, index) => (\r\n                    <Grid item xs={2.3} key={index}>\r\n                      <Card key={index} sx={{ width: 200, marginRight: 5, marginBottom: 5 }}>\r\n                        <CardActionArea>\r\n                          <Box position=\"relative\">\r\n                            <CardMedia component=\"img\" height=\"200\" image={item.url} alt=\"green iguana\" />\r\n                            <IconButton\r\n                              sx={{ position: 'absolute', top: 0, right: 0 }}\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                              onClick={() => handlDeleteImg(item.idImage, item.url)}\r\n                            >\r\n                              <DeleteIcon sx={{ color: pink[500], fontSize: 40 }} />\r\n                            </IconButton>\r\n                          </Box>\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))}\r\n\r\n                {listImg.length < 10 && (\r\n                  <Grid item xs={2.3}>\r\n                    <Card sx={{ width: 200, marginRight: 5, marginBottom: 5, padding: 2 }}>\r\n                      <div {...getRootProps()} className=\"dropzone\">\r\n                        <input {...getInputProps()} />\r\n                        <p>\r\n                          <AddPhotoAlternateIcon sx={{ fontSize: 40 }} /> Kéo hoặc thả ảnh vô đây, hoặc click để chọn\r\n                          ảnh\r\n                        </p>\r\n                      </div>\r\n                    </Card>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </CardGroup>\r\n          </div>\r\n        </Card>\r\n      </Container>\r\n      <Dialog\r\n        open={openUpdate}\r\n        onClose={handleCloseUpdate}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Xác nhận sửa?'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Bạn có chắc chắn muốn sửa sản phẩm này không?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleCloseUpdate()}>Canel</Button>\r\n          <Button onClick={() => handleSave()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={openColorAndSize}\r\n        onClose={handleCloseColorAndSize}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Thêm thuộc tính'}</DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"listMauSac\">\r\n            {listMS.length > 0 && (\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Màu sắc</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  label=\"Màu sắc\"\r\n                  value={mauSac}\r\n                  onChange={(event) => setMauSac(event.target.value)}\r\n                >\r\n                  {listMS.map((item, index) => (\r\n                    <MenuItem value={item.idMs} key={index}>\r\n                      {item.tenMs}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            )}\r\n          </div>\r\n          <div className=\"listSize\">\r\n            <Box sx={{ display: 'flex', alignItems: 'center', pb: 1 }}>\r\n              <div>\r\n                Size:{' '}\r\n                {listSize.map((item, itemIndex) => (\r\n                  <Button\r\n                    style={{\r\n                      marginRight: '4px',\r\n                      marginBottom: '4px',\r\n                    }}\r\n                    key={`size-button-${itemIndex}`}\r\n                    onClick={() => handleShowSize(item.idSize)}\r\n                    variant={size === item.idSize ? 'contained' : 'outlined'}\r\n                    value={size}\r\n                    size=\"small\"\r\n                  >\r\n                    {item.tenSize}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </Box>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleCloseColorAndSize()}>Canel</Button>\r\n          <Button onClick={() => hanldeAddColorAndSize()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={openEditAtt}\r\n        onClose={handleClostEditAtt}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Cập nhật số lượng và trạng thái'}</DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"editAtt\">\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label=\"Giá nhập\"\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              value={giaNhap}\r\n              onChange={(event) => setGiaNhap(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"editAtt\">\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label=\"Giá bán\"\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              value={giaBan}\r\n              onChange={(event) => setGiaBan(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"editAtt\">\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label=\"Số lượng tồn\"\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              value={soLuongTon}\r\n              onChange={(event) => setSoLuongTon(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"editAtt\">\r\n            <FormControl>\r\n              <FormLabel id=\"demo-row-radio-buttons-group-label\">Trạng thái</FormLabel>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                value={statusAtt}\r\n                onChange={(event) => setStatusAtt(event.target.value)}\r\n              >\r\n                <FormControlLabel value=\"0\" control={<Radio />} label=\"Còn bán\" />\r\n                <FormControlLabel value=\"10\" control={<Radio />} label=\"Ngừng kinh doanh\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleClostEditAtt()}>Canel</Button>\r\n          <Button onClick={() => handlUpdateNumber()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={openDulicateUpdate}\r\n        onClose={handleCloseDulicateUpdate}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Thuộc tính đã tồn tại!'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Bạn có muốn chuyển đến trang cập nhật thuộc tính?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleCloseDulicateUpdate()}>Canel</Button>\r\n          <Button onClick={() => handleClickEditAtt(idCtsp)} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Stack spacing={2} sx={{ width: '100%' }}>\r\n        <Snackbar\r\n          open={openAlert}\r\n          autoHideDuration={6000}\r\n          onClose={handleAlertClose}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleAlertClose} severity={alertSeverity} sx={{ width: '100%' }}>\r\n            {alertMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Stack>\r\n\r\n      <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={openBD}\r\n        onClick={() => handleCloseBD()}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\diaChi\\UpdateAddress.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\diaChi\\AddAddress.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\diaChi\\AllAddress.js",["1004"],["1005"],"import { Helmet } from 'react-helmet-async';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  DataGrid,\r\n  GridToolbarColumnsButton,\r\n  GridToolbarContainer,\r\n  GridToolbarDensitySelector,\r\n  GridToolbarExport,\r\n  GridToolbarFilterButton,\r\n} from '@mui/x-data-grid';\r\nimport { Container, FormControl, IconButton, InputLabel, MenuItem, Select, TextField, Typography } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { getPhuongXa, getQuanHuyen, getTinhThanhPho } from '../../service/apiDiaChi';\r\nimport { fetchAllDiaChi } from '../../service/diaChiSevice';\r\nimport AlertSnackbar from '../../layouts/dashboard/AlertSnackbar';\r\n\r\nconst AllAddress = () => {\r\n  const [listData, setListData] = useState([]);\r\n\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('Tất cả');\r\n  const [selectedLoaiDiaChi, setSelectedLoaiDiaChi] = useState('Tất cả');\r\n  const [originalListData, setOriginalListData] = useState([]);\r\n  const navigate = useNavigate();\r\n  const isMounted = useRef(true);\r\n  const [listTP, setListTP] = useState([]);\r\n  const [listQH, setListQH] = useState([]);\r\n  const [listPX, setListPX] = useState([]);\r\n\r\n  const getListData = async (page, query) => {\r\n    try {\r\n      const res = await fetchAllDiaChi(page, query);\r\n      if (isMounted.current) {\r\n        setListData(res);\r\n\r\n        setOriginalListData(res);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    getListData(0);\r\n    getListTP();\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (listData.length > 0) {\r\n      listData.forEach((item) => {\r\n        fetchQuanHuyenAndPhuongXa(item.tinhThanh, item.quanHuyen);\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [listData]);\r\n  const getListTP = async () => {\r\n    const resTP = await getTinhThanhPho();\r\n\r\n    setListTP(resTP?.data.results);\r\n  };\r\n\r\n  const getNameByIdTP = (id) => {\r\n    const province = listTP.find((item) => item.province_id === id);\r\n    return province ? province.province_name : null;\r\n  };\r\n  const getNameByIdQH = (id) => {\r\n    const province = listQH.find((item) => item.district_id === id);\r\n    return province ? province.district_name : null;\r\n  };\r\n  const getNameByIdPX = (id) => {\r\n    const province = listPX.find((item) => item.ward_id === id);\r\n    return province ? province.ward_name : null;\r\n  };\r\n\r\n  const fetchQuanHuyenAndPhuongXa = async (tinhThanhID, quanHuyenID) => {\r\n    const existingQH = listQH.find((item) => item.district_id === quanHuyenID);\r\n    const existingPX = listPX.find((item) => item.ward_id === quanHuyenID);\r\n\r\n    if (existingQH && existingPX) {\r\n      // Data already exists, no need to fetch again\r\n      return;\r\n    }\r\n\r\n    const quanHuyenData = await getQuanHuyen(tinhThanhID);\r\n    const phuongXaData = await getPhuongXa(quanHuyenID);\r\n\r\n    if (quanHuyenData.status === 200 && phuongXaData.status === 200) {\r\n      setListQH((prevListQH) => [...prevListQH, ...quanHuyenData.data.results]);\r\n      setListPX((prevListPX) => [...prevListPX, ...phuongXaData.data.results]);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'index', headerName: '##', width: 30 },\r\n    { field: 'maTaiKhoan', headerName: 'Mã Tài Khoản', width: 130 },\r\n    { field: 'tenNguoiNhan', headerName: 'Tên Người Nhận', width: 120 },\r\n    { field: 'sdtKh', headerName: 'Số Điện Thoại', width: 120 },\r\n    { field: 'diaChi', headerName: 'Địa Chỉ', width: 300 },\r\n    { field: 'diaChiCuThe', headerName: 'Địa Chỉ Cụ Thể', width: 210 },\r\n    {\r\n      field: 'loaiDiaChi',\r\n      headerName: 'Loại Địa Chỉ',\r\n      width: 100,\r\n      renderCell: (params) => {\r\n        const { value: loaiDiaChi } = params;\r\n        let badgeVariant;\r\n        let statusText;\r\n        switch (loaiDiaChi) {\r\n          case 1:\r\n            badgeVariant = 'primary';\r\n            statusText = 'Nơi Làm Việc';\r\n            break;\r\n          default:\r\n            badgeVariant = 'light';\r\n            statusText = 'Nhà Riêng';\r\n            break;\r\n        }\r\n\r\n        return (\r\n          <Badge bg={badgeVariant} text=\"dark\">\r\n            {statusText}\r\n          </Badge>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: 'trangThai',\r\n      headerName: 'Trạng Thái',\r\n      width: 120,\r\n      renderCell: (params) => {\r\n        const { value: trangThai } = params;\r\n        let badgeVariant;\r\n        let statusText;\r\n        switch (trangThai) {\r\n          case 1:\r\n            badgeVariant = 'primary';\r\n            statusText = 'Đã Xác Nhận';\r\n            break;\r\n          case 4:\r\n            badgeVariant = 'info';\r\n            statusText = 'Đã Ngưng hoạt động';\r\n            break;\r\n          case 10:\r\n            badgeVariant = 'danger';\r\n            statusText = 'Đã Bị Xóa';\r\n            break;\r\n          default:\r\n            badgeVariant = 'light';\r\n            statusText = 'Chưa Xác Nhận';\r\n            break;\r\n        }\r\n\r\n        return (\r\n          <Badge bg={badgeVariant} text=\"dark\">\r\n            {statusText}\r\n          </Badge>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // Xử lý dữ liệu của bảng vào mảng rows\r\n  const rows = listData\r\n    .filter((item) => {\r\n      const valuesToSearch = [\r\n        item.taiKhoan.maTaiKhoan, // Search maTaiKhoan directly\r\n        item.tenNguoiNhan,\r\n        item.sdt,\r\n        item.tinhThanh,\r\n        item.quanHuyen,\r\n        item.phuongXa,\r\n        item.diaChiCuThe, // Convert trangThai to string for search\r\n      ];\r\n      return valuesToSearch.some((value) => String(value).toLowerCase().includes(searchKeyword.toLowerCase()));\r\n    })\r\n    .map((item, index) => ({\r\n      idTaiKhoan: item.taiKhoan.idTaiKhoan,\r\n      id: item.id,\r\n      index: index + 1,\r\n      maTaiKhoan: item.taiKhoan.maTaiKhoan,\r\n      tenNguoiNhan: item.tenNguoiNhan,\r\n      sdtKh: item.sdt,\r\n      diaChi: `${getNameByIdTP(item.tinhThanh)}, ${getNameByIdQH(item.quanHuyen)}, ${getNameByIdPX(item.phuongXa)}`,\r\n      diaChiCuThe: item.diaChiCuThe,\r\n      loaiDiaChi: item.loaiDiaChi,\r\n      trangThai: item.trangThai,\r\n    }));\r\n\r\n  const handlePageClick = (page) => {\r\n    getListData(page + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filteredData =\r\n      selectedStatus === 'Tất cả'\r\n        ? originalListData // Sử dụng danh sách dữ liệu gốc khi chọn \"All\"\r\n        : originalListData.filter((item) => item.trangThai === parseInt(selectedStatus, 10));\r\n\r\n    const filteredLoai =\r\n      selectedLoaiDiaChi === 'Tất cả'\r\n        ? originalListData // Sử dụng danh sách dữ liệu gốc khi chọn \"All\"\r\n        : originalListData.filter((item) => item.loaiDiaChi === parseInt(selectedLoaiDiaChi, 10));\r\n    const combinedFilteredData = filteredData.filter((item) => filteredLoai.includes(item));\r\n\r\n    setListData(combinedFilteredData);\r\n  }, [selectedStatus, selectedLoaiDiaChi, originalListData]);\r\n\r\n  const handlClickRow = (item) => {\r\n    // console.log(\"Check click: \", item);\r\n    navigate(`/dashboard/address/detail/${item.id}`);\r\n  };\r\n\r\n  function CustomToolbar() {\r\n    return (\r\n      <GridToolbarContainer>\r\n        <GridToolbarFilterButton />\r\n        <GridToolbarColumnsButton />\r\n        <GridToolbarDensitySelector />\r\n        <GridToolbarExport\r\n          csvOptions={{\r\n            fileName: 'address',\r\n            utf8WithBom: true,\r\n          }}\r\n        />\r\n\r\n        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n          <InputLabel id=\"status-select\">Trạng Thái:</InputLabel>\r\n          <Select\r\n            labelId=\"status-select\"\r\n            id=\"status-select\"\r\n            value={selectedStatus}\r\n            label=\"Trạng Thái\"\r\n            onChange={(e) => setSelectedStatus(e.target.value)}\r\n          >\r\n            <MenuItem value={'Tất cả'}>Tất Cả</MenuItem>\r\n            <MenuItem value={0}>Chưa Kích Hoạt</MenuItem>\r\n            <MenuItem value={1}>Đã Kích Hoạt</MenuItem>\r\n            <MenuItem value={4}>Ngưng Hoạt Động</MenuItem>\r\n            <MenuItem value={10}>Đã Bị Xóa</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n          <InputLabel id=\"status-select\">Loại Địa Chỉ:</InputLabel>\r\n          <Select\r\n            labelId=\"status-select\"\r\n            id=\"status-select\"\r\n            value={selectedStatus}\r\n            label=\"Trạng Thái\"\r\n            onChange={(e) => setSelectedLoaiDiaChi(e.target.value)}\r\n          >\r\n            <MenuItem value={'Tất cả'}>Tất Cả</MenuItem>\r\n            <MenuItem value={0}>Nhà Riêng</MenuItem>\r\n            <MenuItem value={1}>Nơi Làm Việc</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </GridToolbarContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <Helmet>\r\n        <title> Address || 5F Store </title>\r\n      </Helmet>\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Thông Tin Tất Cả Địa Chỉ\r\n          </Typography>\r\n        </Stack>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          sx={{ ml: 1, flex: 1 }}\r\n          placeholder=\"Tìm Kiếm\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n            ),\r\n          }}\r\n          onChange={(e) => setSearchKeyword(e.target.value)}\r\n        />\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: 10 },\r\n            },\r\n          }}\r\n          slots={{ toolbar: CustomToolbar }}\r\n          pageSizeOptions={[5, 10, 15]}\r\n          onRowClick={(params) => handlClickRow(params.row)}\r\n        />\r\n      </Container>\r\n      <AlertSnackbar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllAddress;\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\diaChi\\AddressByClient.js",["1006","1007","1008"],["1009"],"import React, {useEffect, useState} from \"react\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {Helmet} from \"react-helmet-async\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport {\r\n    DataGrid,\r\n    GridActionsCellItem,\r\n    GridToolbarColumnsButton,\r\n    GridToolbarContainer,\r\n    GridToolbarDensitySelector,\r\n    GridToolbarExport,\r\n    GridToolbarFilterButton,\r\n} from \"@mui/x-data-grid\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    IconButton,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n// import {toast, ToastContainer} from \"react-toastify\";\r\nimport {deleteDiaChi, fetchDiaChiByTK} from \"../../service/diaChiSevice\";\r\nimport {getPhuongXa, getQuanHuyen, getTinhThanhPho} from \"../../service/apiDiaChi\";\r\nimport Iconify from \"../../components/iconify\";\r\nimport {useAlert} from \"../../layouts/dashboard/AlertContext\";\r\n\r\n\r\nconst AddressByClient = () => {\r\n    const param = useParams();\r\n    const idTK = param.id;\r\n    const [listData, setListData] = useState([]);\r\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n    const [selectedStatus, setSelectedStatus] = useState(\"Tất cả\");\r\n    const [selectedLoaiDiaChi, setSelectedLoaiDiaChi] = useState(\"Tất cả\");\r\n    const [originalListData, setOriginalListData] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const [listTP, setListTP] = useState([]);\r\n    const [listQH, setListQH] = useState([]);\r\n    const [listPX, setListPX] = useState([]);\r\n\r\n    const {showAlert} = useAlert();\r\n\r\n    const getListData = async (idTK, page) => {\r\n        try {\r\n            const res = await fetchDiaChiByTK(idTK, page);\r\n            setListData(res);\r\n            setOriginalListData(res);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getListData(idTK, 0);\r\n        getListTP();\r\n    }, [idTK]);\r\n\r\n    useEffect(() => {\r\n        listData.forEach((item) => {\r\n            fetchQuanHuyenAndPhuongXa(item.tinhThanh, item.quanHuyen);\r\n        });\r\n        // eslint-disable-next-line\r\n    }, [listData]);\r\n\r\n    const fetchUpdatedData = (page) => {\r\n        getListData(idTK, page);\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {field: \"index\", headerName: \"##\", width: 30},\r\n        // {field: \"maTaiKhoan\", headerName: \"Mã Tài Khoản\", width: 130},\r\n        {field: \"tenNguoiNhan\", headerName: \"Tên Người Nhận\", width: 120},\r\n        {field: \"sdtKh\", headerName: \"Số Điện Thoại\", width: 120,},\r\n        {field: \"diaChi\", headerName: \"Địa Chỉ\", width: 200,},\r\n        {field: \"diaChiCuThe\", headerName: \"Địa Chỉ Cụ Thể\", width: 210,},\r\n        {\r\n            field: \"loaiDiaChi\", headerName: \"Loại Địa Chỉ\", width: 100, renderCell: (params) => {\r\n                const {value: loaiDiaChi} = params;\r\n                let badgeVariant;\r\n                let statusText;\r\n                switch (loaiDiaChi) {\r\n                    case 1:\r\n                        badgeVariant = \"primary\";\r\n                        statusText = \"Nơi Làm Việc\";\r\n                        break;\r\n                    default:\r\n                        badgeVariant = \"light\";\r\n                        statusText = \"Nhà Riêng\";\r\n                        break;\r\n                }\r\n\r\n                return (<Badge bg={badgeVariant} text=\"dark\">\r\n                    {statusText}\r\n                </Badge>);\r\n            },\r\n        }, {\r\n            field: \"trangThai\", headerName: \"Trạng Thái\", width: 160, renderCell: (params) => {\r\n                const {value: trangThai} = params;\r\n                let badgeVariant;\r\n                let statusText;\r\n                switch (trangThai) {\r\n                    case 1:\r\n                        badgeVariant = \"primary\";\r\n                        statusText = \"Đã Xác Nhận\";\r\n                        break;\r\n                    case 4:\r\n                        badgeVariant = \"info\";\r\n                        statusText = \"Đã Ngưng hoạt động\";\r\n                        break;\r\n                    default:\r\n                        badgeVariant = \"light\";\r\n                        statusText = \"Chưa Xác Nhận\";\r\n                        break;\r\n                }\r\n\r\n                return (<Badge bg={badgeVariant} text=\"dark\">\r\n                    {statusText}\r\n                </Badge>);\r\n            },\r\n        }, {\r\n            field: \"actions\", headerName: \"Hành Động\", width: 100, renderCell: (params) => {\r\n                const {row} = params;\r\n                return [\r\n                    <GridActionsCellItem\r\n                        color=\"primary\"\r\n                        onClick={() => handlClickRow(row)}\r\n                        icon={<EditIcon/>}\r\n                    />,\r\n                    <GridActionsCellItem\r\n                        color=\"error\"\r\n                        icon={<DeleteIcon/>}\r\n                        onClick={() => handleClickOpenDelete(row)}\r\n                    />,\r\n\r\n                ];\r\n            },\r\n        },];\r\n    const getListTP = async () => {\r\n        const resTP = await getTinhThanhPho();\r\n        setListTP(resTP?.data.results);\r\n    };\r\n\r\n    const getNameByIdTP = (id) => {\r\n        const province = listTP.find((item) => item.province_id === id);\r\n        return province ? province.province_name : null;\r\n    };\r\n    const getNameByIdQH = (id) => {\r\n        const province = listQH.find((item) => item.district_id === id);\r\n        return province ? province.district_name : null;\r\n    };\r\n    const getNameByIdPX = (id) => {\r\n        const province = listPX.find((item) => item.ward_id === id);\r\n        return province ? province.ward_name : null;\r\n    };\r\n\r\n    const fetchQuanHuyenAndPhuongXa = async (tinhThanhID, quanHuyenID) => {\r\n        const existingQH = listQH.find(item => item.district_id === quanHuyenID);\r\n        const existingPX = listPX.find(item => item.ward_id === quanHuyenID);\r\n\r\n        if (existingQH && existingPX) {\r\n            // Data already exists, no need to fetch again\r\n            return;\r\n        }\r\n\r\n        const quanHuyenData = await getQuanHuyen(tinhThanhID);\r\n        const phuongXaData = await getPhuongXa(quanHuyenID);\r\n\r\n        if (quanHuyenData.status === 200 && phuongXaData.status === 200) {\r\n            setListQH(prevListQH => [...prevListQH, ...quanHuyenData.data.results]);\r\n            setListPX(prevListPX => [...prevListPX, ...phuongXaData.data.results]);\r\n        }\r\n    };\r\n\r\n\r\n    // Xử lý dữ liệu của bảng vào mảng rows\r\n    const rows = listData\r\n        .filter((item) => {\r\n            const valuesToSearch = [item.taiKhoan.maTaiKhoan, // Search maTaiKhoan directly\r\n                item.tenNguoiNhan, item.sdt, item.tinhThanh, item.quanHuyen, item.phuongXa, item.diaChiCuThe, // Convert trangThai to string for search\r\n            ];\r\n            return valuesToSearch.some((value) => String(value).toLowerCase().includes(searchKeyword.toLowerCase()));\r\n        })\r\n        .map((item, index) => ({\r\n            idTaiKhoan: item.taiKhoan.idTaiKhoan,\r\n            id: item.id,\r\n            index: index + 1,\r\n            maTaiKhoan: item.taiKhoan.maTaiKhoan,\r\n            tenNguoiNhan: item.tenNguoiNhan,\r\n            sdtKh: item.sdt,\r\n            diaChi: `${getNameByIdTP(item.tinhThanh)}, ${getNameByIdQH(item.quanHuyen)}, ${getNameByIdPX(item.phuongXa)}`,\r\n            diaChiCuThe: item.diaChiCuThe,\r\n            loaiDiaChi: item.loaiDiaChi,\r\n            trangThai: item.trangThai,\r\n        }));\r\n\r\n\r\n    const handlePageClick = (page) => {\r\n        getListData(page + 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const filteredData = selectedStatus === \"Tất cả\" ? originalListData // Sử dụng danh sách dữ liệu gốc khi chọn \"All\"\r\n            : originalListData.filter((item) => item.trangThai === parseInt(selectedStatus, 10));\r\n\r\n        const filteredLoai = selectedLoaiDiaChi === \"Tất cả\" ? originalListData // Sử dụng danh sách dữ liệu gốc khi chọn \"All\"\r\n            : originalListData.filter((item) => item.loaiDiaChi === parseInt(selectedLoaiDiaChi, 10));\r\n        const combinedFilteredData = filteredData.filter(item => filteredLoai.includes(item));\r\n\r\n        setListData(combinedFilteredData);\r\n    }, [selectedStatus, selectedLoaiDiaChi, originalListData]);\r\n\r\n    const handlClickRow = (item) => {\r\n        navigate(`/dashboard/address/detail/${item.id}`);\r\n    };\r\n    const handAdd = () => {\r\n        navigate(`/dashboard/address/add/${idTK}`);\r\n    };\r\n\r\n\r\n    const handleDelete = async (item) => {\r\n        const res = await deleteDiaChi(item.id);\r\n        console.log(\"Check res: \", res);\r\n        if (res) {\r\n            showAlert('success', 'Chuyển trang thêm Thành Công');\r\n            handleClose();\r\n            fetchUpdatedData(0);\r\n        } else {\r\n            showAlert('warning', 'Thêm Địa Chỉ Thất Bại !');\r\n            handleClose();\r\n        }\r\n    };\r\n\r\n    // dong mo confirm\r\n    const [open, setOpen] = useState(false);\r\n    const [idDelete, setIdDelete] = useState(\"\");\r\n\r\n    const handleClickOpenDelete = (id) => {\r\n        setOpen(true);\r\n        setIdDelete(id);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function CustomToolbar() {\r\n        return (\r\n            <GridToolbarContainer>\r\n                <GridToolbarFilterButton/>\r\n                <GridToolbarColumnsButton/>\r\n                <GridToolbarDensitySelector/>\r\n                <GridToolbarExport\r\n                    csvOptions={{\r\n                        fileName: 'address',\r\n                        utf8WithBom: true,\r\n                    }}\r\n                />\r\n\r\n                <FormControl variant=\"standard\" sx={{m: 1, minWidth: 120}}>\r\n                    <InputLabel id=\"status-select\">Trạng Thái:</InputLabel>\r\n                    <Select\r\n                        labelId=\"status-select\"\r\n                        id=\"status-select\"\r\n                        value={selectedStatus}\r\n                        label=\"Trạng Thái\"\r\n                        onChange={(e) => setSelectedStatus(e.target.value)}\r\n                    >\r\n                        <MenuItem value={\"Tất cả\"}>Tất Cả</MenuItem>\r\n                        <MenuItem value={0}>Chưa Kích Hoạt</MenuItem>\r\n                        <MenuItem value={1}>Đã Kích Hoạt</MenuItem>\r\n                        <MenuItem value={4}>Ngưng Hoạt Động</MenuItem>\r\n                        <MenuItem value={10}>Đã Bị Xóa</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"standard\" sx={{m: 1, minWidth: 120}}>\r\n                    <InputLabel id=\"status-select\">Loại Địa Chỉ:</InputLabel>\r\n                    <Select\r\n                        labelId=\"status-select\"\r\n                        id=\"status-select\"\r\n                        value={selectedStatus}\r\n                        label=\"Trạng Thái\"\r\n                        onChange={(e) => setSelectedLoaiDiaChi(e.target.value)}\r\n                    >\r\n                        <MenuItem value={\"Tất cả\"}>Tất Cả</MenuItem>\r\n                        <MenuItem value={0}>Nhà Riêng</MenuItem>\r\n                        <MenuItem value={1}>Nơi Làm Việc</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </GridToolbarContainer>\r\n        );\r\n    }\r\n\r\n\r\n    return (<>\r\n\r\n        <Helmet>\r\n            <title> Address || 5F Store </title>\r\n        </Helmet>\r\n        <Container>\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Thông Tin Địa Chỉ Của Tài Khoản: {idTK}\r\n                </Typography>\r\n                <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\"/>} onClick={() => handAdd()}>\r\n                    Tạo Địa Chỉ Mới\r\n                </Button>\r\n            </Stack>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                sx={{ml: 1, flex: 1}}\r\n                placeholder=\"Tìm Kiếm\"\r\n                InputProps={{\r\n                    startAdornment: (\r\n                        <IconButton type=\"button\" sx={{p: '10px'}} aria-label=\"search\">\r\n                            <SearchIcon/>\r\n                        </IconButton>\r\n                    ),\r\n                }}\r\n                onChange={(e) => setSearchKeyword(e.target.value)}\r\n            />\r\n\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                initialState={{\r\n                    pagination: {\r\n                        paginationModel: {page: 0, pageSize: 5},\r\n                    },\r\n                }}\r\n                slots={{toolbar: CustomToolbar}}\r\n                getRowSpacing={(params) => ({\r\n                    top: params.isFirstVisible ? 0 : 5,\r\n                    bottom: params.isLastVisible ? 0 : 5,\r\n                })}\r\n                pageSizeOptions={[5, 10, 15]}\r\n            />\r\n\r\n\r\n        </Container>\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Xác nhận xóa?\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Bạn có chắc chắn muốn xóa địa chỉ này không?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>Hủy</Button>\r\n                <Button onClick={() => handleDelete(idDelete)} autoFocus>\r\n                    Xóa\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n\r\n    </>);\r\n};\r\n\r\nexport default AddressByClient;\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout-Client.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\palette.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\customShadows.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\typography.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\simple\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\shadows.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\globalStyles.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\scroll-to-top\\ScrollToTop.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\chart\\styles.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\chart\\useChart.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\BillSevice.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\OrderManagementTimeLine.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\_mock\\blog.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\_mock\\user.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\bill-service.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\san-pham-service.js",["1010","1011","1012","1013","1014","1015","1016","1017"],[],"import custom from \"./custom-axios\";\r\n\r\nconst fetchAllSP = (page) => {\r\n  return custom.get(`/san-pham/view-all?p=${page}`); // Call API\r\n};\r\n\r\nconst fetchSpWithImg = (page) => {\r\n  return custom.get(`/san-pham/getSpWithImg?p=${page}`); // Call API\r\n};\r\n\r\nconst fetchSP = () => {\r\n  return custom.get(`/san-pham/listSP`); // Call API\r\n};\r\n\r\nconst detailSP = (idSp) => {\r\n  return custom.get(`/san-pham/detail/${idSp}`); // Call API\r\n};\r\n\r\nconst postAddSanPham = (\r\n  maSp,\r\n  tenSp,\r\n  idCl,\r\n  idMs,\r\n  idLsp,\r\n  idXx,\r\n  idCoAo,\r\n  idTayAo,\r\n  moTa,\r\n  giaBan,\r\n  trangThai\r\n) => {\r\n  return custom.post(\"/san-pham/add\", {\r\n    maSp,\r\n    tenSp,\r\n    idCl,\r\n    idMs,\r\n    idLsp,\r\n    idXx,\r\n    idCoAo,\r\n    idTayAo,\r\n    moTa,\r\n    giaBan,\r\n    trangThai,\r\n  });\r\n};\r\nconst deleteSanPham = (id) => {\r\n  return custom.delete(`/san-pham/delete/${id}`);\r\n};\r\n\r\nconst putUpdateSanPham = (\r\n  idSp,\r\n  maSp,\r\n  tenSp,\r\n  idCl,\r\n  idMs,\r\n  idLsp,\r\n  idXx,\r\n  idCoAo,\r\n  idTayAo,\r\n  moTa,\r\n  giaBan,\r\n  trangThai\r\n) => {\r\n  return custom.put(`/san-pham/update`, {\r\n    idSp,\r\n    maSp,\r\n    tenSp,\r\n    idCl,\r\n    idMs,\r\n    idLsp,\r\n    idXx,\r\n    idCoAo,\r\n    idTayAo,\r\n    moTa,\r\n    giaBan,\r\n    trangThai,\r\n  });\r\n};\r\n\r\nconst topSpTrending = () => {\r\n    return custom.get('/san-pham/top-sp-trend'); // Thay đổi URL dựa trên định nghĩa URL API của bạn\r\n  };\r\n\r\nexport {\r\n  fetchAllSP,\r\n  fetchSP,\r\n  detailSP,\r\n  postAddSanPham,\r\n  deleteSanPham,\r\n  putUpdateSanPham,\r\n  fetchSpWithImg,\r\n  topSpTrending,\r\n};\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Delete-Product.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Delete-DirectSale.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-AddKhachHang.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-AddProduct.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Create-Online.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Payment-Confirm.js",["1018","1019"],[],"import { useNavigate, useParams } from 'react-router-dom';\r\nimport '../scss/Car-Bill-ADM.scss';\r\nimport { Alert, Dialog, FormControlLabel, Snackbar, Switch, TextField } from '@mui/material';\r\nimport { useState, forwardRef } from 'react';\r\nimport { format } from 'date-fns';\r\nimport Button from '@mui/material/Button';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport PropTypes from 'prop-types';\r\nimport { paymentOnline } from '../service/BillSevice';\r\nimport { updatePayment } from '../service/OrderManagementTimeLine';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nconst ModalPaymentComfirm = (props) => {\r\n  // Get Props\r\n  ModalPaymentComfirm.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    sdtKHTT: PropTypes.string.isRequired,\r\n    tenKhTT: PropTypes.string.isRequired,\r\n    thanhTien: PropTypes.number.isRequired,\r\n    listHD: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  };\r\n  const { show, handleClose, listHD, thanhTien, tenKhTT, sdtKHTT } = props;\r\n\r\n  //   Insert product\r\n  const param = useParams();\r\n  const idHdParam = param.id;\r\n  const [moTa, setMoTa] = useState('');\r\n  const currentDate = new Date();\r\n  const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //   Show  payment online\r\n  const [isDeliveryChecked, setIsDeliveryChecked] = useState(false);\r\n\r\n  const handleDeliveryChange = (event) => {\r\n    setIsDeliveryChecked(event.target.checked);\r\n    setChangeAmount(0);\r\n  };\r\n\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  const handlePaymentOnCash = async () => {\r\n    try {\r\n      if (isDeliveryChecked === true) {\r\n        const cashGivenValue = parseFloat(cashGiven);\r\n        if (!Number.isNaN(cashGivenValue)) {\r\n          const change = thanhTien - cashGivenValue;\r\n          if (change < 0) {\r\n            setAlertContent({\r\n              type: 'warning',\r\n              message: 'Tiền Mặt Khách Đưa Đã Dư',\r\n            });\r\n          } else if (change < 10000) {\r\n            setAlertContent({\r\n              type: 'warning',\r\n              message: 'Tiền Chuyển Khoản Phải Trên 10000',\r\n            });\r\n          } else {\r\n            console.log('Check listHD: ', listHD);\r\n            const paymentOn = await paymentOnline(changeAmount, listHD.idHd);\r\n            console.log('Check paymentOn: ', paymentOn);\r\n            // Mở tab mới với đường dẫn URL\r\n            window.location.href = paymentOn;\r\n          }\r\n        } else {\r\n          setChangeAmount(0);\r\n        }\r\n      } else {\r\n        const cashGivenValue = parseFloat(cashGiven);\r\n        const change = cashGivenValue - thanhTien;\r\n\r\n        if (change < 0) {\r\n          setAlertContent({\r\n            type: 'warning',\r\n            message: 'Tiền Khách Đưa Chưa Đủ',\r\n          });\r\n        } else {\r\n          await updatePayment(idHdParam, tenKhTT, sdtKHTT, formattedDate, thanhTien, cashGiven, change, 1, 9);\r\n          setAlertContent({\r\n            type: 'success',\r\n            message: 'Thanh Toán Tại Quầy Thành Công!!!',\r\n          });\r\n          navigate(`/order-management-timeline/${idHdParam}`);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error('Error updating', e);\r\n    }\r\n  };\r\n  //   Payment\r\n  const [cashGiven, setCashGiven] = useState('');\r\n  const [changeAmount, setChangeAmount] = useState(0);\r\n\r\n  const handleCalculateChange = () => {\r\n    const cashGivenValue = parseFloat(cashGiven);\r\n\r\n    let change = 0;\r\n\r\n    if (!Number.isNaN(cashGivenValue)) {\r\n      if (isDeliveryChecked === true) {\r\n        change = thanhTien - cashGivenValue;\r\n      } else {\r\n        change = cashGivenValue - thanhTien;\r\n      }\r\n    }\r\n\r\n    if (change < 0) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: isDeliveryChecked ? 'Tiền Mặt Khách Đưa Đã Dư' : 'Tiền Khách Đưa Chưa Đủ',\r\n      });\r\n      setChangeAmount(0);\r\n    } else {\r\n      setChangeAmount(change);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Dialog\r\n          open={show}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          maxWidth=\"xl\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle>{'THANH TOÁN HÓA ĐƠN'}</DialogTitle>\r\n          <DialogContent>\r\n            {/* <DialogContentText id=\"alert-dialog-slide-description\"> */}\r\n            <div>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Mã Hóa Đơn\"\r\n                multiline\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={listHD.maHd}\r\n                fullWidth\r\n                sx={{ marginTop: 2 }}\r\n              />\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Thành Tiền\"\r\n                multiline\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={thanhTien}\r\n                fullWidth\r\n                sx={{ marginTop: 2 }}\r\n              />\r\n              <TextField\r\n                onChange={(e) => setMoTa(e.target.value)}\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Mô Tả\"\r\n                sx={{ m: 1, marginTop: 2, marginLeft: 0 }}\r\n                fullWidth\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <FormControlLabel control={<Switch />} onChange={handleDeliveryChange} label=\"Thanh Toán Online\" />\r\n              {isDeliveryChecked ? (\r\n                <>\r\n                  <TextField\r\n                    id=\"standard-multiline-flexible\"\r\n                    label=\"Số Tiền Mặt Gửi\"\r\n                    type=\"number\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    defaultValue={0}\r\n                    sx={{ marginTop: 2, marginBottom: 2 }}\r\n                    onChange={(e) => setCashGiven(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    sx={{ marginBottom: 2 }}\r\n                    variant=\"contained\"\r\n                    endIcon={<SendIcon />}\r\n                    onClick={handleCalculateChange}\r\n                  >\r\n                    Tính Tiền\r\n                  </Button>\r\n                  <span>Số Tiền Chuyển Khoản: {changeAmount}</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <TextField\r\n                    id=\"standard-multiline-flexible\"\r\n                    label=\"Số Tiền Khách Gửi\"\r\n                    type=\"number\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2, marginBottom: 2 }}\r\n                    onChange={(e) => setCashGiven(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    sx={{ marginBottom: 2 }}\r\n                    variant=\"contained\"\r\n                    endIcon={<SendIcon />}\r\n                    onClick={handleCalculateChange}\r\n                  >\r\n                    Tính Tiền\r\n                  </Button>\r\n                  <span>Số Tiền Thừa Của Khách: {changeAmount}</span>\r\n                </>\r\n              )}\r\n            </div>\r\n            {/* </DialogContentText> */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Hủy</Button>\r\n            <Button onClick={handlePaymentOnCash}>Đồng Ý</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ModalPaymentComfirm;\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-Update-Product-Cart.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Update-Status.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\SanPhamService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-SelectHistoryBill.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\OderManagementSevice.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Delete-All-Product.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\MappingTimeLine\\TimelineEvent.jsx",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\giamGiaService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\MappingTimeLine\\Timeline.jsx",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\iconify\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\discounts\\Modal-Delete-Discount.js",["1020","1021","1022","1023","1024","1025","1026","1027","1028"],[],"import { Alert, Snackbar } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { remove } from '../../service/giamGiaService';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function ModalDeleteDiscount(props) {\r\n  const { open, handleClose, information } = props;\r\n  const [idGgct, setIdGgct] = useState('');\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (information != null) {\r\n      setIdGgct(information.idGgct);\r\n    } else {\r\n      setIdGgct('');\r\n    }\r\n  }, [information]);\r\n\r\n  const handleDelete = async () => {\r\n    if (information.trangThai === 0) {\r\n      console.log(information.idGgct);\r\n      await remove(information.idGgct);\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Xóa thành công!',\r\n      });\r\n    } else if (information.trangThai === 1) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Không thể xóa!!!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Lỗi của chúng tôi!',\r\n      });\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{'Xóa Giảm Giá'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">Xóa Giảm Giá Có Mã Là: {idGgct}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Hủy</Button>\r\n          <Button onClick={handleDelete}>Đồng Ý</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\scrollbar\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\Detail-Cart.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\Detail-Product.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\utils\\formatNumber.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\hooks\\useResponsive.js",[],["1029"],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\taiKhoanNhanVienService.js",["1030","1031","1032","1033","1034","1035","1036"],[],"import custom from './custom-axios';\r\n\r\nconst taiKhoan = (page) => {\r\n  return custom.get(`/tai-khoan/view-alls`); // Call API\r\n};\r\nconst taiKhoan2 = (page, trangThai) => {\r\n  return custom.get(`/tai-khoan/view-all?p=${page}&trangThai=${trangThai}`); // Call API\r\n};\r\nconst postAddTaiKhoan = (maTaiKhoan, idChucVu, ho, ten, sdt, email, soCanCuoc , matKhau, trangThai) => {\r\n  return custom.post('/tai-khoan/add', {\r\n    maTaiKhoan,\r\n    idChucVu,\r\n    ho,\r\n    ten,\r\n    sdt,\r\n    email,\r\n    soCanCuoc,\r\n    matKhau,\r\n    trangThai,\r\n  });\r\n};\r\nconst postUpdateTaiKhoan = (id, maTaiKhoan, idChucVu, ho, ten, sdt, email, matKhau, soCanCuoc, trangThai) => {\r\n  return custom.put(`/tai-khoan/update/${id}`, {\r\n    maTaiKhoan,\r\n    idChucVu,\r\n    ho,\r\n    ten,\r\n    sdt,\r\n    email,\r\n    matKhau,\r\n    soCanCuoc,\r\n    trangThai,\r\n  });\r\n};\r\nconst deleteTaiKhoan = (id) => {\r\n  return custom.patch(`/tai-khoan/delete/${id}`);\r\n};\r\nconst detailTaiKhoan = (id) => {\r\n  return custom.get(`/tai-khoan/detail/${id}`);\r\n};\r\nexport { taiKhoan, postAddTaiKhoan, deleteTaiKhoan, postUpdateTaiKhoan, detailTaiKhoan, taiKhoan2 };\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\chucVuService.js",["1037","1038","1039","1040","1041","1042","1043"],[],"import custom from \"./custom-axios\";\r\n\r\nconst chucVu = () => {\r\n  return custom.get(`/chuc-vu/view-all`); // Call API\r\n};\r\nconst chucVu3 = () => {\r\n  return custom.get(`/chuc-vu/list-chuc-vu`); // Call API\r\n};\r\nconst chucVu2 = ( trangThai) => {\r\n  return custom.get(`/tai-khoan/view-alls?trangThai=${trangThai}`); // Call API\r\n};\r\nconst postAddChucVu = (maCv, tenCv, ngayTao, trangThai) => {\r\n  return custom.post(\"/chuc-vu/add\", { maCv, tenCv, ngayTao ,trangThai});\r\n};\r\nconst deleteChucVu = (id) => {\r\n  return custom.delete(`/chuc-vu/delete/${id}`);\r\n};\r\nconst detail = (id) => {\r\n  return custom.get(`/chuc-vu/detail/${id}`);\r\n}\r\n\r\nconst detailTen = (params) => {\r\n  return custom.get(`/chuc-vu/detailTen`, { params });\r\n}\r\n\r\nexport {detail, chucVu, postAddChucVu, deleteChucVu, chucVu2, chucVu3 ,detailTen};\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Staff\\Modal-Delete-Staff.js",["1044","1045","1046","1047","1048","1049","1050","1051","1052","1053"],[],"import { Alert, Snackbar } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\nimport { deleteTaiKhoan } from '../../service/taiKhoanNhanVienService'\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function ModalDeleteDiscount(props) {\r\n  const { open, handleClose, information } = props;\r\n  const [idTaiKhoan, setidTaiKhoan] = useState('');\r\n  const [maTaiKhoan, setMaTaiKhoan] = useState('');\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (information != null) {\r\n      console.log(information);\r\n      setidTaiKhoan(information.idTaiKhoan);\r\n      setMaTaiKhoan(information.maTaiKhoan);\r\n    } else {\r\n      setidTaiKhoan('');\r\n    }\r\n  }, [information]);\r\n\r\n  const handleDelete = async () => {\r\n    // Kiểm tra trạng thái trước khi xóa\r\n    if (information.trangThai === 0) {\r\n      // Thay đổi trạng thái thành 10\r\n      information.trangThai = 10;\r\n\r\n      // Gửi yêu cầu xóa\r\n      await deleteTaiKhoan(information.idTaiKhoan);\r\n\r\n      // Cập nhật giao diện ngay lập tức\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Xóa thành công!',\r\n      });\r\n    } else if (information.trangThai === 10) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Không thể xóa!!!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Lỗi của chúng tôi!',\r\n      });\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{'Xóa Nhân Viên'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">Xóa Mã Nhân Viên: {maTaiKhoan}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Hủy</Button>\r\n          <Button onClick={handleDelete}>Đồng Ý</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\AlertContext.js",["1054","1055"],[],"// AlertContext.js\r\n\r\nimport { createContext, useContext, useState } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport const AlertProvider = ({ children }) => {\r\n    const [alertContent, setAlertContent] = useState(null);\r\n\r\n    const showAlert = (type, message) => {\r\n        setAlertContent({ type, message });\r\n    };\r\n\r\n    const clearAlert = () => {\r\n        setAlertContent(null);\r\n    };\r\n\r\n    return (\r\n        <AlertContext.Provider value={{ alertContent, showAlert, clearAlert }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAlert = () => {\r\n    return useContext(AlertContext);\r\n};\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\user\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\logo\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\XuatXuService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\ChatLieuService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\LoaiCoAoService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\LoaiSPService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\OngTayAoService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\label\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\ChiTietSPService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\color-utils\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\SizeService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\CloudinaryService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\AnhService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\apiDiaChi.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\diaChiSevice.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\MauSacService.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\utils\\cssStyles.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\simple\\SimpleLayout.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\AlertSnackbar.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\auth\\login\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\client\\Header.js",["1056"],[],"import Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState, Fragment } from 'react';\r\n\r\n// Icon styles\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\r\nimport Badge from '@mui/material/Badge';\r\nimport { styled } from '@mui/material/styles';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport { Avatar, Box, Chip, ListItemIcon, Menu, MenuItem, Tooltip } from '@mui/material';\r\nimport { Logout, PersonAdd, Settings } from '@mui/icons-material';\r\nimport logo5F from '../../assets/logo_5F.png';\r\n\r\n// mocks_\r\nimport account from '../../_mock/account';\r\nimport { listProductOnCart } from '../../service/client/Detail-Cart';\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  '& .MuiBadge-badge': {\r\n    // right: -3,\r\n    // top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    // padding: '0 4px',\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const [listData, setListData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const getLocalStore = localStorage.getItem('userFormToken');\r\n        const authorities = getLocalStore ? JSON.parse(getLocalStore).taiKhoan : '';\r\n        const getData = await listProductOnCart(authorities.idTaiKhoan);\r\n        setListData(getData || []);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setListData([]);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle select menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('userFormToken');\r\n    navigate('/');\r\n  };\r\n\r\n  // Select All Bill\r\n  const handleSelectAllBill = () => {\r\n    navigate(`/client/select-bill-client/${account.user.idTaiKhoan}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gray-background\">\r\n        <Container>\r\n          <Nav className=\"justify-content-end\" activeKey=\"/home\">\r\n            <Nav.Item>\r\n              <Nav.Link href=\"/home\" className=\"nav-links\">\r\n                Help\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <span className=\"nav-separator\">|</span>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-1\" className=\"nav-links\">\r\n                Join Us\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <span className=\"nav-separator\">|</span>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {localStorage.getItem('userFormToken') ? (\r\n                <>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\r\n                    <Tooltip title=\"Account settings\">\r\n                      <Chip\r\n                        avatar={<Avatar src=\"/static/images/avatar/1.jpg\" />}\r\n                        label={account.displayName}\r\n                        onClick={handleClick}\r\n                      />\r\n                    </Tooltip>\r\n                  </Box>\r\n                  <Menu\r\n                    anchorEl={anchorEl}\r\n                    id=\"account-menu\"\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onClick={handleClose}\r\n                    PaperProps={{\r\n                      elevation: 0,\r\n                      sx: {\r\n                        overflow: 'visible',\r\n                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                        mt: 1.5,\r\n                        '& .MuiAvatar-root': {\r\n                          width: 32,\r\n                          height: 32,\r\n                          ml: -0.5,\r\n                          mr: 1,\r\n                        },\r\n                        '&:before': {\r\n                          content: '\"\"',\r\n                          display: 'block',\r\n                          position: 'absolute',\r\n                          top: 0,\r\n                          right: 14,\r\n                          width: 10,\r\n                          height: 10,\r\n                          bgcolor: 'background.paper',\r\n                          transform: 'translateY(-50%) rotate(45deg)',\r\n                          zIndex: 0,\r\n                        },\r\n                      },\r\n                    }}\r\n                    transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                    anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                  >\r\n                    <MenuItem onClick={handleSelectAllBill}>\r\n                      <ListItemIcon>\r\n                        <PersonAdd fontSize=\"small\" />\r\n                      </ListItemIcon>\r\n                      Hóa Đơn Của Tôi\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleClose}>\r\n                      <ListItemIcon>\r\n                        <Settings fontSize=\"small\" />\r\n                      </ListItemIcon>\r\n                      Thông Tin\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleLogout}>\r\n                      <ListItemIcon>\r\n                        <Logout fontSize=\"small\" />\r\n                      </ListItemIcon>\r\n                      Đăng Xuất\r\n                    </MenuItem>\r\n                  </Menu>\r\n                  {/* <Chip\r\n                    avatar={<Avatar src=\"/static/images/avatar/1.jpg\" />}\r\n                    label={account.displayName}\r\n                    onClick={handleClick}\r\n                  />\r\n\r\n                  <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\r\n                    <MenuItem onClick={handleClose}>Hóa Đơn</MenuItem>\r\n                    <MenuItem onClick={handleClose}>Thông Tin</MenuItem>\r\n                    <MenuItem onClick={handleLogout}>Đăng Xuất</MenuItem>\r\n                  </Menu> */}\r\n                </>\r\n              ) : (\r\n                <Nav.Link href=\"/login\" eventKey=\"link-2\" className=\"nav-links\">\r\n                  Login\r\n                </Nav.Link>\r\n              )}\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Container>\r\n      </div>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"while\" variant=\"while\">\r\n        <Container>\r\n          <img src={logo5F} alt=\"logo_5F\" height={'50px'} />\r\n          <Navbar.Brand href=\"#home\">\r\n            <Link to=\"/client/home\" className={'nav-link'}>\r\n              Home\r\n            </Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Link to=\"/\" className={'nav-link'}>\r\n                Shope\r\n              </Link>\r\n              <NavLink to=\"/\" className={'nav-link'}>\r\n                Sale\r\n              </NavLink>\r\n              <NavLink to=\"/client/products\" className={'nav-link'}>\r\n                Sản phẩm\r\n              </NavLink>\r\n            </Nav>\r\n            <Nav>\r\n              <Form className=\"d-flex search-form\">\r\n                <Form.Control type=\"search\" placeholder=\"Search\" className=\"me-2 search-input\" aria-label=\"Search\" />\r\n                <Button variant=\"outline-success\" className=\"search-button\">\r\n                  <FontAwesomeIcon icon={faMagnifyingGlass} size=\"xs\" />\r\n                </Button>\r\n              </Form>\r\n              <IconButton aria-label=\"cart\">\r\n                <StyledBadge badgeContent={4} color=\"secondary\">\r\n                  <MailIcon />\r\n                </StyledBadge>\r\n              </IconButton>\r\n              <Link to=\"/client/cart\" className={'nav-link'}>\r\n                <StyledBadge badgeContent={listData && listData.length} color=\"secondary\">\r\n                  <ShoppingCartIcon />\r\n                </StyledBadge>\r\n              </Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\client\\Footer.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\custom-axios.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Button.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Card.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Table.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Paper.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Input.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\DirectSaleSevice.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Backdrop.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Typography.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Autocomplete.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\theme\\overrides\\Tooltip.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\iconify\\Iconify.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\MappingTimeLine\\Placeholder.jsx",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\scrollbar\\Scrollbar.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppNewsUpdate.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTasks.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTrafficBySite.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentVisits.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppOrderTimeline.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWidgetSummary.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppConversionRates.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWebsiteVisits.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentSubject.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead-NoCheckbox.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar-NoFilter.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostCard.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostsSearch.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostsSort.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\logo\\Logo.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\color-utils\\ColorPreview.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\label\\Label.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\color-utils\\ColorMultiPicker.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCard.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\color-utils\\ColorSinglePicker.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-ADM.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductSort.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-Client.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCartWidget.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCardAll.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSidebar.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductListAll.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSB.js",["1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073"],[],"import PropTypes from 'prop-types';\r\nimport { useEffect, useMemo, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Radio,\r\n  Stack,\r\n  Button,\r\n  Drawer,\r\n  Rating,\r\n  Divider,\r\n  Checkbox,\r\n  FormGroup,\r\n  IconButton,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n} from '@mui/material';\r\n// components\r\nimport Iconify from '../../../components/iconify';\r\nimport Scrollbar from '../../../components/scrollbar';\r\nimport { ColorMultiPicker } from '../../../components/color-utils';\r\n\r\nimport { fetchLSP } from '../../../service/LoaiSPService';\r\nimport { fetchCL } from '../../../service/ChatLieuService';\r\nimport { fetchXX } from '../../../service/XuatXuService';\r\nimport { fetchTayAo } from '../../../service/OngTayAoService';\r\nimport { fetchCoAo } from '../../../service/LoaiCoAoService';\r\nimport { fetchMS } from '../../../service/MauSacService';\r\nimport { fetchSize } from '../../../service/SizeService';\r\n// ----------------------------------------------------------------------\r\n\r\n// export const SORT_BY_OPTIONS = [\r\n//   { value: 'featured', label: 'Featured' },\r\n//   { value: 'newest', label: 'Newest' },\r\n//   { value: 'priceDesc', label: 'Price: High-Low' },\r\n//   { value: 'priceAsc', label: 'Price: Low-High' },\r\n// ];\r\n// export const FILTER_GENDER_OPTIONS = ['Men', 'Women', 'Kids'];\r\n// export const FILTER_CATEGORY_OPTIONS = ['All', 'Shose', 'Apparel', 'Accessories'];\r\n// export const FILTER_RATING_OPTIONS = ['up4Star', 'up3Star', 'up2Star', 'up1Star'];\r\n// export const FILTER_PRICE_OPTIONS = [\r\n//   { value: 'below', label: 'Below $25' },\r\n//   { value: 'between', label: 'Between $25 - $75' },\r\n//   { value: 'above', label: 'Above $75' },\r\n// ];\r\n// export const FILTER_COLOR_OPTIONS = [\r\n//   '#00AB55',\r\n//   '#000000',\r\n//   '#FFFFFF',\r\n//   '#FFC0CB',\r\n//   '#FF4842',\r\n//   '#1890FF',\r\n//   '#94D82D',\r\n//   '#FFC107',\r\n// ];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nShopFilterSidebar.propTypes = {\r\n  openFilter: PropTypes.bool,\r\n  onOpenFilter: PropTypes.func,\r\n  onCloseFilter: PropTypes.func,\r\n  listSP: PropTypes.array,\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\nexport default function ShopFilterSidebar({ openFilter, onOpenFilter, onCloseFilter, listSP, onFilter }) {\r\n  const [chatLieu, setChatLieu] = useState('');\r\n  const [loaiSP, setLoaiSP] = useState('');\r\n  const [xuatXu, setXuatXu] = useState('');\r\n  const [tayAo, setTayAo] = useState('');\r\n  const [coAo, setCoAo] = useState('');\r\n\r\n  const [mauSac, setMauSac] = useState('');\r\n  const [size, setSize] = useState('');\r\n\r\n  const [listCL, setListCL] = useState([]);\r\n  const [listLSP, setListLSP] = useState([]);\r\n  const [listXX, setListXX] = useState([]);\r\n  const [listTayAo, setListTayAo] = useState([]);\r\n  const [listCoAo, setListCoAo] = useState([]);\r\n  const [listMS, setListMS] = useState([]);\r\n  const [listSize, setListSize] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllList();\r\n  }, []);\r\n\r\n  const getAllList = async () => {\r\n    const resCL = await fetchCL();\r\n    setListCL(resCL);\r\n\r\n    const resLSP = await fetchLSP();\r\n    setListLSP(resLSP);\r\n\r\n    const resXX = await fetchXX();\r\n    setListXX(resXX);\r\n\r\n    const resTayAo = await fetchTayAo();\r\n    setListTayAo(resTayAo);\r\n\r\n    const resCoAo = await fetchCoAo();\r\n    setListCoAo(resCoAo);\r\n\r\n    const resMS = await fetchMS();\r\n    setListMS(resMS);\r\n\r\n    const resSize = await fetchSize();\r\n    setListSize(resSize);\r\n  };\r\n\r\n  // const filteredList = listSP.filter((sp) => sp.chatLieus.includes('12'));\r\n  // onFilter(filteredList);\r\n  return (\r\n    <>\r\n      <Button disableRipple color=\"inherit\" endIcon={<Iconify icon=\" ic:round-filter-list\" />} onClick={onOpenFilter}>\r\n        Filters&nbsp;\r\n      </Button>\r\n\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={openFilter}\r\n        onClose={onCloseFilter}\r\n        PaperProps={{\r\n          sx: { width: 280, border: 'none', overflow: 'hidden' },\r\n        }}\r\n      >\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ px: 1, py: 2 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ ml: 1 }}>\r\n            Lọc\r\n          </Typography>\r\n          <IconButton onClick={onCloseFilter}>\r\n            <Iconify icon=\"eva:close-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n\r\n        <Divider />\r\n\r\n        <Scrollbar>\r\n          <Stack spacing={3} sx={{ p: 3 }}>\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Loại sản phẩm\r\n              </Typography>\r\n              {listLSP.length > 0 && (\r\n                <FormControl>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    name=\"radio-buttons-group\"\r\n                    value={loaiSP}\r\n                    onChange={(event) => setLoaiSP(event.target.value)}\r\n                  >\r\n                    <FormControlLabel value={'all'} control={<Radio defaultChecked />} label=\"Tất cả\" />\r\n                    {listLSP.map((item, index) => (\r\n                      <FormControlLabel key={index} value={item.idLoaisp} control={<Radio />} label={item.tenLsp} />\r\n                    ))}\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Chất liệu\r\n              </Typography>\r\n\r\n              {listCL.length > 0 && (\r\n                <FormGroup>\r\n                  {listCL.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idCl} control={<Checkbox />} label={item.tenCl} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Xuất xứ\r\n              </Typography>\r\n\r\n              {listXX.length > 0 && (\r\n                <FormGroup>\r\n                  {listXX.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idXx} control={<Checkbox />} label={item.tenNuoc} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Tay áo\r\n              </Typography>\r\n\r\n              {listTayAo.length > 0 && (\r\n                <FormGroup>\r\n                  {listTayAo.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idTayAo} control={<Checkbox />} label={item.loaiTayAo} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Cổ áo\r\n              </Typography>\r\n\r\n              {listCoAo.length > 0 && (\r\n                <FormGroup>\r\n                  {listCoAo.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idCoAo} control={<Checkbox />} label={item.loaiCoAo} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Màu sắc\r\n              </Typography>\r\n\r\n              {listMS.length > 0 && (\r\n                <FormGroup>\r\n                  {listMS.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idMs} control={<Checkbox />} label={item.tenMs} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            {/* Mau sac real :v */}\r\n            {/* <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Colors\r\n              </Typography>\r\n              <ColorMultiPicker\r\n                name=\"colors\"\r\n                selected={[]}\r\n                colors={FILTER_COLOR_OPTIONS}\r\n                onChangeColor={(color) => [].includes(color)}\r\n                sx={{ maxWidth: 38 * 4 }}\r\n              />\r\n            </div> */}\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Size\r\n              </Typography>\r\n\r\n              {listSize.length > 0 && (\r\n                <FormGroup>\r\n                  {listSize.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idSize} control={<Checkbox />} label={item.tenSize} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Giá\r\n              </Typography>\r\n              <RadioGroup\r\n                aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                name=\"radio-buttons-group\"\r\n                defaultValue=\"all\"\r\n              >\r\n                <FormControlLabel value=\"all\" control={<Radio defaultChecked />} label=\"Tất cả\" />\r\n                <FormControlLabel value=\"below\" control={<Radio />} label=\"Dưới 250.000đ\" />\r\n                <FormControlLabel value=\"between\" control={<Radio />} label=\"Từ 250.000đ - 750.000đ\" />\r\n                <FormControlLabel value=\"above\" control={<Radio />} label=\"Trên 750.000đ\" />\r\n              </RadioGroup>\r\n            </div>\r\n\r\n            {/* Rating\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Rating\r\n              </Typography>\r\n              <RadioGroup>\r\n                {FILTER_RATING_OPTIONS.map((item, index) => (\r\n                  <FormControlLabel\r\n                    key={item}\r\n                    value={item}\r\n                    control={\r\n                      <Radio\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        icon={<Rating readOnly value={4 - index} />}\r\n                        checkedIcon={<Rating readOnly value={4 - index} />}\r\n                        sx={{\r\n                          '&:hover': { bgcolor: 'transparent' },\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"& Up\"\r\n                    sx={{\r\n                      my: 0.5,\r\n                      borderRadius: 1,\r\n                      '&:hover': { opacity: 0.48 },\r\n                    }}\r\n                  />\r\n                ))}\r\n              </RadioGroup>\r\n            </div> */}\r\n          </Stack>\r\n        </Scrollbar>\r\n\r\n        <Box sx={{ p: 3 }}>\r\n          <Button\r\n            fullWidth\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            startIcon={<Iconify icon=\"ic:round-clear-all\" />}\r\n          >\r\n            Clear All\r\n          </Button>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\sections\\auth\\login\\LoginForm.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\header\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\index.js",["1074"],["1075"],"import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n// @mui\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material';\r\n// mock\r\nimport account from '../../../_mock/account';\r\n// hooks\r\nimport useResponsive from '../../../hooks/useResponsive';\r\n// components\r\nimport Logo from '../../../components/logo';\r\nimport Scrollbar from '../../../components/scrollbar';\r\nimport NavSection from '../../../components/nav-section';\r\n//\r\nimport navConfig from './config';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst NAV_WIDTH = 280;\r\n\r\nconst StyledAccount = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 2.5),\r\n  borderRadius: Number(theme.shape.borderRadius) * 1.5,\r\n  backgroundColor: alpha(theme.palette.grey[500], 0.12),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nNav.propTypes = {\r\n  openNav: PropTypes.bool,\r\n  onCloseNav: PropTypes.func,\r\n};\r\n\r\nexport default function Nav({ openNav, onCloseNav }) {\r\n  const { pathname } = useLocation();\r\n\r\n  const isDesktop = useResponsive('up', 'lg');\r\n\r\n  useEffect(() => {\r\n    if (openNav) {\r\n      onCloseNav();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pathname]);\r\n\r\n  const renderContent = (\r\n    <Scrollbar\r\n      sx={{\r\n        height: 1,\r\n        '& .simplebar-content': { height: 1, display: 'flex', flexDirection: 'column' },\r\n      }}\r\n    >\r\n      <Box sx={{ px: 2.5, py: 3, display: 'inline-flex' }}>\r\n        <Logo />\r\n      </Box>\r\n\r\n      <Box sx={{ mb: 5, mx: 2.5 }}>\r\n        <Link underline=\"none\">\r\n          <StyledAccount>\r\n            <Avatar src={account.photoURL} alt=\"photoURL\" />\r\n\r\n            <Box sx={{ ml: 2 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ color: 'text.primary' }}>\r\n                {account.displayName}\r\n              </Typography>\r\n\r\n              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                {account.role}\r\n              </Typography>\r\n            </Box>\r\n          </StyledAccount>\r\n        </Link>\r\n      </Box>\r\n\r\n      <NavSection data={navConfig} />\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n\r\n      <Box sx={{ px: 2.5, pb: 3, mt: 10 }}>\r\n        <Stack alignItems=\"center\" spacing={3} sx={{ pt: 5, borderRadius: 2, position: 'relative' }}>\r\n          <Box\r\n            component=\"img\"\r\n            src=\"/assets/illustrations/illustration_avatar.png\"\r\n            sx={{ width: 100, position: 'absolute', top: -50 }}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    </Scrollbar>\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      component=\"nav\"\r\n      sx={{\r\n        flexShrink: { lg: 0 },\r\n        width: { lg: NAV_WIDTH },\r\n      }}\r\n    >\r\n      {isDesktop ? (\r\n        <Drawer\r\n          open\r\n          variant=\"permanent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: NAV_WIDTH,\r\n              bgcolor: 'background.default',\r\n              borderRightStyle: 'dashed',\r\n            },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      ) : (\r\n        <Drawer\r\n          open={openNav}\r\n          onClose={onCloseNav}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          PaperProps={{\r\n            sx: { width: NAV_WIDTH },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\_mock\\account.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\utils\\formatTime.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\scrollbar\\styles.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\svg-color\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Detail-SanPham.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\label\\styles.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\color-utils\\Icon.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\header\\LanguagePopover.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\header\\Searchbar.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\header\\NotificationsPopover.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\header\\AccountPopover.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\config.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\nav-section\\index.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\svg-color\\SvgColor.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\nav-section\\NavSection.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\components\\nav-section\\styles.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Payment-Page1.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\SelectAllBill.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\OrderClient-Timeline.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-Add-Address.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\Payment.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\SelectBill.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\client\\Modals-ReturnItem.js",["1076"],[],"import { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { Image } from 'react-bootstrap';\r\nimport KeyboardReturnIcon from '@mui/icons-material/KeyboardReturn';\r\nimport { pink } from '@mui/material/colors';\r\nimport Paper from '@mui/material/Paper';\r\nimport ModalDetailItemReturn from './Modals-DetailReturnItem';\r\n\r\n// @mui\r\n\r\nconst ModalItemReturn = (props) => {\r\n  // Sle\r\n  // Get Props\r\n  ModalItemReturn.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    selectDataCart: PropTypes.func.isRequired,\r\n    DataCart: PropTypes.array.isRequired,\r\n  };\r\n  const { show, handleClose, selectDataCart, DataCart } = props;\r\n\r\n  //   Select card product\r\n  // const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  // const handleOpenFilter = () => {\r\n  //   setOpenFilter(true);\r\n  // };\r\n\r\n  // const handleCloseFilter = () => {\r\n  //   setOpenFilter(false);\r\n  // };\r\n\r\n  // Return one product on cart\r\n  const [showModalsReturnOne, setShowModalReturnOne] = useState(false);\r\n  const [itemReturnOne, setIntemReturnOne] = useState();\r\n\r\n  const handleReturnOne = (item) => {\r\n    console.log('item return: ', item);\r\n    setShowModalReturnOne(true);\r\n    setIntemReturnOne(item);\r\n  };\r\n\r\n  const handleCloseModalReturnOne = () => {\r\n    setShowModalReturnOne(false);\r\n  };\r\n\r\n  const handleReturnAll = () => {\r\n    setShowModalReturnOne(false);\r\n  };\r\n  // Format thanhTien\r\n  const formatCurrency = (amount) => amount.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Dialog open={show} onClose={handleClose} maxWidth=\"xl\" fullWidth>\r\n          <DialogTitle>\r\n            <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n              Danh Sách Sản Phẩm\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TableContainer sx={{ marginTop: 2, marginBottom: 2 }} component={Paper}>\r\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Ảnh</TableCell>\r\n                    <TableCell>Mã Sản Phẩm</TableCell>\r\n                    <TableCell align=\"right\">Sản Phẩm</TableCell>\r\n                    <TableCell align=\"right\">Thuộc tính</TableCell>\r\n                    <TableCell align=\"right\">Giá</TableCell>\r\n                    <TableCell align=\"right\">Số Lượng</TableCell>\r\n                    <TableCell align=\"right\">Tổng</TableCell>\r\n                    <TableCell align=\"right\">Thao Tác</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {DataCart && DataCart.length > 0 ? (\r\n                    DataCart.map((item, index) => {\r\n                      const imagesArray = item[2].split(','); // Tách chuỗi thành mảng\r\n                      const firstImage = imagesArray[0];\r\n                      return (\r\n                        <TableRow\r\n                          key={index}\r\n                          sx={{\r\n                            '&:last-child td, &:last-child th': { border: 0 },\r\n                          }}\r\n                        >\r\n                          <TableCell>\r\n                            <Image rounded style={{ width: '150px', height: 'auto' }} src={firstImage} />\r\n                          </TableCell>\r\n                          <TableCell>{item[4]}</TableCell>\r\n                          <TableCell align=\"right\">{item[5]}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            Size: {item[6]}\r\n                            <br />\r\n                            Màu: {item[11]}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{formatCurrency(item[7])}</TableCell>\r\n                          <TableCell align=\"right\">{item[8]}</TableCell>\r\n                          <TableCell align=\"right\">{formatCurrency(item[9])}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <IconButton aria-label=\"delete\" size=\"large\" onClick={() => handleReturnOne(item)}>\r\n                              <KeyboardReturnIcon sx={{ color: pink[500] }} />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <TableRow>\r\n                      <TableCell align=\"right\" colSpan={8}>\r\n                        KHÔNG CÓ DỮ LIỆU\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                  <TableRow>\r\n                    <TableCell rowSpan={3} />\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>{' '}\r\n            </TableContainer>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Hủy</Button>\r\n            <Button onClick={handleReturnAll}>Hoàn Trả Tất Cả</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n      {itemReturnOne && (\r\n        <ModalDetailItemReturn\r\n          show={showModalsReturnOne}\r\n          handleClose={handleCloseModalReturnOne}\r\n          itemReturnOne={itemReturnOne}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalItemReturn;\r\n","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\client\\Modals-DetailReturnItem.js",[],[],{"ruleId":"1077","replacedBy":"1078"},{"ruleId":"1079","replacedBy":"1080"},{"ruleId":"1081","replacedBy":"1082"},{"ruleId":"1083","replacedBy":"1084"},{"ruleId":"1085","replacedBy":"1086"},{"ruleId":"1087","replacedBy":"1088"},{"ruleId":"1089","replacedBy":"1090"},{"ruleId":"1091","severity":1,"message":"1092","line":6,"column":8,"nodeType":"1093","messageId":"1094","endLine":6,"endColumn":16},{"ruleId":"1077","replacedBy":"1095"},{"ruleId":"1079","replacedBy":"1096"},{"ruleId":"1081","replacedBy":"1097"},{"ruleId":"1083","replacedBy":"1098"},{"ruleId":"1085","replacedBy":"1099"},{"ruleId":"1087","replacedBy":"1100"},{"ruleId":"1089","replacedBy":"1101"},{"ruleId":"1091","severity":1,"message":"1102","line":3,"column":10,"nodeType":"1093","messageId":"1094","endLine":3,"endColumn":22},{"ruleId":"1091","severity":1,"message":"1103","line":105,"column":9,"nodeType":"1093","messageId":"1094","endLine":105,"endColumn":23},{"ruleId":"1091","severity":1,"message":"1104","line":11,"column":10,"nodeType":"1093","messageId":"1094","endLine":11,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1105","line":11,"column":22,"nodeType":"1093","messageId":"1094","endLine":11,"endColumn":31},{"ruleId":"1091","severity":1,"message":"1106","line":11,"column":33,"nodeType":"1093","messageId":"1094","endLine":11,"endColumn":38},{"ruleId":"1091","severity":1,"message":"1107","line":11,"column":40,"nodeType":"1093","messageId":"1094","endLine":11,"endColumn":60},{"ruleId":"1091","severity":1,"message":"1108","line":11,"column":76,"nodeType":"1093","messageId":"1094","endLine":11,"endColumn":89},{"ruleId":"1091","severity":1,"message":"1109","line":12,"column":10,"nodeType":"1093","messageId":"1094","endLine":12,"endColumn":25},{"ruleId":"1110","severity":1,"message":"1111","line":70,"column":6,"nodeType":"1112","endLine":70,"endColumn":8,"suggestions":"1113"},{"ruleId":"1091","severity":1,"message":"1114","line":430,"column":19,"nodeType":"1093","messageId":"1094","endLine":430,"endColumn":29},{"ruleId":"1091","severity":1,"message":"1115","line":4,"column":48,"nodeType":"1093","messageId":"1094","endLine":4,"endColumn":53},{"ruleId":"1091","severity":1,"message":"1116","line":4,"column":55,"nodeType":"1093","messageId":"1094","endLine":4,"endColumn":61},{"ruleId":"1091","severity":1,"message":"1117","line":9,"column":8,"nodeType":"1093","messageId":"1094","endLine":9,"endColumn":15},{"ruleId":"1091","severity":1,"message":"1118","line":2,"column":31,"nodeType":"1093","messageId":"1094","endLine":2,"endColumn":38},{"ruleId":"1091","severity":1,"message":"1119","line":43,"column":10,"nodeType":"1093","messageId":"1094","endLine":43,"endColumn":22},{"ruleId":"1091","severity":1,"message":"1120","line":43,"column":24,"nodeType":"1093","messageId":"1094","endLine":43,"endColumn":39},{"ruleId":"1091","severity":1,"message":"1121","line":3,"column":3,"nodeType":"1093","messageId":"1094","endLine":3,"endColumn":14},{"ruleId":"1091","severity":1,"message":"1122","line":37,"column":8,"nodeType":"1093","messageId":"1094","endLine":37,"endColumn":26},{"ruleId":"1091","severity":1,"message":"1123","line":203,"column":9,"nodeType":"1093","messageId":"1094","endLine":203,"endColumn":24},{"ruleId":"1091","severity":1,"message":"1124","line":213,"column":7,"nodeType":"1093","messageId":"1094","endLine":213,"endColumn":16},{"ruleId":"1091","severity":1,"message":"1125","line":216,"column":9,"nodeType":"1093","messageId":"1094","endLine":216,"endColumn":22},{"ruleId":"1091","severity":1,"message":"1126","line":55,"column":17,"nodeType":"1093","messageId":"1094","endLine":55,"endColumn":25},{"ruleId":"1127","severity":1,"message":"1128","line":29,"column":31,"nodeType":"1093","messageId":"1129","endLine":29,"endColumn":35},{"ruleId":"1091","severity":1,"message":"1126","line":44,"column":17,"nodeType":"1093","messageId":"1094","endLine":44,"endColumn":25},{"ruleId":"1091","severity":1,"message":"1130","line":45,"column":10,"nodeType":"1093","messageId":"1094","endLine":45,"endColumn":16},{"ruleId":"1091","severity":1,"message":"1131","line":45,"column":18,"nodeType":"1093","messageId":"1094","endLine":45,"endColumn":27},{"ruleId":"1110","severity":1,"message":"1132","line":85,"column":6,"nodeType":"1112","endLine":85,"endColumn":8,"suggestions":"1133"},{"ruleId":"1091","severity":1,"message":"1134","line":360,"column":9,"nodeType":"1093","messageId":"1094","endLine":360,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1135","line":364,"column":9,"nodeType":"1093","messageId":"1094","endLine":364,"endColumn":24},{"ruleId":"1136","severity":1,"message":"1137","line":502,"column":17,"nodeType":"1138","messageId":"1139","endLine":502,"endColumn":130},{"ruleId":"1091","severity":1,"message":"1140","line":1,"column":16,"nodeType":"1093","messageId":"1094","endLine":1,"endColumn":24},{"ruleId":"1091","severity":1,"message":"1141","line":141,"column":10,"nodeType":"1093","messageId":"1094","endLine":141,"endColumn":29},{"ruleId":"1091","severity":1,"message":"1142","line":141,"column":31,"nodeType":"1093","messageId":"1094","endLine":141,"endColumn":53},{"ruleId":"1091","severity":1,"message":"1143","line":238,"column":9,"nodeType":"1093","messageId":"1094","endLine":238,"endColumn":18},{"ruleId":"1091","severity":1,"message":"1144","line":242,"column":9,"nodeType":"1093","messageId":"1094","endLine":242,"endColumn":19},{"ruleId":"1091","severity":1,"message":"1145","line":23,"column":21,"nodeType":"1093","messageId":"1094","endLine":23,"endColumn":26},{"ruleId":"1091","severity":1,"message":"1146","line":10,"column":22,"nodeType":"1093","messageId":"1094","endLine":10,"endColumn":35},{"ruleId":"1091","severity":1,"message":"1147","line":18,"column":21,"nodeType":"1093","messageId":"1094","endLine":18,"endColumn":33},{"ruleId":"1091","severity":1,"message":"1148","line":21,"column":10,"nodeType":"1093","messageId":"1094","endLine":21,"endColumn":16},{"ruleId":"1149","severity":1,"message":"1150","line":114,"column":21,"nodeType":"1138","messageId":"1151","endLine":118,"endColumn":23},{"ruleId":"1149","severity":1,"message":"1150","line":119,"column":21,"nodeType":"1138","messageId":"1151","endLine":123,"endColumn":23},{"ruleId":"1149","severity":1,"message":"1150","line":124,"column":21,"nodeType":"1138","messageId":"1151","endLine":128,"endColumn":23},{"ruleId":"1091","severity":1,"message":"1152","line":8,"column":8,"nodeType":"1093","messageId":"1094","endLine":8,"endColumn":20},{"ruleId":"1091","severity":1,"message":"1153","line":9,"column":8,"nodeType":"1093","messageId":"1094","endLine":9,"endColumn":25},{"ruleId":"1091","severity":1,"message":"1154","line":196,"column":9,"nodeType":"1093","messageId":"1094","endLine":196,"endColumn":24},{"ruleId":"1110","severity":1,"message":"1155","line":62,"column":6,"nodeType":"1112","endLine":62,"endColumn":16,"suggestions":"1156","suppressions":"1157"},{"ruleId":"1149","severity":1,"message":"1150","line":139,"column":21,"nodeType":"1138","messageId":"1151","endLine":143,"endColumn":23},{"ruleId":"1149","severity":1,"message":"1150","line":144,"column":21,"nodeType":"1138","messageId":"1151","endLine":148,"endColumn":23},{"ruleId":"1091","severity":1,"message":"1154","line":212,"column":11,"nodeType":"1093","messageId":"1094","endLine":212,"endColumn":26},{"ruleId":"1110","severity":1,"message":"1155","line":77,"column":8,"nodeType":"1112","endLine":77,"endColumn":18,"suggestions":"1158","suppressions":"1159"},{"ruleId":"1160","severity":1,"message":"1161","line":3,"column":30,"nodeType":"1162","messageId":"1163","endLine":5,"endColumn":2,"fix":"1164"},{"ruleId":"1160","severity":1,"message":"1161","line":7,"column":34,"nodeType":"1162","messageId":"1163","endLine":9,"endColumn":2,"fix":"1165"},{"ruleId":"1160","severity":1,"message":"1161","line":11,"column":23,"nodeType":"1162","messageId":"1163","endLine":13,"endColumn":2,"fix":"1166"},{"ruleId":"1160","severity":1,"message":"1161","line":15,"column":28,"nodeType":"1162","messageId":"1163","endLine":17,"endColumn":2,"fix":"1167"},{"ruleId":"1160","severity":1,"message":"1161","line":31,"column":6,"nodeType":"1162","messageId":"1163","endLine":45,"endColumn":2,"fix":"1168"},{"ruleId":"1160","severity":1,"message":"1161","line":46,"column":31,"nodeType":"1162","messageId":"1163","endLine":48,"endColumn":2,"fix":"1169"},{"ruleId":"1160","severity":1,"message":"1161","line":63,"column":6,"nodeType":"1162","messageId":"1163","endLine":78,"endColumn":2,"fix":"1170"},{"ruleId":"1160","severity":1,"message":"1161","line":80,"column":29,"nodeType":"1162","messageId":"1163","endLine":82,"endColumn":4,"fix":"1171"},{"ruleId":"1091","severity":1,"message":"1172","line":9,"column":8,"nodeType":"1093","messageId":"1094","endLine":9,"endColumn":25},{"ruleId":"1091","severity":1,"message":"1173","line":34,"column":10,"nodeType":"1093","messageId":"1094","endLine":34,"endColumn":14},{"ruleId":"1091","severity":1,"message":"1174","line":10,"column":10,"nodeType":"1093","messageId":"1094","endLine":10,"endColumn":21},{"ruleId":"1127","severity":1,"message":"1175","line":16,"column":11,"nodeType":"1176","messageId":"1129","endLine":16,"endColumn":15},{"ruleId":"1127","severity":1,"message":"1177","line":16,"column":17,"nodeType":"1176","messageId":"1129","endLine":16,"endColumn":28},{"ruleId":"1127","severity":1,"message":"1178","line":16,"column":30,"nodeType":"1176","messageId":"1129","endLine":16,"endColumn":41},{"ruleId":"1127","severity":1,"message":"1179","line":23,"column":29,"nodeType":"1093","messageId":"1129","endLine":23,"endColumn":35},{"ruleId":"1127","severity":1,"message":"1180","line":30,"column":21,"nodeType":"1093","messageId":"1129","endLine":30,"endColumn":30},{"ruleId":"1127","severity":1,"message":"1179","line":31,"column":31,"nodeType":"1093","messageId":"1129","endLine":31,"endColumn":37},{"ruleId":"1127","severity":1,"message":"1179","line":32,"column":32,"nodeType":"1093","messageId":"1129","endLine":32,"endColumn":38},{"ruleId":"1127","severity":1,"message":"1180","line":37,"column":28,"nodeType":"1093","messageId":"1129","endLine":37,"endColumn":37},{"ruleId":"1181","severity":2,"message":"1182","line":43,"column":23,"nodeType":"1093","endLine":43,"endColumn":36,"suppressions":"1183"},{"ruleId":"1091","severity":1,"message":"1184","line":3,"column":19,"nodeType":"1093","messageId":"1094","endLine":3,"endColumn":23},{"ruleId":"1160","severity":1,"message":"1161","line":3,"column":28,"nodeType":"1162","messageId":"1163","endLine":5,"endColumn":2,"fix":"1185"},{"ruleId":"1160","severity":1,"message":"1161","line":6,"column":40,"nodeType":"1162","messageId":"1163","endLine":8,"endColumn":2,"fix":"1186"},{"ruleId":"1160","severity":1,"message":"1161","line":9,"column":104,"nodeType":"1162","messageId":"1163","endLine":21,"endColumn":2,"fix":"1187"},{"ruleId":"1160","severity":1,"message":"1161","line":22,"column":110,"nodeType":"1162","messageId":"1163","endLine":34,"endColumn":2,"fix":"1188"},{"ruleId":"1160","severity":1,"message":"1161","line":35,"column":32,"nodeType":"1162","messageId":"1163","endLine":37,"endColumn":2,"fix":"1189"},{"ruleId":"1160","severity":1,"message":"1161","line":38,"column":32,"nodeType":"1162","messageId":"1163","endLine":40,"endColumn":2,"fix":"1190"},{"ruleId":"1160","severity":1,"message":"1161","line":3,"column":22,"nodeType":"1162","messageId":"1163","endLine":5,"endColumn":2,"fix":"1191"},{"ruleId":"1160","severity":1,"message":"1161","line":6,"column":23,"nodeType":"1162","messageId":"1163","endLine":8,"endColumn":2,"fix":"1192"},{"ruleId":"1160","severity":1,"message":"1161","line":9,"column":33,"nodeType":"1162","messageId":"1163","endLine":11,"endColumn":2,"fix":"1193"},{"ruleId":"1160","severity":1,"message":"1161","line":12,"column":60,"nodeType":"1162","messageId":"1163","endLine":14,"endColumn":2,"fix":"1194"},{"ruleId":"1160","severity":1,"message":"1161","line":15,"column":30,"nodeType":"1162","messageId":"1163","endLine":17,"endColumn":2,"fix":"1195"},{"ruleId":"1160","severity":1,"message":"1161","line":18,"column":24,"nodeType":"1162","messageId":"1163","endLine":20,"endColumn":2,"fix":"1196"},{"ruleId":"1160","severity":1,"message":"1161","line":22,"column":31,"nodeType":"1162","messageId":"1163","endLine":24,"endColumn":2,"fix":"1197"},{"ruleId":"1127","severity":1,"message":"1175","line":15,"column":11,"nodeType":"1176","messageId":"1129","endLine":15,"endColumn":15},{"ruleId":"1127","severity":1,"message":"1177","line":15,"column":17,"nodeType":"1176","messageId":"1129","endLine":15,"endColumn":28},{"ruleId":"1127","severity":1,"message":"1178","line":15,"column":30,"nodeType":"1176","messageId":"1129","endLine":15,"endColumn":41},{"ruleId":"1091","severity":1,"message":"1198","line":16,"column":10,"nodeType":"1093","messageId":"1094","endLine":16,"endColumn":20},{"ruleId":"1127","severity":1,"message":"1199","line":23,"column":33,"nodeType":"1093","messageId":"1129","endLine":23,"endColumn":43},{"ruleId":"1127","severity":1,"message":"1200","line":24,"column":33,"nodeType":"1093","messageId":"1129","endLine":24,"endColumn":43},{"ruleId":"1127","severity":1,"message":"1180","line":32,"column":21,"nodeType":"1093","messageId":"1129","endLine":32,"endColumn":30},{"ruleId":"1127","severity":1,"message":"1180","line":34,"column":19,"nodeType":"1093","messageId":"1129","endLine":34,"endColumn":28},{"ruleId":"1127","severity":1,"message":"1199","line":37,"column":40,"nodeType":"1093","messageId":"1129","endLine":37,"endColumn":50},{"ruleId":"1127","severity":1,"message":"1180","line":44,"column":28,"nodeType":"1093","messageId":"1129","endLine":44,"endColumn":37},{"ruleId":"1127","severity":1,"message":"1201","line":7,"column":33,"nodeType":"1176","messageId":"1129","endLine":7,"endColumn":41},{"ruleId":"1160","severity":1,"message":"1161","line":25,"column":31,"nodeType":"1162","messageId":"1163","endLine":27,"endColumn":2,"fix":"1202"},{"ruleId":"1203","severity":2,"message":"1204","line":7,"column":33,"nodeType":"1205","endLine":7,"endColumn":65},{"ruleId":"1091","severity":1,"message":"1118","line":2,"column":21,"nodeType":"1093","messageId":"1094","endLine":2,"endColumn":28},{"ruleId":"1091","severity":1,"message":"1206","line":10,"column":3,"nodeType":"1093","messageId":"1094","endLine":10,"endColumn":9},{"ruleId":"1091","severity":1,"message":"1207","line":23,"column":10,"nodeType":"1093","messageId":"1094","endLine":23,"endColumn":26},{"ruleId":"1091","severity":1,"message":"1208","line":69,"column":86,"nodeType":"1093","messageId":"1094","endLine":69,"endColumn":92},{"ruleId":"1091","severity":1,"message":"1209","line":69,"column":94,"nodeType":"1093","messageId":"1094","endLine":69,"endColumn":102},{"ruleId":"1091","severity":1,"message":"1210","line":70,"column":10,"nodeType":"1093","messageId":"1094","endLine":70,"endColumn":18},{"ruleId":"1091","severity":1,"message":"1211","line":70,"column":20,"nodeType":"1093","messageId":"1094","endLine":70,"endColumn":31},{"ruleId":"1091","severity":1,"message":"1212","line":72,"column":10,"nodeType":"1093","messageId":"1094","endLine":72,"endColumn":16},{"ruleId":"1091","severity":1,"message":"1213","line":72,"column":18,"nodeType":"1093","messageId":"1094","endLine":72,"endColumn":27},{"ruleId":"1091","severity":1,"message":"1214","line":73,"column":10,"nodeType":"1093","messageId":"1094","endLine":73,"endColumn":15},{"ruleId":"1091","severity":1,"message":"1215","line":73,"column":17,"nodeType":"1093","messageId":"1094","endLine":73,"endColumn":25},{"ruleId":"1091","severity":1,"message":"1216","line":74,"column":10,"nodeType":"1093","messageId":"1094","endLine":74,"endColumn":14},{"ruleId":"1091","severity":1,"message":"1217","line":74,"column":16,"nodeType":"1093","messageId":"1094","endLine":74,"endColumn":23},{"ruleId":"1091","severity":1,"message":"1218","line":76,"column":10,"nodeType":"1093","messageId":"1094","endLine":76,"endColumn":16},{"ruleId":"1091","severity":1,"message":"1219","line":76,"column":18,"nodeType":"1093","messageId":"1094","endLine":76,"endColumn":27},{"ruleId":"1091","severity":1,"message":"1220","line":77,"column":10,"nodeType":"1093","messageId":"1094","endLine":77,"endColumn":14},{"ruleId":"1091","severity":1,"message":"1221","line":77,"column":16,"nodeType":"1093","messageId":"1094","endLine":77,"endColumn":23},{"ruleId":"1091","severity":1,"message":"1116","line":6,"column":21,"nodeType":"1093","messageId":"1094","endLine":6,"endColumn":27},{"ruleId":"1110","severity":1,"message":"1222","line":47,"column":6,"nodeType":"1112","endLine":47,"endColumn":16,"suggestions":"1223","suppressions":"1224"},{"ruleId":"1091","severity":1,"message":"1225","line":36,"column":30,"nodeType":"1093","messageId":"1094","endLine":36,"endColumn":44},"lines-around-directive",["1226"],"no-new-object",["1227"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-return-await",[],"no-unused-vars","'BlogPage' is defined but never used.","Identifier","unusedVar",["1226"],["1227"],[],[],[],[],[],"'sentenceCase' is defined but never used.","'handleOpenMenu' is assigned a value but never used.","'faAppleAlt' is defined but never used.","'faBoxOpen' is defined but never used.","'faBug' is defined but never used.","'faCircleDollarToSlot' is defined but never used.","'faShoppingBag' is defined but never used.","'FontAwesomeIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'hdNgay'. Either include it or remove the dependency array.","ArrayExpression",["1228"],"'setLoading' is assigned a value but never used.","'Stack' is defined but never used.","'Button' is defined but never used.","'Iconify' is defined but never used.","'useMemo' is defined but never used.","'filteredList' is assigned a value but never used.","'setFilteredList' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'ModelUpdateGiamGia' is defined but never used.","'generateNewCode' is assigned a value but never used.","'getIdHttp' is defined but never used.","'formattedDate' is assigned a value but never used.","'setImage' is assigned a value but never used.","react/prop-types","'data' is missing in props validation","missingPropType","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getAllSp'. Either include it or remove the dependency array.",["1229"],"'todayAtNoon' is assigned a value but never used.","'parsedStartDate' is assigned a value but never used.","react/button-has-type","Missing an explicit type attribute for button","JSXElement","missingType","'Navigate' is defined but never used.","'lastGeneratedNumber' is assigned a value but never used.","'setLastGeneratedNumber' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","'isNotFound' is assigned a value but never used.","'props' is defined but never used.","'setMaTaiKhoan' is assigned a value but never used.","'setTrangThai' is assigned a value but never used.","'result' is assigned a value but never used.","react/jsx-key","Missing \"key\" prop for element in array","missingArrayKey","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'handlePageClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchQuanHuyenAndPhuongXa'. Either include it or remove the dependency array.",["1230"],["1231"],["1232"],["1233"],"arrow-body-style","Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","ArrowFunctionExpression","unexpectedSingleBlock",{"range":"1234","text":"1235"},{"range":"1236","text":"1237"},{"range":"1238","text":"1239"},{"range":"1240","text":"1241"},{"range":"1242","text":"1243"},{"range":"1244","text":"1245"},{"range":"1246","text":"1247"},{"range":"1248","text":"1249"},"'DialogContentText' is defined but never used.","'moTa' is assigned a value but never used.","'useNavigate' is defined but never used.","'open' is missing in props validation","Property","'handleClose' is missing in props validation","'information' is missing in props validation","'information.idGgct' is missing in props validation","'information.trangThai' is missing in props validation","react-hooks/rules-of-hooks","React Hook \"useMediaQuery\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.",["1250"],"'page' is defined but never used.",{"range":"1251","text":"1252"},{"range":"1253","text":"1254"},{"range":"1255","text":"1256"},{"range":"1257","text":"1258"},{"range":"1259","text":"1260"},{"range":"1261","text":"1262"},{"range":"1263","text":"1264"},{"range":"1265","text":"1266"},{"range":"1267","text":"1268"},{"range":"1269","text":"1270"},{"range":"1271","text":"1272"},{"range":"1273","text":"1274"},{"range":"1275","text":"1276"},"'idTaiKhoan' is assigned a value but never used.","'information.idTaiKhoan' is missing in props validation","'information.maTaiKhoan' is missing in props validation","'children' is missing in props validation",{"range":"1277","text":"1278"},"import/no-unresolved","Unable to resolve path to module '@fortawesome/react-fontawesome'.","Literal","'Rating' is defined but never used.","'ColorMultiPicker' is defined but never used.","'listSP' is defined but never used.","'onFilter' is defined but never used.","'chatLieu' is assigned a value but never used.","'setChatLieu' is assigned a value but never used.","'xuatXu' is assigned a value but never used.","'setXuatXu' is assigned a value but never used.","'tayAo' is assigned a value but never used.","'setTayAo' is assigned a value but never used.","'coAo' is assigned a value but never used.","'setCoAo' is assigned a value but never used.","'mauSac' is assigned a value but never used.","'setMauSac' is assigned a value but never used.","'size' is assigned a value but never used.","'setSize' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onCloseNav' and 'openNav'. Either include them or remove the dependency array. If 'onCloseNav' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1279"],["1280"],"'selectDataCart' is assigned a value but never used.","padding-line-between-statements","no-object-constructor",{"desc":"1281","fix":"1282"},{"desc":"1283","fix":"1284"},{"desc":"1285","fix":"1286"},{"kind":"1287","justification":"1288"},{"desc":"1285","fix":"1289"},{"kind":"1287","justification":"1288"},[69,139],"\r\n   custom.get(`/san-pham/view-all?p=${page}`) // Call API\r\n",[177,251],"\r\n   custom.get(`/san-pham/getSpWithImg?p=${page}`) // Call API\r\n",[278,336],"\r\n   custom.get(`/san-pham/listSP`) // Call API\r\n",[368,434],"\r\n   custom.get(`/san-pham/detail/${idSp}`) // Call API\r\n",[582,769],"custom.post(\"/san-pham/add\", {\r\n    maSp,\r\n    tenSp,\r\n    idCl,\r\n    idMs,\r\n    idLsp,\r\n    idXx,\r\n    idCoAo,\r\n    idTayAo,\r\n    moTa,\r\n    giaBan,\r\n    trangThai,\r\n  })",[802,857],"custom.delete(`/san-pham/delete/${id}`)",[1016,1216],"custom.put(`/san-pham/update`, {\r\n    idSp,\r\n    maSp,\r\n    tenSp,\r\n    idCl,\r\n    idMs,\r\n    idLsp,\r\n    idXx,\r\n    idCoAo,\r\n    idTayAo,\r\n    moTa,\r\n    giaBan,\r\n    trangThai,\r\n  })",[1249,1357],"\r\n     custom.get('/san-pham/top-sp-trend') // Thay đổi URL dựa trên định nghĩa URL API của bạn\r\n  ",{"kind":"1287","justification":"1288"},[67,129],"\r\n   custom.get(`/tai-khoan/view-alls`) // Call API\r\n",[171,265],"\r\n   custom.get(`/tai-khoan/view-all?p=${page}&trangThai=${trangThai}`) // Call API\r\n",[371,543],"custom.post('/tai-khoan/add', {\r\n    maTaiKhoan,\r\n    idChucVu,\r\n    ho,\r\n    ten,\r\n    sdt,\r\n    email,\r\n    soCanCuoc,\r\n    matKhau,\r\n    trangThai,\r\n  })",[655,835],"custom.put(`/tai-khoan/update/${id}`, {\r\n    maTaiKhoan,\r\n    idChucVu,\r\n    ho,\r\n    ten,\r\n    sdt,\r\n    email,\r\n    matKhau,\r\n    soCanCuoc,\r\n    trangThai,\r\n  })",[869,924],"custom.patch(`/tai-khoan/delete/${id}`)",[958,1011],"custom.get(`/tai-khoan/detail/${id}`)",[61,120],"\r\n   custom.get(`/chuc-vu/view-all`) // Call API\r\n",[145,208],"\r\n   custom.get(`/chuc-vu/list-chuc-vu`) // Call API\r\n",[243,328],"\r\n   custom.get(`/tai-khoan/view-alls?trangThai=${trangThai}`) // Call API\r\n",[390,469],"custom.post(\"/chuc-vu/add\", { maCv, tenCv, ngayTao ,trangThai})",[501,555],"custom.delete(`/chuc-vu/delete/${id}`)",[581,632],"custom.get(`/chuc-vu/detail/${id}`)",[666,726],"custom.get(`/chuc-vu/detailTen`, { params })",[610,652],"useContext(AlertContext)",{"desc":"1290","fix":"1291"},{"kind":"1287","justification":"1288"},"Update the dependencies array to be: [hdNgay]",{"range":"1292","text":"1293"},"Update the dependencies array to be: [getAllSp]",{"range":"1294","text":"1295"},"Update the dependencies array to be: [fetchQuanHuyenAndPhuongXa, listData]",{"range":"1296","text":"1297"},"directive","",{"range":"1298","text":"1297"},"Update the dependencies array to be: [onCloseNav, openNav, pathname]",{"range":"1299","text":"1300"},[2238,2240],"[hdNgay]",[2848,2850],"[getAllSp]",[2039,2049],"[fetchQuanHuyenAndPhuongXa, listData]",[2429,2439],[1419,1429],"[onCloseNav, openNav, pathname]"]