[{"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Detail-product.js":"1","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\taiKhoanKhachHangSevice.js":"2","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\Detail-Cart.js":"3","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\BillSevice.js":"4","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\OrderManagement-Timeline.js":"5","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Payment-Page.js":"6","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\DashboardAppPage.js":"7","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Cart-Bill-ADM.js":"8","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Cart.js":"9","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\OrderManagementTimeLine.js":"10","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\diaChi\\AllAddress.js":"11","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Payment-Confirm.js":"12","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-Add-Address.js":"13","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\Payment.js":"14","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\routes.js":"15","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Payment-Page1.js":"16","D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Update-Status.js":"17"},{"size":24668,"mtime":1700622453762,"results":"18","hashOfConfig":"19"},{"size":938,"mtime":1700622453765,"results":"20","hashOfConfig":"19"},{"size":970,"mtime":1700663249133,"results":"21","hashOfConfig":"19"},{"size":2108,"mtime":1700752553408,"results":"22","hashOfConfig":"19"},{"size":20816,"mtime":1700966079431,"results":"23","hashOfConfig":"19"},{"size":20089,"mtime":1700730916173,"results":"24","hashOfConfig":"19"},{"size":8632,"mtime":1700752419622,"results":"25","hashOfConfig":"19"},{"size":35413,"mtime":1700664398388,"results":"26","hashOfConfig":"19"},{"size":21459,"mtime":1700663337163,"results":"27","hashOfConfig":"19"},{"size":1640,"mtime":1700664386752,"results":"28","hashOfConfig":"19"},{"size":10354,"mtime":1700669041716,"results":"29","hashOfConfig":"19"},{"size":9009,"mtime":1700730322946,"results":"30","hashOfConfig":"19"},{"size":9164,"mtime":1700882627499,"results":"31","hashOfConfig":"19"},{"size":164,"mtime":1700730596066,"results":"32","hashOfConfig":"19"},{"size":5475,"mtime":1700793243125,"results":"33","hashOfConfig":"19"},{"size":14977,"mtime":1700987875809,"results":"34","hashOfConfig":"19"},{"size":3810,"mtime":1700966015266,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9sjma0",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Detail-product.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\taiKhoanKhachHangSevice.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\Detail-Cart.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\BillSevice.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\OrderManagement-Timeline.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Payment-Page.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\DashboardAppPage.js",["90"],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\Cart-Bill-ADM.js",["91","92"],[],"import '../scss/Car-Bill-ADM.scss';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  Button,\r\n  Chip,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Snackbar,\r\n  Stack,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport axios from 'axios';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport DeleteSweepOutlinedIcon from '@mui/icons-material/DeleteSweepOutlined';\r\nimport { pink } from '@mui/material/colors';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Alert, Image } from 'react-bootstrap';\r\nimport { styled } from '@mui/material/styles';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport ModalDeleteDirectSale from '../forms/Modal-Delete-DirectSale';\r\nimport ModalCreateBillOnline from '../forms/Modal-Create-Online';\r\nimport { updateTongTien } from '../service/OrderManagementTimeLine';\r\nimport ModalAddKhachHang from '../forms/Modals-AddKhachHang';\r\nimport { detailBill, finByProductOnCart, findById, postAddBill, selectAllInvoiceWaiting } from '../service/BillSevice';\r\nimport ModalAddProduct from '../forms/Modals-AddProduct';\r\nimport ModalUpdateProductOnCart from '../forms/Modals-Update-Product-Cart';\r\nimport ModalDeleteProductOnCart from '../forms/Modal-Delete-Product';\r\nimport ModalDeleteAllProductOnCart from '../forms/Modal-Delete-All-Product';\r\nimport ModalPaymentComfirm from '../forms/Modal-Payment-Confirm';\r\nimport Iconify from '../components/iconify';\r\n\r\n// Dislay invoice waiting\r\nconst AntTabs = styled(Tabs)({\r\n  borderBottom: '1px solid #e8e8e8',\r\n  '& .MuiTabs-indicator': {\r\n    backgroundColor: '#1890ff',\r\n  },\r\n});\r\n\r\nconst AntTab = styled((props) => <Tab disableRipple {...props} />)(({ theme }) => ({\r\n  textTransform: 'none',\r\n  minWidth: 0,\r\n  [theme.breakpoints.up('sm')]: {\r\n    minWidth: 0,\r\n  },\r\n  fontWeight: theme.typography.fontWeightRegular,\r\n  marginRight: theme.spacing(1),\r\n  color: 'rgba(0, 0, 0, 0.85)',\r\n  fontFamily: [\r\n    '-apple-system',\r\n    'BlinkMacSystemFont',\r\n    '\"Segoe UI\"',\r\n    'Roboto',\r\n    '\"Helvetica Neue\"',\r\n    'Arial',\r\n    'sans-serif',\r\n    '\"Apple Color Emoji\"',\r\n    '\"Segoe UI Emoji\"',\r\n    '\"Segoe UI Symbol\"',\r\n  ].join(','),\r\n  '&:hover': {\r\n    color: '#40a9ff',\r\n    opacity: 1,\r\n  },\r\n  '&.Mui-selected': {\r\n    color: '#1890ff',\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n  '&.Mui-focusVisible': {\r\n    backgroundColor: '#d1eaff',\r\n  },\r\n}));\r\n\r\nconst CartBillADM = () => {\r\n  // Get IdHd on http\r\n  const param = useParams();\r\n  const idHdParam = param.id;\r\n\r\n  // Detail Hd\r\n  const [listHD, setlistHD] = useState([]);\r\n\r\n  const getDetailHD = useCallback(async () => {\r\n    try {\r\n      const getData = await detailBill(idHdParam);\r\n      console.log('getData: ', getData);\r\n      setlistHD(getData);\r\n    } catch (error) {\r\n      console.error('Error: ', error);\r\n    }\r\n  }, [idHdParam]);\r\n  useEffect(() => {\r\n    getDetailHD();\r\n  }, [getDetailHD]);\r\n  // Select invoice waiting.\r\n  const [tabs, setTabs] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const getListData = useCallback(async () => {\r\n    try {\r\n      const res = await selectAllInvoiceWaiting();\r\n      setTabs(res);\r\n      const idHdParamNumber = parseInt(idHdParam, 10);\r\n      const checkIndexTab = res.findIndex((item) => item.idHd === idHdParamNumber);\r\n      console.log('checkIndexTab: ', checkIndexTab);\r\n\r\n      setValue(checkIndexTab);\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  }, [idHdParam]);\r\n\r\n  useEffect(() => {\r\n    getListData();\r\n  }, [getListData]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    console.log('newValue', newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChange1 = (tabLabel) => {\r\n    navigate(`/dashboard/sales/card-bill/${tabLabel.idHd}`);\r\n  };\r\n\r\n  // Create a new Detail Direct\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const handleAddTab = async () => {\r\n    if (tabs.length >= 5) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Đã Tồn Tại 5 Hóa Đơn Chờ. Vui Lòng Thanh Toán!!!',\r\n      });\r\n    } else {\r\n      const res = await postAddBill(1, 8);\r\n      getListData();\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Tạo thành công hóa đơn',\r\n      });\r\n\r\n      // Update the tabs state to include the new tab\r\n      const nextTabNumber = tabs.length + 1;\r\n      const newTab = { maHd: `Tab ${nextTabNumber}` };\r\n      console.log('Check newTab: ', newTab);\r\n      const newTabs = [...tabs, newTab];\r\n      console.log('Check newTabs: ', newTabs);\r\n      setTabs(newTabs);\r\n\r\n      // Set the value state to the index of the newly added tab\r\n      setValue(newTabs.length - 1);\r\n\r\n      const getIdHttp = res.idHd;\r\n      navigate(`/dashboard/sales/card-bill/${getIdHttp}`);\r\n    }\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [information, setInformation] = useState();\r\n  const handleCloseTab = (index) => {\r\n    setOpen(true);\r\n    setInformation(index);\r\n  };\r\n  const handleCloseDeleteInvoice = () => {\r\n    setOpen(false);\r\n    getListData();\r\n    setValue(0);\r\n    const newTab = { maHd: `Tab ${1}` };\r\n    const newTabs = [...tabs, newTab];\r\n    setTabs(newTabs);\r\n    navigate(`/dashboard/sales/card-bill/${newTabs[0].idHd}`);\r\n  };\r\n\r\n  // Select Product On Cart\r\n  const [DataCart, setDataCart] = useState([]);\r\n  // const [numberPages, setNumberPages] = useState(0);\r\n  // const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const selectDataCart = useCallback(async () => {\r\n    try {\r\n      const res = await finByProductOnCart(idHdParam);\r\n      if (res) {\r\n        setDataCart(res);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [idHdParam]);\r\n  useEffect(() => {\r\n    selectDataCart();\r\n  }, [selectDataCart]);\r\n\r\n  // const handlePageClick = (page) => {\r\n  //   selectDataCart(page);\r\n  //   setCurrentPage(page);\r\n  // };\r\n  // Add Product\r\n  const [showModalsAdd, setShowModalAdd] = useState(false);\r\n  const handleAddProduct = () => {\r\n    setShowModalAdd(true);\r\n  };\r\n  const handleClose = () => {\r\n    setShowModalAdd(false);\r\n  };\r\n\r\n  // Delete product on cart\r\n  const [showModalsDelete, setShowModalDelete] = useState(false);\r\n  const [itemDelete, setIntemDelete] = useState();\r\n  const handleDelete = (item) => {\r\n    console.log('Check item', item);\r\n    setShowModalDelete(true);\r\n    setIntemDelete(item);\r\n  };\r\n  const handleCloseModalDelelte = () => {\r\n    setShowModalDelete(false);\r\n  };\r\n  // Delete all products\r\n  const [showModalsDeleteAll, setShowModalDeleteAll] = useState(false);\r\n  const handDeleteAll = () => {\r\n    setShowModalDeleteAll(true);\r\n  };\r\n  const handCloseDeleteAll = () => {\r\n    setShowModalDeleteAll(false);\r\n  };\r\n  // Update classify on the cart\r\n  const [showModalsUpdate, setShowModalsUpdate] = useState(false);\r\n  const [itemUpdateClassify, setItemUpdateClassify] = useState({});\r\n  const [itemUpdate, setItemUpdate] = useState({});\r\n\r\n  const handleUpdateClassify = async (item) => {\r\n    setShowModalsUpdate(true);\r\n    try {\r\n      const getOneSP = await findById(item[3]);\r\n      setItemUpdateClassify(getOneSP);\r\n      setItemUpdate(item);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleCloseUpdateClassify = () => {\r\n    setShowModalsUpdate(false);\r\n  };\r\n  // Show  payment information\r\n  const [isDeliveryChecked, setIsDeliveryChecked] = useState(false);\r\n\r\n  const handleDeliveryChange = (event) => {\r\n    setIsDeliveryChecked(event.target.checked);\r\n  };\r\n\r\n  // Fetch list of provinces on component mount\r\n  const [diachiCuThe, setDiachiCuThe] = useState('');\r\n  useEffect(() => {\r\n    fetchProvinces();\r\n  }, []);\r\n\r\n  // Get API Provinces\r\n  // const host = 'https://online-gateway.ghn.vn/shiip/public-api/master-data/province';\r\n\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [selectedProvince, setSelectedProvince] = useState('');\r\n  const [districts, setDistricts] = useState([]);\r\n  const [selectedDistrict, setSelectedDistrict] = useState('');\r\n  const [wards, setWards] = useState([]);\r\n  const [selectedWard, setSelectedWard] = useState('');\r\n\r\n  const [result, setResult] = useState('');\r\n\r\n  const fetchProvinces = async () => {\r\n    try {\r\n      const response = await axios.get('https://online-gateway.ghn.vn/shiip/public-api/master-data/province', {\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      console.log('response: ', response.data.data);\r\n      setProvinces(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching provinces:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchProvinces();\r\n  }, []);\r\n\r\n  const callApiDistrict = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/master-data/district`, {\r\n        params: { province_id: selectedProvince },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      console.log('Quận/Huyện: ', response.data);\r\n      setDistricts(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching districts:', error);\r\n    }\r\n  }, [selectedProvince]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProvince) {\r\n      console.log('selectedProvince: ', selectedProvince);\r\n      callApiDistrict();\r\n    }\r\n  }, [selectedProvince, callApiDistrict]);\r\n\r\n  const callApiWard = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/master-data/ward`, {\r\n        params: { district_id: selectedDistrict },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      setWards(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching wards:', error);\r\n    }\r\n  }, [selectedDistrict]);\r\n\r\n  // API gets service pack information\r\n  const [tienShip, getTienShip] = useState(0);\r\n\r\n  const getSevice = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee`, {\r\n        params: {\r\n          service_type_id: 2,\r\n          insurance_value: 500000,\r\n          coupon: null,\r\n          from_district_id: 1542,\r\n          to_district_id: selectedDistrict,\r\n          height: 15,\r\n          length: 15,\r\n          weight: 1000,\r\n          width: 15,\r\n        },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n          shop_id: 4699724,\r\n        },\r\n      });\r\n      const totalShip = response.data?.data?.total || 0;\r\n      console.log('getSevice: ', response);\r\n      getTienShip(totalShip);\r\n    } catch (error) {\r\n      console.error('Error get service:', error);\r\n    }\r\n  }, [selectedDistrict]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDistrict) {\r\n      console.log('selectedProvince: ', selectedDistrict);\r\n      callApiWard();\r\n      getSevice();\r\n    }\r\n  }, [getSevice, selectedDistrict, callApiWard]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDistrict && selectedProvince && selectedWard) {\r\n      const selectedProvinceName =\r\n        provinces.find((province) => province.ProvinceID === selectedProvince)?.ProvinceName || '';\r\n\r\n      const selectedDistrictName =\r\n        districts.find((district) => district.DistrictID === selectedDistrict)?.DistrictName || '';\r\n\r\n      const selectedWardName = wards.find((ward) => ward.WardCode === selectedWard)?.WardName || '';\r\n\r\n      setResult(`${selectedProvinceName}, ${selectedDistrictName}, ${selectedWardName}, ${diachiCuThe}`);\r\n    }\r\n  }, [selectedDistrict, selectedProvince, selectedWard, districts, provinces, wards, diachiCuThe]);\r\n\r\n  // Show thanhTien\r\n  const [thanhTien, setThanhTien] = useState();\r\n  const [tongTien, setTongTien] = useState();\r\n\r\n  useEffect(() => {\r\n    const calculateTotalPrice = async () => {\r\n      // let total = 0;\r\n      const total = DataCart.reduce((accumulator, item) => accumulator + item[9], 0);\r\n      // Set Tong Tien\r\n      setTongTien(total);\r\n      // Set Tien Ship\r\n      console.log('getDataShip: ', listHD.tienShip);\r\n      const totalShip = tienShip === 0 && listHD && listHD.tienShip ? listHD.tienShip : tienShip;\r\n      // Set Thanh Tien\r\n      setThanhTien(total + totalShip);\r\n      await updateTongTien(idHdParam, total, totalShip, thanhTien);\r\n    };\r\n\r\n    calculateTotalPrice();\r\n  }, [DataCart, idHdParam, tienShip, listHD, thanhTien]);\r\n\r\n  // Modal add KH\r\n  const [showModalsKH, setShowModalKH] = useState(false);\r\n  const handleAddKH = () => {\r\n    setShowModalKH(true);\r\n  };\r\n  const handleCloseAddKH = () => {\r\n    setShowModalKH(false);\r\n  };\r\n\r\n  // Handle Save\r\n  const navigate = useNavigate();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [tenKhTT, getTenKHTT] = useState('');\r\n  const [sdtKHTT, getSdtKHTT] = useState('');\r\n  const [tenKhShip, getTenKHShip] = useState('');\r\n  const [sdtKHShip, getSdtKHShip] = useState('');\r\n\r\n  const [openPayment, setOpenPayment] = useState(false);\r\n  const [openCreateOnline, setCreateOnline] = useState(false);\r\n  // const [information, setInformation] = useState();\r\n  const handleClick = async () => {\r\n    console.log('handleClick');\r\n    // const currentDate = new Date();\r\n    // const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n    if (isDeliveryChecked === false) {\r\n      setOpenPayment(true);\r\n    } else if (!tenKhShip.trim() || !sdtKHShip.trim()) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Hãy Thông Tin Người Nhận Hàng!!!',\r\n      });\r\n    } else {\r\n      setCreateOnline(true);\r\n    }\r\n  };\r\n  const handlePaymentClose = () => {\r\n    setOpenPayment(false);\r\n  };\r\n  const handleCloseCreateOnline = () => {\r\n    setCreateOnline(false);\r\n  };\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Box sx={{ bgcolor: '#fff' }}>\r\n          <Box sx={{ p: 3 }}>\r\n            <Button variant=\"contained\" onClick={handleAddTab}>\r\n              Thêm Hóa Đơn Chờ\r\n            </Button>\r\n          </Box>\r\n          <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\r\n            {tabs.map((tabLabel, index) => (\r\n              <AntTab\r\n                key={index}\r\n                onClick={() => handleChange1(tabLabel)}\r\n                label={\r\n                  <span>\r\n                    {tabLabel.maHd}\r\n                    <CloseIcon\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleCloseTab(tabLabel);\r\n                      }}\r\n                    />\r\n                  </span>\r\n                }\r\n              />\r\n            ))}\r\n          </AntTabs>\r\n\r\n          <Box sx={{ p: 3 }}>\r\n            {/* <p>Content: {tabContent[value]}</p> */}\r\n            <div>\r\n              <p>Bill Code: {listHD.maHd}</p>\r\n              <div className=\"class-add-product\">\r\n                <Button onClick={() => handleAddProduct()} variant=\"outlined\">\r\n                  <FontAwesomeIcon icon={faCartPlus} size=\"lg\" />\r\n                  Thêm Sản Phẩm\r\n                </Button>{' '}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row cart-information\">\r\n              <div className=\"row\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Giỏ Hàng{' '}\r\n                  </Typography>\r\n                </Stack>\r\n              </div>\r\n              <TableContainer sx={{ marginTop: 2, marginBottom: 2 }} component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Ảnh</TableCell>\r\n                      <TableCell>Mã Sản Phẩm</TableCell>\r\n                      <TableCell align=\"right\">Sản Phẩm</TableCell>\r\n                      <TableCell align=\"right\">Thuộc tính</TableCell>\r\n                      <TableCell align=\"right\">Giá</TableCell>\r\n                      <TableCell align=\"right\">Số Lượng</TableCell>\r\n                      <TableCell align=\"right\">Tổng</TableCell>\r\n                      <TableCell align=\"right\">Thao Tác</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {DataCart && DataCart.length > 0 ? (\r\n                      DataCart.map((item, index) => {\r\n                        const imagesArray = item[2].split(','); // Tách chuỗi thành mảng\r\n                        const firstImage = imagesArray[0];\r\n                        return (\r\n                          <TableRow\r\n                            key={index}\r\n                            sx={{\r\n                              '&:last-child td, &:last-child th': { border: 0 },\r\n                            }}\r\n                          >\r\n                            <TableCell>\r\n                              <Image rounded style={{ width: '150px', height: 'auto' }} src={firstImage} />\r\n                            </TableCell>\r\n                            <TableCell>{item[4]}</TableCell>\r\n                            <TableCell align=\"right\">{item[5]}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <Button onClick={() => handleUpdateClassify(item)} size=\"small\" variant=\"outlined\">\r\n                                Size: {item[6]}\r\n                                <br />\r\n                                Màu: {item[11]}\r\n                              </Button>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{item[7]}</TableCell>\r\n                            <TableCell align=\"right\">{item[8]}</TableCell>\r\n                            <TableCell align=\"right\">{item[9]}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <IconButton aria-label=\"delete\" size=\"large\" onClick={() => handleDelete(item)}>\r\n                                <DeleteSweepOutlinedIcon sx={{ color: pink[500] }} />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow>\r\n                        <TableCell align=\"right\" colSpan={8}>\r\n                          KHÔNG CÓ DỮ LIỆU\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n\r\n              <div className=\"col-2\">\r\n                <Button sx={{ marginBottom: 3 }} onClick={handDeleteAll} variant=\"outlined\" startIcon={<DeleteIcon />}>\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                {/* <Stack direction=\"row\" spacing={2} justify=\"center\" alignItems=\"center\">\r\n                  <Pagination\r\n                    onChange={(event, page) => handlePageClick(page - 1)}\r\n                    count={numberPages}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Stack> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"row customer-information\">\r\n              <div className=\"row\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thông Tin Khách Hàng{' '}\r\n                  </Typography>\r\n                  <Button onClick={() => handleAddKH()} variant=\"outlined\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                    Khách Hàng{' '}\r\n                  </Button>\r\n                </Stack>\r\n              </div>\r\n\r\n              <div className=\"text-information\">\r\n                {listHD.idKH ? (\r\n                  <>\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Mã Tài Khoản \"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={listHD.idKH.maTaiKhoan}\r\n                      // value={listHD.idKH.maTaiKhoan}\r\n                      fullWidth\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Tên Khách Hàng\"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={`${listHD.idKH.ho} ${listHD.idKH.ten}`}\r\n                      // value={selectedCustomerName}\r\n                      fullWidth\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Số Điện Thoại\"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={listHD.idKH.sdt}\r\n                      fullWidth\r\n                      // value={selectedCustomerEmail}\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Chip label=\"Khách Lẻ\" color=\"primary\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row information-payment\">\r\n              <div className=\"row header-information\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thông Tin Thanh Toán{' '}\r\n                  </Typography>\r\n                  <Button onClick={() => handleAddKH()} variant=\"outlined\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                    Primary{' '}\r\n                  </Button>\r\n                </Stack>\r\n                {/* <div className=\"col-6\">\r\n\r\n                  <h6>Thông Tin Thanh Toán</h6>\r\n                </div>\r\n                <div className=\"col-6 button-list\">\r\n                  <Button size=\"small\" variant=\"outlined\">\r\n                    Primary\r\n                  </Button>\r\n                </div> */}\r\n              </div>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6} md={7}>\r\n                  {isDeliveryChecked ? (\r\n                    <div className=\"text-information\">\r\n                      <div>\r\n                        <h5>\r\n                          {' '}\r\n                          <AccountBoxIcon />\r\n                          Thông Tin Người Nhận\r\n                        </h5>\r\n                      </div>\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Tên Người Nhận\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        onChange={(e) => getTenKHShip(e.target.value)}\r\n                        sx={{ marginTop: 2 }}\r\n                      />\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Số Điện Thoại\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getSdtKHShip(e.target.value)}\r\n                      />\r\n                      <div className=\"address\">\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 165, marginRight: 3, marginTop: 2 }}>\r\n                          <InputLabel id=\"province-label\">Tỉnh/Thành Phố</InputLabel>\r\n                          <Select\r\n                            labelId=\"province-label\"\r\n                            id=\"province-select\"\r\n                            value={selectedProvince}\r\n                            onChange={(e) => setSelectedProvince(e.target.value)}\r\n                            label=\"Tỉnh/Thành Phố\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Tỉnh/Thành Phố</em>\r\n                            </MenuItem>\r\n                            {provinces.map((province) => (\r\n                              <MenuItem key={province.ProvinceID} value={province.ProvinceID}>\r\n                                {province.ProvinceName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 165, marginRight: 3, marginTop: 2 }}>\r\n                          <InputLabel id=\"district-label\">Quận/Huyện</InputLabel>\r\n                          <Select\r\n                            labelId=\"district-label\"\r\n                            id=\"district-select\"\r\n                            value={selectedDistrict}\r\n                            onChange={(e) => setSelectedDistrict(e.target.value)}\r\n                            label=\"Quận/Huyện\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Quận/Huyện</em>\r\n                            </MenuItem>\r\n                            {districts.map((district) => (\r\n                              <MenuItem key={district.DistrictID} value={district.DistrictID}>\r\n                                {district.DistrictName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 170, marginTop: 2 }}>\r\n                          <InputLabel id=\"ward-label\">Phường/Xã</InputLabel>\r\n                          <Select\r\n                            labelId=\"ward-label\"\r\n                            id=\"ward-select\"\r\n                            value={selectedWard}\r\n                            onChange={(e) => setSelectedWard(e.target.value)}\r\n                            label=\"Phường/Xã\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Phường/Xã</em>\r\n                            </MenuItem>\r\n                            {wards.map((ward) => (\r\n                              <MenuItem key={ward.WardCode} value={ward.WardCode}>\r\n                                {ward.WardName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <div id=\"result\">{result}</div>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <TextField\r\n                          id=\"standard-multiline-flexible\"\r\n                          label=\"Địa Chỉ Cụ Thể\"\r\n                          multiline\r\n                          maxRows={4}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          sx={{ marginTop: 2 }}\r\n                          value={diachiCuThe}\r\n                          onChange={(e) => setDiachiCuThe(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-information\">\r\n                      <div>\r\n                        <h5>\r\n                          <AccountBoxIcon />\r\n                          Thông Tin Khách Hàng\r\n                        </h5>\r\n                      </div>\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Người Thanh Toán\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getTenKHTT(e.target.value)}\r\n                      />\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Số Điện Thoại\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getSdtKHTT(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12} md={6} lg={4}>\r\n                  <h5>\r\n                    <AccountBalanceWalletIcon />\r\n                    THÔNG TIN THANH TOÁN\r\n                  </h5>\r\n                  <FormControlLabel control={<Switch />} onChange={handleDeliveryChange} label=\"Giao Hàng\" />\r\n                  <br />\r\n                  <div className=\"row\">\r\n                    <Stack\r\n                      sx={{ marginTop: 5 }}\r\n                      direction=\"row\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"space-between\"\r\n                      mb={3}\r\n                    >\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Tiền Hàng{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {tongTien}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Tiền Ship{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {tienShip === 0 ? listHD.tienShip : tienShip}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Thành Tiền{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {thanhTien}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div className=\"class-checkout\">\r\n              <LoadingButton\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n                onClick={handleClick}\r\n                loading={loading}\r\n                loadingPosition=\"start\"\r\n                startIcon={<SaveIcon />}\r\n                variant=\"contained\"\r\n              >\r\n                <span>Save</span>\r\n              </LoadingButton>\r\n            </div>\r\n\r\n            {/* Add Modals */}\r\n            <ModalAddProduct\r\n              show={showModalsAdd}\r\n              selectDataCart={selectDataCart}\r\n              handleClose={handleClose}\r\n              DataCart={DataCart}\r\n            />\r\n            {/* Modal Update Product */}\r\n            <ModalUpdateProductOnCart\r\n              show={showModalsUpdate}\r\n              handleClose={handleCloseUpdateClassify}\r\n              itemUpdateClassify={itemUpdateClassify}\r\n              selectDataCart={selectDataCart}\r\n              itemUpdate={itemUpdate}\r\n            />\r\n            {/* Modal Delete Product  */}\r\n            <ModalDeleteProductOnCart\r\n              open={showModalsDelete}\r\n              handleClose={handleCloseModalDelelte}\r\n              itemDelete={itemDelete}\r\n              selectDataCart={selectDataCart}\r\n            />\r\n            {/* Modal Delete Product  */}\r\n            <ModalDeleteAllProductOnCart\r\n              open={showModalsDeleteAll}\r\n              handleClose={handCloseDeleteAll}\r\n              selectDataCart={selectDataCart}\r\n              DataCart={DataCart}\r\n            />\r\n            {/* Modal Add Customer */}\r\n            <ModalAddKhachHang\r\n              open={showModalsKH}\r\n              handleClose={handleCloseAddKH}\r\n              // setSelectedCustomerName={setSelectedCustomerName}\r\n              // setSelectedMaTk={setSelectedMaTk}\r\n              // setSelectedCustomerEmail={setSelectedCustomerEmail}\r\n            />\r\n            {/* ModalDeleteDirectSale */}\r\n            <ModalDeleteDirectSale open={open} handleClose={handleCloseDeleteInvoice} information={information} />\r\n            {DataCart.length > 0 && (\r\n              <>\r\n                <ModalPaymentComfirm\r\n                  show={openPayment}\r\n                  handleClose={handlePaymentClose}\r\n                  thanhTien={thanhTien}\r\n                  listHD={listHD}\r\n                  tenKhTT={tenKhTT}\r\n                  sdtKHTT={sdtKHTT}\r\n                />\r\n\r\n                <ModalCreateBillOnline\r\n                  open={openCreateOnline}\r\n                  handleClose={handleCloseCreateOnline}\r\n                  thanhTien={thanhTien}\r\n                  listHD={listHD}\r\n                  tenKhShip={tenKhShip}\r\n                  sdtKHShip={sdtKHShip}\r\n                  result={result}\r\n                />\r\n              </>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CartBillADM;\r\n",["93","94","95","96","97","98","99"],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Cart.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\OrderManagementTimeLine.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\diaChi\\AllAddress.js",["100"],["101"],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Payment-Confirm.js",["102"],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modals-Add-Address.js",[],[],["103","104","105","106","107","108","109"],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\service\\client\\Payment.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\routes.js",["110"],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\pages\\client\\Payment-Page1.js",[],[],"D:\\StudyInFPT\\5F_DuAnTotNghiep\\fullstack-fontend\\src\\forms\\Modal-Update-Status.js",[],[],{"ruleId":"111","severity":1,"message":"112","line":62,"column":6,"nodeType":"113","endLine":62,"endColumn":8,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":416,"column":6,"nodeType":"113","endLine":416,"endColumn":45,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":430,"column":19,"nodeType":"119","messageId":"120","endLine":430,"endColumn":29},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"117","severity":1,"message":"135","line":196,"column":9,"nodeType":"119","messageId":"120","endLine":196,"endColumn":24},{"ruleId":"111","severity":1,"message":"136","line":62,"column":6,"nodeType":"113","endLine":62,"endColumn":16,"suggestions":"137","suppressions":"138"},{"ruleId":"117","severity":1,"message":"139","line":33,"column":10,"nodeType":"119","messageId":"120","endLine":33,"endColumn":14},{"ruleId":"121","replacedBy":"140"},{"ruleId":"123","replacedBy":"141"},{"ruleId":"125","replacedBy":"142"},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},{"ruleId":"131","replacedBy":"145"},{"ruleId":"133","replacedBy":"146"},{"ruleId":"117","severity":1,"message":"147","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'hdNgay'. Either include it or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has a missing dependency: 'thanhTien'. Either include it or remove the dependency array.",["149"],"no-unused-vars","'setLoading' is assigned a value but never used.","Identifier","unusedVar","lines-around-directive",["150"],"no-new-object",["151"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-return-await",[],"'handlePageClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchQuanHuyenAndPhuongXa'. Either include it or remove the dependency array.",["152"],["153"],"'moTa' is assigned a value but never used.",["150"],["151"],[],[],[],[],[],"'BlogPage' is defined but never used.",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"padding-line-between-statements","no-object-constructor",{"desc":"158","fix":"159"},{"kind":"160","justification":"161"},"Update the dependencies array to be: [hdNgay]",{"range":"162","text":"163"},"Update the dependencies array to be: [DataCart, idHdParam, tienShip, listHD, thanhTien]",{"range":"164","text":"165"},"Update the dependencies array to be: [fetchQuanHuyenAndPhuongXa, listData]",{"range":"166","text":"167"},"directive","",[2090,2092],"[hdNgay]",[13106,13145],"[DataCart, idHdParam, tienShip, listHD, thanhTien]",[2039,2049],"[fetchQuanHuyenAndPhuongXa, listData]"]