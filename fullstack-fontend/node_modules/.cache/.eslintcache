<<<<<<< HEAD
[{"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\index.js":"1","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\reportWebVitals.js":"2","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\App.js":"3","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\serviceWorker.js":"4","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\routes.js":"5","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\index.js":"6","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\chart\\index.js":"7","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\scroll-to-top\\index.js":"8","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\LoginPage.js":"9","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\UserPage.js":"10","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Page404.js":"11","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\OrderManagement.js":"12","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\DashboardAppPage.js":"13","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\OrderManagement-Timeline.js":"14","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Cart-Bill-ADM.js":"15","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\DirectSale-ADM.js":"16","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Home.js":"17","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\ProductsPage.js":"18","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Detail-product.js":"19","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Contact.js":"20","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\SelectAllBill.js":"21","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Payment-Page1.js":"22","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\OrderClient-Timeline.js":"23","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Cart.js":"24","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\SanPham\\ModelAdd.js":"25","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\discounts\\ModalsAddNewGiamGia.js":"26","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\discounts\\DiscountPage.js":"27","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\SanPham\\SanPhamMain.js":"28","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\SanPham\\ModelUpdate.js":"29","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\discounts\\ModalsUpdateGiamGia.js":"30","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\AddClients.js":"31","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\UpdateClients.js":"32","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Staff\\Modal-Update-Staff.js":"33","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\ClientsPage.js":"34","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Staff\\Modal-Add-Staff.js":"35","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Staff\\Modal-User-Staff.js":"36","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\diaChi\\AllAddress.js":"37","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\diaChi\\AddressByClient.js":"38","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\diaChi\\AddAddress.js":"39","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\diaChi\\UpdateAddress.js":"40","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\coupons\\AddCoupons.js":"41","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\coupons\\CouponsPage.js":"42","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\coupons\\UpdateCoupons.js":"43","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout-Client.js":"44","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\index.js":"45","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\shadows.js":"46","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\globalStyles.js":"47","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\typography.js":"48","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\customShadows.js":"49","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\palette.js":"50","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\simple\\index.js":"51","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\chart\\styles.js":"52","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\chart\\useChart.js":"53","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\scroll-to-top\\ScrollToTop.js":"54","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\_mock\\user.js":"55","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\index.js":"56","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\OderManagementSevice.js":"57","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\bill-service.js":"58","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\taiKhoanKhachHangSevice.js":"59","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\hooks\\useResponsive.js":"60","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\BillSevice.js":"61","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\OrderManagementTimeLine.js":"62","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\san-pham-service.js":"63","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modals-AddProduct.js":"64","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Delete-DirectSale.js":"65","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modals-Update-Product-Cart.js":"66","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Payment-Confirm.js":"67","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Update-Status.js":"68","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Delete-All-Product.js":"69","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modals-SelectHistoryBill.js":"70","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modals-AddKhachHang.js":"71","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Delete-Product.js":"72","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Create-Online.js":"73","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\MappingTimeLine\\TimelineEvent.jsx":"74","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\MappingTimeLine\\Timeline.jsx":"75","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\SanPhamService.js":"76","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\CouponsService.js":"77","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modals-Add-Address.js":"78","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\utils\\formatNumber.js":"79","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\scrollbar\\index.js":"80","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\logo\\index.js":"81","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\iconify\\index.js":"82","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\client\\SelectBill.js":"83","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\client\\Detail-Product.js":"84","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\client\\Detail-Cart.js":"85","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\client\\Payment.js":"86","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\auth\\login\\index.js":"87","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\OngTayAoService.js":"88","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\XuatXuService.js":"89","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\LoaiCoAoService.js":"90","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\LoaiSPService.js":"91","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\ChatLieuService.js":"92","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\giamGiaService.js":"93","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\AnhService.js":"94","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\CloudinaryService.js":"95","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\ChiTietSPService.js":"96","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\MauSacService.js":"97","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\SizeService.js":"98","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\user\\index.js":"99","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\index.js":"100","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\discounts\\Modal-Delete-Discount.js":"101","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\color-utils\\index.js":"102","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\label\\index.js":"103","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\taiKhoanNhanVienService.js":"104","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\AlertContext.js":"105","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\chucVuService.js":"106","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\apiDiaChi.js":"107","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\diaChiSevice.js":"108","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\index.js":"109","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\utils\\cssStyles.js":"110","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\AlertSnackbar.js":"111","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Staff\\Modal-Delete-Staff.js":"112","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\coupons\\Modal-Delete-Coupon.js":"113","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\simple\\SimpleLayout.js":"114","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\coupons\\Modal-Reset-Coupon.js":"115","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout.js":"116","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\client\\Footer.js":"117","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\client\\Header.js":"118","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\custom-axios.js":"119","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Backdrop.js":"120","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Paper.js":"121","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Table.js":"122","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Autocomplete.js":"123","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Tooltip.js":"124","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Button.js":"125","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Card.js":"126","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Input.js":"127","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\DirectSaleSevice.js":"128","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Typography.js":"129","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\MappingTimeLine\\Placeholder.jsx":"130","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\iconify\\Iconify.js":"131","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\scrollbar\\Scrollbar.js":"132","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\logo\\Logo.js":"133","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\auth\\login\\LoginForm.js":"134","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar.js":"135","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead.js":"136","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead-NoCheckbox.js":"137","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar-NoFilter.js":"138","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppNewsUpdate.js":"139","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTasks.js":"140","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTrafficBySite.js":"141","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppOrderTimeline.js":"142","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentSubject.js":"143","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWebsiteVisits.js":"144","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentVisits.js":"145","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWidgetSummary.js":"146","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\color-utils\\ColorSinglePicker.js":"147","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppConversionRates.js":"148","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\label\\Label.js":"149","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\color-utils\\ColorMultiPicker.js":"150","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\color-utils\\ColorPreview.js":"151","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-ADM.js":"152","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-Client.js":"153","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCard.js":"154","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList.js":"155","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductSort.js":"156","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCardAll.js":"157","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCartWidget.js":"158","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductListAll.js":"159","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSidebar.js":"160","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSB.js":"161","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\_mock\\account.js":"162","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\header\\index.js":"163","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\index.js":"164","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\scrollbar\\styles.js":"165","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\utils\\formatTime.js":"166","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Detail-SanPham.js":"167","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\label\\styles.js":"168","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\color-utils\\Icon.js":"169","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\header\\LanguagePopover.js":"170","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\header\\AccountPopover.js":"171","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\header\\NotificationsPopover.js":"172","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\header\\Searchbar.js":"173","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\nav-section\\index.js":"174","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\config.js":"175","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\nav-section\\NavSection.js":"176","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\svg-color\\index.js":"177","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\nav-section\\styles.js":"178","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\svg-color\\SvgColor.js":"179","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\client\\Modals-ReturnItem.js":"180","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\client\\Modals-DetailReturnItem.js":"181","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Moda-Payment-Page1.js":"182","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\SanPham\\ModalQuickAtt.js":"183","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\client\\ReturnItem.js":"184","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Payment-Confirm-TimeLine.js":"185","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\client\\Modals-Update-Product-Cart-Client.js":"186","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\SignUpPage.js":"187","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\ForgetPasswordPage.js":"188","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\auth\\forgetPassword\\ForgetPasswordForm.js":"189","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\auth\\signUp\\index.js":"190","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\auth\\signUp\\SignUpForm.js":"191","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Cart-NoAccount.js":"192","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\SaleProductsPage.js":"193"},{"size":714,"mtime":1700409796974,"results":"194","hashOfConfig":"195"},{"size":377,"mtime":1700409797005,"results":"196","hashOfConfig":"195"},{"size":972,"mtime":1701918754412,"results":"197","hashOfConfig":"195"},{"size":5175,"mtime":1700409797053,"results":"198","hashOfConfig":"195"},{"size":8376,"mtime":1702111745149,"results":"199","hashOfConfig":"195"},{"size":1214,"mtime":1700409797055,"results":"200","hashOfConfig":"195"},{"size":248,"mtime":1700409796945,"results":"201","hashOfConfig":"195"},{"size":42,"mtime":1700409796958,"results":"202","hashOfConfig":"195"},{"size":2795,"mtime":1702100247552,"results":"203","hashOfConfig":"195"},{"size":8747,"mtime":1700409796996,"results":"204","hashOfConfig":"195"},{"size":1591,"mtime":1700409796991,"results":"205","hashOfConfig":"195"},{"size":15113,"mtime":1702101658667,"results":"206","hashOfConfig":"195"},{"size":8632,"mtime":1701684559869,"results":"207","hashOfConfig":"195"},{"size":21916,"mtime":1702101658664,"results":"208","hashOfConfig":"195"},{"size":36194,"mtime":1701944706148,"results":"209","hashOfConfig":"195"},{"size":13186,"mtime":1701944706150,"results":"210","hashOfConfig":"195"},{"size":9583,"mtime":1702099996642,"results":"211","hashOfConfig":"195"},{"size":2678,"mtime":1702098109323,"results":"212","hashOfConfig":"195"},{"size":17601,"mtime":1702110800040,"results":"213","hashOfConfig":"195"},{"size":1710,"mtime":1700473103270,"results":"214","hashOfConfig":"195"},{"size":14056,"mtime":1701944706158,"results":"215","hashOfConfig":"195"},{"size":17164,"mtime":1702005533374,"results":"216","hashOfConfig":"195"},{"size":21885,"mtime":1702101658675,"results":"217","hashOfConfig":"195"},{"size":23075,"mtime":1702115002465,"results":"218","hashOfConfig":"195"},{"size":15097,"mtime":1701943540073,"results":"219","hashOfConfig":"195"},{"size":23972,"mtime":1702048879864,"results":"220","hashOfConfig":"195"},{"size":14803,"mtime":1702046860313,"results":"221","hashOfConfig":"195"},{"size":13743,"mtime":1702098109321,"results":"222","hashOfConfig":"195"},{"size":38425,"mtime":1702098109319,"results":"223","hashOfConfig":"195"},{"size":25141,"mtime":1700667872975,"results":"224","hashOfConfig":"195"},{"size":4913,"mtime":1700536251039,"results":"225","hashOfConfig":"195"},{"size":8737,"mtime":1700536251041,"results":"226","hashOfConfig":"195"},{"size":7164,"mtime":1700473103269,"results":"227","hashOfConfig":"195"},{"size":10633,"mtime":1700536251040,"results":"228","hashOfConfig":"195"},{"size":6277,"mtime":1700473103266,"results":"229","hashOfConfig":"195"},{"size":12776,"mtime":1700473103270,"results":"230","hashOfConfig":"195"},{"size":10354,"mtime":1702100786550,"results":"231","hashOfConfig":"195"},{"size":12397,"mtime":1702100247558,"results":"232","hashOfConfig":"195"},{"size":16203,"mtime":1702100247555,"results":"233","hashOfConfig":"195"},{"size":13746,"mtime":1700536251033,"results":"234","hashOfConfig":"195"},{"size":12303,"mtime":1701340092998,"results":"235","hashOfConfig":"195"},{"size":18014,"mtime":1702046823782,"results":"236","hashOfConfig":"195"},{"size":12910,"mtime":1701678941327,"results":"237","hashOfConfig":"195"},{"size":682,"mtime":1702100247548,"results":"238","hashOfConfig":"195"},{"size":46,"mtime":1700409796982,"results":"239","hashOfConfig":"195"},{"size":3000,"mtime":1700409797067,"results":"240","hashOfConfig":"195"},{"size":1306,"mtime":1700409797054,"results":"241","hashOfConfig":"195"},{"size":2435,"mtime":1700409797067,"results":"242","hashOfConfig":"195"},{"size":1261,"mtime":1700409797054,"results":"243","hashOfConfig":"195"},{"size":2040,"mtime":1700409797066,"results":"244","hashOfConfig":"195"},{"size":43,"mtime":1700409796985,"results":"245","hashOfConfig":"195"},{"size":2070,"mtime":1700409796946,"results":"246","hashOfConfig":"195"},{"size":4415,"mtime":1700409796946,"results":"247","hashOfConfig":"195"},{"size":335,"mtime":1700409796958,"results":"248","hashOfConfig":"195"},{"size":736,"mtime":1700409796924,"results":"249","hashOfConfig":"195"},{"size":662,"mtime":1700409797065,"results":"250","hashOfConfig":"195"},{"size":263,"mtime":1700409797045,"results":"251","hashOfConfig":"195"},{"size":2191,"mtime":1700409797047,"results":"252","hashOfConfig":"195"},{"size":1220,"mtime":1702100865935,"results":"253","hashOfConfig":"195"},{"size":1221,"mtime":1700409796973,"results":"254","hashOfConfig":"195"},{"size":2108,"mtime":1701684559887,"results":"255","hashOfConfig":"195"},{"size":1778,"mtime":1701939885428,"results":"256","hashOfConfig":"195"},{"size":1446,"mtime":1701943540084,"results":"257","hashOfConfig":"195"},{"size":3837,"mtime":1701944706142,"results":"258","hashOfConfig":"195"},{"size":3069,"mtime":1700409796964,"results":"259","hashOfConfig":"195"},{"size":12949,"mtime":1702005533360,"results":"260","hashOfConfig":"195"},{"size":9009,"mtime":1701684559859,"results":"261","hashOfConfig":"195"},{"size":3783,"mtime":1701684725354,"results":"262","hashOfConfig":"195"},{"size":3098,"mtime":1700409796963,"results":"263","hashOfConfig":"195"},{"size":10390,"mtime":1701684725356,"results":"264","hashOfConfig":"195"},{"size":11045,"mtime":1700409796969,"results":"265","hashOfConfig":"195"},{"size":3293,"mtime":1701944706141,"results":"266","hashOfConfig":"195"},{"size":4254,"mtime":1700409796962,"results":"267","hashOfConfig":"195"},{"size":6647,"mtime":1700409796921,"results":"268","hashOfConfig":"195"},{"size":4266,"mtime":1700409796920,"results":"269","hashOfConfig":"195"},{"size":1524,"mtime":1702110537487,"results":"270","hashOfConfig":"195"},{"size":561,"mtime":1701927297631,"results":"271","hashOfConfig":"195"},{"size":9242,"mtime":1702005533358,"results":"272","hashOfConfig":"195"},{"size":912,"mtime":1700409797070,"results":"273","hashOfConfig":"195"},{"size":40,"mtime":1700409796959,"results":"274","hashOfConfig":"195"},{"size":35,"mtime":1700409796955,"results":"275","hashOfConfig":"195"},{"size":38,"mtime":1700409796951,"results":"276","hashOfConfig":"195"},{"size":178,"mtime":1701765927921,"results":"277","hashOfConfig":"195"},{"size":126,"mtime":1700409797050,"results":"278","hashOfConfig":"195"},{"size":1163,"mtime":1702005533377,"results":"279","hashOfConfig":"195"},{"size":348,"mtime":1701684559891,"results":"280","hashOfConfig":"195"},{"size":53,"mtime":1700409797042,"results":"281","hashOfConfig":"195"},{"size":794,"mtime":1700473103285,"results":"282","hashOfConfig":"195"},{"size":684,"mtime":1700473103287,"results":"283","hashOfConfig":"195"},{"size":775,"mtime":1700473103283,"results":"284","hashOfConfig":"195"},{"size":701,"mtime":1700473103283,"results":"285","hashOfConfig":"195"},{"size":700,"mtime":1700473103281,"results":"286","hashOfConfig":"195"},{"size":2176,"mtime":1700664932619,"results":"287","hashOfConfig":"195"},{"size":327,"mtime":1700473103281,"results":"288","hashOfConfig":"195"},{"size":257,"mtime":1700473103282,"results":"289","hashOfConfig":"195"},{"size":1364,"mtime":1700473103282,"results":"290","hashOfConfig":"195"},{"size":676,"mtime":1700473103284,"results":"291","hashOfConfig":"195"},{"size":684,"mtime":1700473103286,"results":"292","hashOfConfig":"195"},{"size":286,"mtime":1700409797039,"results":"293","hashOfConfig":"195"},{"size":587,"mtime":1700409797026,"results":"294","hashOfConfig":"195"},{"size":2829,"mtime":1700409797003,"results":"295","hashOfConfig":"195"},{"size":195,"mtime":1700409796949,"results":"296","hashOfConfig":"195"},{"size":36,"mtime":1700409796953,"results":"297","hashOfConfig":"195"},{"size":1116,"mtime":1700473103291,"results":"298","hashOfConfig":"195"},{"size":637,"mtime":1702100247546,"results":"299","hashOfConfig":"195"},{"size":814,"mtime":1700473103288,"results":"300","hashOfConfig":"195"},{"size":422,"mtime":1700473103287,"results":"301","hashOfConfig":"195"},{"size":1155,"mtime":1702100247576,"results":"302","hashOfConfig":"195"},{"size":670,"mtime":1700473103280,"results":"303","hashOfConfig":"195"},{"size":2593,"mtime":1700409797069,"results":"304","hashOfConfig":"195"},{"size":691,"mtime":1700473103262,"results":"305","hashOfConfig":"195"},{"size":3137,"mtime":1700473103267,"results":"306","hashOfConfig":"195"},{"size":2776,"mtime":1701676709333,"results":"307","hashOfConfig":"195"},{"size":742,"mtime":1700409796984,"results":"308","hashOfConfig":"195"},{"size":2778,"mtime":1701676916754,"results":"309","hashOfConfig":"195"},{"size":1402,"mtime":1700473103263,"results":"310","hashOfConfig":"195"},{"size":3265,"mtime":1701963648766,"results":"311","hashOfConfig":"195"},{"size":9608,"mtime":1702115207493,"results":"312","hashOfConfig":"195"},{"size":447,"mtime":1700409797050,"results":"313","hashOfConfig":"195"},{"size":419,"mtime":1700409797059,"results":"314","hashOfConfig":"195"},{"size":314,"mtime":1700409797062,"results":"315","hashOfConfig":"195"},{"size":341,"mtime":1700409797063,"results":"316","hashOfConfig":"195"},{"size":289,"mtime":1700409797058,"results":"317","hashOfConfig":"195"},{"size":360,"mtime":1700409797064,"results":"318","hashOfConfig":"195"},{"size":1156,"mtime":1700409797059,"results":"319","hashOfConfig":"195"},{"size":852,"mtime":1700409797060,"results":"320","hashOfConfig":"195"},{"size":1776,"mtime":1700409797062,"results":"321","hashOfConfig":"195"},{"size":741,"mtime":1700409797045,"results":"322","hashOfConfig":"195"},{"size":365,"mtime":1700409797065,"results":"323","hashOfConfig":"195"},{"size":3060,"mtime":1700409796920,"results":"324","hashOfConfig":"195"},{"size":647,"mtime":1700409796950,"results":"325","hashOfConfig":"195"},{"size":966,"mtime":1700409796959,"results":"326","hashOfConfig":"195"},{"size":3523,"mtime":1702101658653,"results":"327","hashOfConfig":"195"},{"size":5587,"mtime":1702100247569,"results":"328","hashOfConfig":"195"},{"size":2404,"mtime":1700409797038,"results":"329","hashOfConfig":"195"},{"size":2087,"mtime":1700409797036,"results":"330","hashOfConfig":"195"},{"size":1658,"mtime":1700409797036,"results":"331","hashOfConfig":"195"},{"size":2407,"mtime":1700409797037,"results":"332","hashOfConfig":"195"},{"size":2210,"mtime":1700409797021,"results":"333","hashOfConfig":"195"},{"size":4207,"mtime":1700409797023,"results":"334","hashOfConfig":"195"},{"size":1278,"mtime":1700409797023,"results":"335","hashOfConfig":"195"},{"size":2128,"mtime":1700409797022,"results":"336","hashOfConfig":"195"},{"size":1981,"mtime":1700409797019,"results":"337","hashOfConfig":"195"},{"size":1335,"mtime":1700409797024,"results":"338","hashOfConfig":"195"},{"size":2366,"mtime":1700409797020,"results":"339","hashOfConfig":"195"},{"size":1884,"mtime":1700409797025,"results":"340","hashOfConfig":"195"},{"size":1002,"mtime":1700409796949,"results":"341","hashOfConfig":"195"},{"size":1377,"mtime":1700409797019,"results":"342","hashOfConfig":"195"},{"size":1395,"mtime":1700409796952,"results":"343","hashOfConfig":"195"},{"size":1211,"mtime":1700409796947,"results":"344","hashOfConfig":"195"},{"size":1214,"mtime":1700409796948,"results":"345","hashOfConfig":"195"},{"size":1562,"mtime":1702005533375,"results":"346","hashOfConfig":"195"},{"size":1715,"mtime":1700473103278,"results":"347","hashOfConfig":"195"},{"size":2214,"mtime":1700409797029,"results":"348","hashOfConfig":"195"},{"size":599,"mtime":1700409797033,"results":"349","hashOfConfig":"195"},{"size":1697,"mtime":1700409797034,"results":"350","hashOfConfig":"195"},{"size":2999,"mtime":1702098109333,"results":"351","hashOfConfig":"195"},{"size":1251,"mtime":1700409797030,"results":"352","hashOfConfig":"195"},{"size":604,"mtime":1700473103279,"results":"353","hashOfConfig":"195"},{"size":5531,"mtime":1700409797031,"results":"354","hashOfConfig":"195"},{"size":15570,"mtime":1701943540082,"results":"355","hashOfConfig":"195"},{"size":479,"mtime":1702100247544,"results":"356","hashOfConfig":"195"},{"size":1982,"mtime":1700409796981,"results":"357","hashOfConfig":"195"},{"size":3556,"mtime":1700409796984,"results":"358","hashOfConfig":"195"},{"size":811,"mtime":1700409796960,"results":"359","hashOfConfig":"195"},{"size":663,"mtime":1700409797072,"results":"360","hashOfConfig":"195"},{"size":13326,"mtime":1702005533355,"results":"361","hashOfConfig":"195"},{"size":2269,"mtime":1700409796954,"results":"362","hashOfConfig":"195"},{"size":1781,"mtime":1700409796949,"results":"363","hashOfConfig":"195"},{"size":2214,"mtime":1700409796979,"results":"364","hashOfConfig":"195"},{"size":2989,"mtime":1700409796978,"results":"365","hashOfConfig":"195"},{"size":8808,"mtime":1702005533366,"results":"366","hashOfConfig":"195"},{"size":2187,"mtime":1700409796981,"results":"367","hashOfConfig":"195"},{"size":41,"mtime":1700409796956,"results":"368","hashOfConfig":"195"},{"size":1306,"mtime":1700817923316,"results":"369","hashOfConfig":"195"},{"size":1284,"mtime":1700409796956,"results":"370","hashOfConfig":"195"},{"size":39,"mtime":1700409796961,"results":"371","hashOfConfig":"195"},{"size":690,"mtime":1700409796957,"results":"372","hashOfConfig":"195"},{"size":721,"mtime":1700409796961,"results":"373","hashOfConfig":"195"},{"size":5805,"mtime":1701944706146,"results":"374","hashOfConfig":"195"},{"size":6404,"mtime":1701944706144,"results":"375","hashOfConfig":"195"},{"size":5361,"mtime":1702047273078,"results":"376","hashOfConfig":"195"},{"size":10957,"mtime":1702098109317,"results":"377","hashOfConfig":"195"},{"size":150,"mtime":1701944706161,"results":"378","hashOfConfig":"195"},{"size":9050,"mtime":1702005533356,"results":"379","hashOfConfig":"195"},{"size":12767,"mtime":1702112192773,"results":"380","hashOfConfig":"195"},{"size":2339,"mtime":1702100247553,"results":"381","hashOfConfig":"195"},{"size":2257,"mtime":1702100247550,"results":"382","hashOfConfig":"195"},{"size":3812,"mtime":1702100247566,"results":"383","hashOfConfig":"195"},{"size":55,"mtime":1702100247573,"results":"384","hashOfConfig":"195"},{"size":6239,"mtime":1702100247572,"results":"385","hashOfConfig":"195"},{"size":22792,"mtime":1702101658669,"results":"386","hashOfConfig":"195"},{"size":2701,"mtime":1702111890596,"results":"387","hashOfConfig":"195"},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},"y7xo4v",{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"391"},{"filePath":"420","messages":"421","suppressedMessages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"423","messages":"424","suppressedMessages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"426","messages":"427","suppressedMessages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"391"},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"433","messages":"434","suppressedMessages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"391"},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"391"},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"391"},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"469","messages":"470","suppressedMessages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"391"},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"391"},{"filePath":"477","messages":"478","suppressedMessages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"480","messages":"481","suppressedMessages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"391"},{"filePath":"487","messages":"488","suppressedMessages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"490","messages":"491","suppressedMessages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"391"},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"500","usedDeprecatedRules":"391"},{"filePath":"501","messages":"502","suppressedMessages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"391"},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"391"},{"filePath":"509","messages":"510","suppressedMessages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","suppressedMessages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"521","messages":"522","suppressedMessages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"391"},{"filePath":"525","messages":"526","suppressedMessages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"528","messages":"529","suppressedMessages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"531","usedDeprecatedRules":"391"},{"filePath":"532","messages":"533","suppressedMessages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"538","messages":"539","suppressedMessages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"541","messages":"542","suppressedMessages":"543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"544","messages":"545","suppressedMessages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"547","messages":"548","suppressedMessages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"550","messages":"551","suppressedMessages":"552","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"553","messages":"554","suppressedMessages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"556","messages":"557","suppressedMessages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"559","messages":"560","suppressedMessages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"562","messages":"563","suppressedMessages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"565","messages":"566","suppressedMessages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"568","messages":"569","suppressedMessages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"571","messages":"572","suppressedMessages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"574","messages":"575","suppressedMessages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"577","messages":"578","suppressedMessages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","suppressedMessages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"583","messages":"584","suppressedMessages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"586","messages":"587","suppressedMessages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"589","messages":"590","suppressedMessages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":8,"source":"592","usedDeprecatedRules":"391"},{"filePath":"593","messages":"594","suppressedMessages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"602","messages":"603","suppressedMessages":"604","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"605","usedDeprecatedRules":"391"},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"627","messages":"628","suppressedMessages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"630","messages":"631","suppressedMessages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","suppressedMessages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"639","messages":"640","suppressedMessages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"642","messages":"643","suppressedMessages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"645","messages":"646","suppressedMessages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"648","messages":"649","suppressedMessages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"651","messages":"652","suppressedMessages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"654","messages":"655","suppressedMessages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"657","messages":"658","suppressedMessages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"660","messages":"661","suppressedMessages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"663","messages":"664","suppressedMessages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"666","messages":"667","suppressedMessages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"669","messages":"670","suppressedMessages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"672","messages":"673","suppressedMessages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"675","messages":"676","suppressedMessages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"678","messages":"679","suppressedMessages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"681","messages":"682","suppressedMessages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"684","messages":"685","suppressedMessages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"687","messages":"688","suppressedMessages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"690","messages":"691","suppressedMessages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"693","messages":"694","suppressedMessages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"696","messages":"697","suppressedMessages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"699","messages":"700","suppressedMessages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"702","messages":"703","suppressedMessages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"705","messages":"706","suppressedMessages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708","usedDeprecatedRules":"391"},{"filePath":"709","messages":"710","suppressedMessages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"712","messages":"713","suppressedMessages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"715","messages":"716","suppressedMessages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":6,"source":"718","usedDeprecatedRules":"391"},{"filePath":"719","messages":"720","suppressedMessages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"722","messages":"723","suppressedMessages":"724","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":"725","usedDeprecatedRules":"391"},{"filePath":"726","messages":"727","suppressedMessages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"729","messages":"730","suppressedMessages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","suppressedMessages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"735","messages":"736","suppressedMessages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"738","messages":"739","suppressedMessages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"741","messages":"742","suppressedMessages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"391"},{"filePath":"745","messages":"746","suppressedMessages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"391"},{"filePath":"749","messages":"750","suppressedMessages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"752","messages":"753","suppressedMessages":"754","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"755","usedDeprecatedRules":"391"},{"filePath":"756","messages":"757","suppressedMessages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"759","messages":"760","suppressedMessages":"761","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"762","messages":"763","suppressedMessages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","suppressedMessages":"767","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"768","messages":"769","suppressedMessages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"771","messages":"772","suppressedMessages":"773","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"774","messages":"775","suppressedMessages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"777","messages":"778","suppressedMessages":"779","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"780","messages":"781","suppressedMessages":"782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"783","messages":"784","suppressedMessages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"786","messages":"787","suppressedMessages":"788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"789","messages":"790","suppressedMessages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"792","messages":"793","suppressedMessages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"795","messages":"796","suppressedMessages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"798","messages":"799","suppressedMessages":"800","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"801","messages":"802","suppressedMessages":"803","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"804","messages":"805","suppressedMessages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"807","messages":"808","suppressedMessages":"809","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"810","messages":"811","suppressedMessages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"813","messages":"814","suppressedMessages":"815","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"816","messages":"817","suppressedMessages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"819","messages":"820","suppressedMessages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"822","messages":"823","suppressedMessages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"825","messages":"826","suppressedMessages":"827","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"828","messages":"829","suppressedMessages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"831","messages":"832","suppressedMessages":"833","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"834","messages":"835","suppressedMessages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"837","messages":"838","suppressedMessages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"840","messages":"841","suppressedMessages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"843","messages":"844","suppressedMessages":"845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"846","messages":"847","suppressedMessages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"849","messages":"850","suppressedMessages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"852","messages":"853","suppressedMessages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"855","messages":"856","suppressedMessages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"858","messages":"859","suppressedMessages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"861","messages":"862","suppressedMessages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"864","messages":"865","suppressedMessages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"867","messages":"868","suppressedMessages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"870","messages":"871","suppressedMessages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"873","messages":"874","suppressedMessages":"875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"876","messages":"877","suppressedMessages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"879","messages":"880","suppressedMessages":"881","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"882","messages":"883","suppressedMessages":"884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"885","messages":"886","suppressedMessages":"887","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"888","messages":"889","suppressedMessages":"890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"891","messages":"892","suppressedMessages":"893","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"894","messages":"895","suppressedMessages":"896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"897","messages":"898","suppressedMessages":"899","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"900","messages":"901","suppressedMessages":"902","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903","usedDeprecatedRules":"391"},{"filePath":"904","messages":"905","suppressedMessages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"907","messages":"908","suppressedMessages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"910","messages":"911","suppressedMessages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"913","usedDeprecatedRules":"391"},{"filePath":"914","messages":"915","suppressedMessages":"916","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"917","messages":"918","suppressedMessages":"919","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"920","messages":"921","suppressedMessages":"922","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"923","messages":"924","suppressedMessages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"926","messages":"927","suppressedMessages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"929","usedDeprecatedRules":"391"},{"filePath":"930","messages":"931","suppressedMessages":"932","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"933","messages":"934","suppressedMessages":"935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"936","messages":"937","suppressedMessages":"938","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"939","messages":"940","suppressedMessages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"942","messages":"943","suppressedMessages":"944","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"945","messages":"946","suppressedMessages":"947","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"948","messages":"949","suppressedMessages":"950","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"951","messages":"952","suppressedMessages":"953","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"954","messages":"955","suppressedMessages":"956","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"957","messages":"958","suppressedMessages":"959","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"960","usedDeprecatedRules":"391"},{"filePath":"961","messages":"962","suppressedMessages":"963","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"964","messages":"965","suppressedMessages":"966","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"391"},{"filePath":"967","messages":"968","suppressedMessages":"969","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"970","usedDeprecatedRules":"391"},{"filePath":"971","messages":"972","suppressedMessages":"973","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"974","messages":"975","suppressedMessages":"976","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"977","messages":"978","suppressedMessages":"979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"980","messages":"981","suppressedMessages":"982","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"983","messages":"984","suppressedMessages":"985","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"986","messages":"987","suppressedMessages":"988","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"989","messages":"990","suppressedMessages":"991","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"992","messages":"993","suppressedMessages":"994","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\index.js",[],[],["995","996","997","998","999","1000","1001"],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\App.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\serviceWorker.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\routes.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\chart\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\scroll-to-top\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\LoginPage.js",["1002","1003","1004"],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\UserPage.js",["1005","1006"],[],"import { Helmet } from 'react-helmet-async';\r\n// import { filter } from 'lodash';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useEffect, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Button,\r\n  Popover,\r\n  Checkbox,\r\n  TableRow,\r\n  MenuItem,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  TableContainer,\r\n  TablePagination,\r\n} from '@mui/material';\r\n// components\r\nimport Iconify from '../components/iconify';\r\nimport Scrollbar from '../components/scrollbar';\r\n// sections\r\nimport { UserListHead, UserListToolbar } from '../sections/@dashboard/user';\r\n// mock\r\nimport USERLIST from '../_mock/user';\r\nimport { fetchAllTKKH } from '../service/taiKhoanKhachHangSevice';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Name', alignRight: false },\r\n  { id: 'company', label: 'Company', alignRight: false },\r\n  { id: 'role', label: 'Role', alignRight: false },\r\n  { id: 'isVerified', label: 'Verified', alignRight: false },\r\n  { id: 'status', label: 'Status', alignRight: false },\r\n  { id: '' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// function descendingComparator(a, b, orderBy) {\r\n//   if (b[orderBy] < a[orderBy]) {\r\n//     return -1;\r\n//   }\r\n//   if (b[orderBy] > a[orderBy]) {\r\n//     return 1;\r\n//   }\r\n//   return 0;\r\n// }\r\n\r\n// function getComparator(order, orderBy) {\r\n//   return order === 'desc'\r\n//     ? (a, b) => descendingComparator(a, b, orderBy)\r\n//     : (a, b) => -descendingComparator(a, b, orderBy);\r\n// }\r\n\r\n// function applySortFilter(array, comparator, query) {\r\n//   const stabilizedThis = array.map((el, index) => [el, index]);\r\n//   stabilizedThis.sort((a, b) => {\r\n//     const order = comparator(a[0], b[0]);\r\n//     if (order !== 0) return order;\r\n//     return a[1] - b[1];\r\n//   });\r\n//   if (query) {\r\n//     return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n//   }\r\n//   return stabilizedThis.map((el) => el[0]);\r\n// }\r\n\r\nexport default function UserPage() {\r\n  // Select list of users\r\n\r\n  const [listData, setListData] = useState([]);\r\n\r\n  const getListData = async (page, query) => {\r\n    try {\r\n      const res = await fetchAllTKKH(page, query);\r\n      console.log('Check res: ', res);\r\n      setListData(res.content);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getListData(0);\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const [orderBy, setOrderBy] = useState('name');\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = USERLIST.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setPage(0);\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  // const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - USERLIST.length) : 0;\r\n\r\n  // const filteredUsers = applySortFilter(USERLIST, getComparator(order, orderBy), filterName);\r\n\r\n  // const isNotFound = !filteredUsers.length && !!filterName;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> User | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            User\r\n          </Typography>\r\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n            New User\r\n          </Button>\r\n        </Stack>\r\n\r\n        <Card>\r\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              {/* <h1>{listData.data.content.length}</h1> */}\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={listData.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {listData.map((row) => (\r\n                    <TableRow key={row.idTaiKhoan}>\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={selected.indexOf(row.id) !== -1}\r\n                          onChange={(event) => handleClick(event, row.id)}\r\n                        />\r\n                      </TableCell>\r\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                          <Avatar alt={row.name} src={row.avatarUrl} />\r\n                          <Typography variant=\"subtitle2\" noWrap>\r\n                            {row.name}\r\n                          </Typography>\r\n                        </Stack>\r\n                      </TableCell> */}\r\n                      {/* <TableCell align=\"left\">{row.company}</TableCell> */}\r\n                      <TableCell align=\"left\">{row.ho}</TableCell>\r\n                      {/* <TableCell align=\"left\">{row.isVerified ? 'Yes' : 'No'}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Label color={(row.status === 'banned' && 'error') || 'success'}>\r\n                          {sentenceCase(row.status)}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <IconButton size=\"large\" color=\"inherit\" onClick={handleOpenMenu}>\r\n                          <Iconify icon={'eva:more-vertical-fill'} />\r\n                        </IconButton>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={USERLIST.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 140,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem>\r\n          <Iconify icon={'eva:edit-fill'} sx={{ mr: 2 }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem sx={{ color: 'error.main' }}>\r\n          <Iconify icon={'eva:trash-2-outline'} sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Page404.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\OrderManagement.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\DashboardAppPage.js",["1007"],[],"import { Helmet } from 'react-helmet-async';\r\nimport { faker } from '@faker-js/faker';\r\n// @mui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, Container, Typography } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// icon\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSackDollar } from '@fortawesome/free-solid-svg-icons';\r\n// components\r\nimport Iconify from '../components/iconify';\r\nimport { totalRevenue, totalInvoieces, totalTheoNgay, tyLeTraHang, tongSpDaBan } from '../service/bill-service';\r\nimport { topSpTrending } from '../service/san-pham-service';\r\n// sections\r\nimport {\r\n  AppTasks,\r\n  AppNewsUpdate,\r\n  AppOrderTimeline,\r\n  AppCurrentVisits,\r\n  AppWebsiteVisits,\r\n  AppTrafficBySite,\r\n  AppWidgetSummary,\r\n  AppCurrentSubject,\r\n  AppConversionRates,\r\n} from '../sections/@dashboard/app';\r\n\r\n// ----------------------------------------------------------------------\r\nlibrary.add(faSackDollar);\r\n\r\nexport default function DashboardAppPage() {\r\n  const theme = useTheme();\r\n  const [totalBill, setTotalBill] = useState(0);\r\n  const [invoieces, setinvoieces] = useState(0);\r\n  const [spTrending, setSpTrending] = useState([]);\r\n  const [hdNgay, setheoNgay] = useState([]); // State for trending data\r\n  const [rate, setRate] = useState(0); // State for\r\n  const [allSp, setAllSp] = useState(0);\r\n\r\n  theme.palette.info.main = '#4CAF50';\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await totalRevenue();\r\n      const invoiecesResponse = await totalInvoieces();\r\n      const trendingResponse = await topSpTrending();\r\n      const rateResponse = await tyLeTraHang();\r\n      const response = await totalTheoNgay();\r\n      const allSpres = await tongSpDaBan();\r\n\r\n      setTotalBill(Number(res));\r\n      setinvoieces(Number(invoiecesResponse));\r\n      setSpTrending(trendingResponse); // Set trending data\r\n      setRate(Number(rateResponse));\r\n      setheoNgay(response);\r\n      setAllSp(Number(allSpres));\r\n\r\n      console.log(hdNgay);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const currentVisitsData = spTrending.map((item) => ({\r\n    label: item[1], // Tên quốc gia, ví dụ \"Ao Kakame\"\r\n    value: item[0], // Số lượng lượt truy cập, ví dụ 5z`\r\n  }));\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n          Thống Kê\r\n        </Typography>\r\n\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppWidgetSummary title=\"Tổng Doanh Thu (vnđ)\" total={totalBill} icon={'ant-design:android-filled'} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppWidgetSummary title=\"Tổng Đơn Hàng\" total={invoieces} color=\"info\" icon={'ant-design:apple-filled'} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppWidgetSummary\r\n              title=\"Tổng sản phẩm đã bán\"\r\n              total={allSp}\r\n              color=\"warning\"\r\n              icon={'ant-design:windows-filled'}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppWidgetSummary title=\"Tỷ Lệ Trả Hàng (%)\" total={rate} color=\"error\" icon={'ant-design:bug-filled'} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AppWebsiteVisits\r\n              title=\"Tổng Tiền Theo Ngày\"\r\n              subheader=\"Biểu đồ tổng tiền theo ngày\"\r\n              chartLabels={hdNgay.map((item) => item[0])} // Assuming the first element in each sub-array is the date\r\n              chartData={[\r\n                {\r\n                  name: 'Tổng Tiền',\r\n                  type: 'line',\r\n                  fill: 'solid',\r\n                  data: hdNgay.map((item) => item[1]), // Assuming the second element in each sub-array is the total amount\r\n                },\r\n              ]}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppCurrentVisits\r\n              title=\"Top 4 sản phẩm bán chạy \"\r\n              chartData={currentVisitsData} // Truyền dữ liệu từ mảng đã biến đổi\r\n              chartColors={[\r\n                '#4CAF50', // Sử dụng màu xanh lá thay thế\r\n                theme.palette.primary.main,\r\n                theme.palette.warning.main,\r\n                theme.palette.error.main,\r\n              ]}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AppConversionRates\r\n              title=\"Conversion Rates\"\r\n              subheader=\"(+43%) than last year\"\r\n              chartData={[\r\n                { label: 'Italy', value: 400 },\r\n                { label: 'Japan', value: 430 },\r\n                { label: 'China', value: 448 },\r\n                { label: 'Canada', value: 470 },\r\n                { label: 'France', value: 540 },\r\n                { label: 'Germany', value: 580 },\r\n                { label: 'South Korea', value: 690 },\r\n                { label: 'Netherlands', value: 1100 },\r\n                { label: 'United States', value: 1200 },\r\n                { label: 'United Kingdom', value: 1380 },\r\n              ]}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppCurrentSubject\r\n              title=\"Current Subject\"\r\n              chartLabels={['English', 'History', 'Physics', 'Geography', 'Chinese', 'Math']}\r\n              chartData={[\r\n                { name: 'Series 1', data: [80, 50, 30, 40, 100, 20] },\r\n                { name: 'Series 2', data: [20, 30, 40, 80, 20, 80] },\r\n                { name: 'Series 3', data: [44, 76, 78, 13, 43, 10] },\r\n              ]}\r\n              chartColors={[...Array(6)].map(() => theme.palette.text.secondary)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AppNewsUpdate\r\n              title=\"News Update\"\r\n              list={[...Array(5)].map((_, index) => ({\r\n                id: faker.datatype.uuid(),\r\n                title: faker.name.jobTitle(),\r\n                description: faker.name.jobTitle(),\r\n                image: `/assets/images/covers/cover_${index + 1}.jpg`,\r\n                postedAt: faker.date.recent(),\r\n              }))}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppOrderTimeline\r\n              title=\"Order Timeline\"\r\n              list={[...Array(5)].map((_, index) => ({\r\n                id: faker.datatype.uuid(),\r\n                title: [\r\n                  '1983, orders, $4220',\r\n                  '12 Invoices have been paid',\r\n                  'Order #37745 from September',\r\n                  'New order placed #XF-2356',\r\n                  'New order placed #XF-2346',\r\n                ][index],\r\n                type: `order${index + 1}`,\r\n                time: faker.date.past(),\r\n              }))}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AppTrafficBySite\r\n              title=\"Traffic by Site\"\r\n              list={[\r\n                {\r\n                  name: 'FaceBook',\r\n                  value: 323234,\r\n                  icon: <Iconify icon={'eva:facebook-fill'} color=\"#1877F2\" width={32} />,\r\n                },\r\n                {\r\n                  name: 'Google',\r\n                  value: 341212,\r\n                  icon: <Iconify icon={'eva:google-fill'} color=\"#DF3E30\" width={32} />,\r\n                },\r\n                {\r\n                  name: 'Linkedin',\r\n                  value: 411213,\r\n                  icon: <Iconify icon={'eva:linkedin-fill'} color=\"#006097\" width={32} />,\r\n                },\r\n                {\r\n                  name: 'Twitter',\r\n                  value: 443232,\r\n                  icon: <Iconify icon={'eva:twitter-fill'} color=\"#1C9CEA\" width={32} />,\r\n                },\r\n              ]}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AppTasks\r\n              title=\"Tasks\"\r\n              list={[\r\n                { id: '1', label: 'Create FireStone Logo' },\r\n                { id: '2', label: 'Add SCSS and JS files if required' },\r\n                { id: '3', label: 'Stakeholder Meeting' },\r\n                { id: '4', label: 'Scoping & Estimations' },\r\n                { id: '5', label: 'Sprint Showcase' },\r\n              ]}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\OrderManagement-Timeline.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Cart-Bill-ADM.js",["1008"],[],"import '../scss/Car-Bill-ADM.scss';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Chip,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Snackbar,\r\n  Stack,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport axios from 'axios';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport DeleteSweepOutlinedIcon from '@mui/icons-material/DeleteSweepOutlined';\r\nimport { pink } from '@mui/material/colors';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Image } from 'react-bootstrap';\r\nimport { styled } from '@mui/material/styles';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport ModalDeleteDirectSale from '../forms/Modal-Delete-DirectSale';\r\nimport ModalCreateBillOnline from '../forms/Modal-Create-Online';\r\nimport { updateTongTien } from '../service/OrderManagementTimeLine';\r\nimport ModalAddKhachHang from '../forms/Modals-AddKhachHang';\r\nimport { detailBill, finByProductOnCart, findById, postAddBill, selectAllInvoiceWaiting } from '../service/BillSevice';\r\nimport ModalAddProduct from '../forms/Modals-AddProduct';\r\nimport ModalUpdateProductOnCart from '../forms/Modals-Update-Product-Cart';\r\nimport ModalDeleteProductOnCart from '../forms/Modal-Delete-Product';\r\nimport ModalDeleteAllProductOnCart from '../forms/Modal-Delete-All-Product';\r\nimport ModalPaymentComfirm from '../forms/Modal-Payment-Confirm';\r\nimport Iconify from '../components/iconify';\r\n\r\n// Dislay invoice waiting\r\nconst AntTabs = styled(Tabs)({\r\n  borderBottom: '1px solid #e8e8e8',\r\n  '& .MuiTabs-indicator': {\r\n    backgroundColor: '#1890ff',\r\n  },\r\n});\r\n\r\nconst AntTab = styled((props) => <Tab disableRipple {...props} />)(({ theme }) => ({\r\n  textTransform: 'none',\r\n  minWidth: 0,\r\n  [theme.breakpoints.up('sm')]: {\r\n    minWidth: 0,\r\n  },\r\n  fontWeight: theme.typography.fontWeightRegular,\r\n  marginRight: theme.spacing(1),\r\n  color: 'rgba(0, 0, 0, 0.85)',\r\n  fontFamily: [\r\n    '-apple-system',\r\n    'BlinkMacSystemFont',\r\n    '\"Segoe UI\"',\r\n    'Roboto',\r\n    '\"Helvetica Neue\"',\r\n    'Arial',\r\n    'sans-serif',\r\n    '\"Apple Color Emoji\"',\r\n    '\"Segoe UI Emoji\"',\r\n    '\"Segoe UI Symbol\"',\r\n  ].join(','),\r\n  '&:hover': {\r\n    color: '#40a9ff',\r\n    opacity: 1,\r\n  },\r\n  '&.Mui-selected': {\r\n    color: '#1890ff',\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n  '&.Mui-focusVisible': {\r\n    backgroundColor: '#d1eaff',\r\n  },\r\n}));\r\n\r\nconst CartBillADM = () => {\r\n  // Get IdHd on http\r\n  const param = useParams();\r\n  const idHdParam = param.id;\r\n\r\n  // Detail Hd\r\n  const [listHD, setlistHD] = useState([]);\r\n\r\n  const getDetailHD = useCallback(async () => {\r\n    try {\r\n      const getData = await detailBill(idHdParam);\r\n      console.log('getData: ', getData);\r\n      setlistHD(getData);\r\n    } catch (error) {\r\n      console.error('Error: ', error);\r\n    }\r\n  }, [idHdParam]);\r\n  useEffect(() => {\r\n    getDetailHD();\r\n  }, [getDetailHD]);\r\n  // Select invoice waiting.\r\n  const [tabs, setTabs] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const getListData = useCallback(async () => {\r\n    try {\r\n      const res = await selectAllInvoiceWaiting();\r\n      setTabs(res);\r\n      const idHdParamNumber = parseInt(idHdParam, 10);\r\n      const checkIndexTab = res.findIndex((item) => item.idHd === idHdParamNumber);\r\n      console.log('checkIndexTab: ', checkIndexTab);\r\n\r\n      setValue(checkIndexTab);\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  }, [idHdParam]);\r\n\r\n  useEffect(() => {\r\n    getListData();\r\n  }, [getListData]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    console.log('newValue', newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChange1 = (tabLabel) => {\r\n    navigate(`/dashboard/sales/card-bill/${tabLabel.idHd}`);\r\n  };\r\n\r\n  // Create a new Detail Direct\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const handleAddTab = async () => {\r\n    if (tabs.length >= 5) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Đã Tồn Tại 5 Hóa Đơn Chờ. Vui Lòng Thanh Toán!!!',\r\n      });\r\n    } else {\r\n      const res = await postAddBill(1, 8);\r\n      getListData();\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Tạo thành công hóa đơn',\r\n      });\r\n\r\n      // Update the tabs state to include the new tab\r\n      const nextTabNumber = tabs.length + 1;\r\n      const newTab = { maHd: `Tab ${nextTabNumber}` };\r\n      console.log('Check newTab: ', newTab);\r\n      const newTabs = [...tabs, newTab];\r\n      console.log('Check newTabs: ', newTabs);\r\n      setTabs(newTabs);\r\n\r\n      // Set the value state to the index of the newly added tab\r\n      setValue(newTabs.length - 1);\r\n\r\n      const getIdHttp = res.idHd;\r\n      navigate(`/dashboard/sales/card-bill/${getIdHttp}`);\r\n    }\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [information, setInformation] = useState();\r\n  const handleCloseTab = (index) => {\r\n    setOpen(true);\r\n    setInformation(index);\r\n  };\r\n  const handleCloseDeleteInvoice = () => {\r\n    setOpen(false);\r\n    getListData();\r\n    setValue(0);\r\n    const newTab = { maHd: `Tab ${1}` };\r\n    const newTabs = [...tabs, newTab];\r\n    setTabs(newTabs);\r\n    navigate(`/dashboard/sales/card-bill/${newTabs[0].idHd}`);\r\n  };\r\n\r\n  // Select Product On Cart\r\n  const [DataCart, setDataCart] = useState([]);\r\n  // const [numberPages, setNumberPages] = useState(0);\r\n  // const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const selectDataCart = useCallback(async () => {\r\n    try {\r\n      const res = await finByProductOnCart(idHdParam);\r\n      if (res) {\r\n        setDataCart(res);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [idHdParam]);\r\n  useEffect(() => {\r\n    selectDataCart();\r\n  }, [selectDataCart]);\r\n\r\n  // const handlePageClick = (page) => {\r\n  //   selectDataCart(page);\r\n  //   setCurrentPage(page);\r\n  // };\r\n  // Add Product\r\n  const [showModalsAdd, setShowModalAdd] = useState(false);\r\n  const handleAddProduct = () => {\r\n    setShowModalAdd(true);\r\n  };\r\n  const handleClose = () => {\r\n    setShowModalAdd(false);\r\n  };\r\n\r\n  // Delete product on cart\r\n  const [showModalsDelete, setShowModalDelete] = useState(false);\r\n  const [itemDelete, setIntemDelete] = useState();\r\n  const handleDelete = (item) => {\r\n    console.log('Check item', item);\r\n    setShowModalDelete(true);\r\n    setIntemDelete(item);\r\n  };\r\n  const handleCloseModalDelelte = () => {\r\n    setShowModalDelete(false);\r\n  };\r\n  // Delete all products\r\n  const [showModalsDeleteAll, setShowModalDeleteAll] = useState(false);\r\n  const handDeleteAll = () => {\r\n    setShowModalDeleteAll(true);\r\n  };\r\n  const handCloseDeleteAll = () => {\r\n    setShowModalDeleteAll(false);\r\n  };\r\n  // Update classify on the cart\r\n  const [showModalsUpdate, setShowModalsUpdate] = useState(false);\r\n  const [itemUpdateClassify, setItemUpdateClassify] = useState({});\r\n  const [itemUpdate, setItemUpdate] = useState({});\r\n\r\n  const handleUpdateClassify = async (item) => {\r\n    setShowModalsUpdate(true);\r\n    try {\r\n      const getOneSP = await findById(item[3]);\r\n      setItemUpdateClassify(getOneSP);\r\n      setItemUpdate(item);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleCloseUpdateClassify = () => {\r\n    setShowModalsUpdate(false);\r\n  };\r\n  // Show  payment information\r\n  const [isDeliveryChecked, setIsDeliveryChecked] = useState(false);\r\n\r\n  const handleDeliveryChange = (event) => {\r\n    getTienShip(0);\r\n    if (isDeliveryChecked === true) {\r\n      setSelectedProvince('');\r\n      setSelectedWard('');\r\n      setSelectedDistrict('');\r\n      setResult('');\r\n    }\r\n\r\n    setIsDeliveryChecked(event.target.checked);\r\n  };\r\n\r\n  // Fetch list of provinces on component mount\r\n  const [diachiCuThe, setDiachiCuThe] = useState('');\r\n  useEffect(() => {\r\n    fetchProvinces();\r\n  }, []);\r\n\r\n  // Get API Provinces\r\n  // const host = 'https://online-gateway.ghn.vn/shiip/public-api/master-data/province';\r\n\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [selectedProvince, setSelectedProvince] = useState('');\r\n  const [districts, setDistricts] = useState([]);\r\n  const [selectedDistrict, setSelectedDistrict] = useState('');\r\n  const [wards, setWards] = useState([]);\r\n  const [selectedWard, setSelectedWard] = useState('');\r\n\r\n  const [result, setResult] = useState('');\r\n\r\n  const fetchProvinces = async () => {\r\n    try {\r\n      const response = await axios.get('https://online-gateway.ghn.vn/shiip/public-api/master-data/province', {\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      console.log('response: ', response.data.data);\r\n      setProvinces(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching provinces:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchProvinces();\r\n  }, []);\r\n\r\n  const callApiDistrict = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/master-data/district`, {\r\n        params: { province_id: selectedProvince },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      console.log('Quận/Huyện: ', response.data);\r\n      setDistricts(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching districts:', error);\r\n    }\r\n  }, [selectedProvince]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProvince) {\r\n      console.log('selectedProvince: ', selectedProvince);\r\n      callApiDistrict();\r\n    }\r\n  }, [selectedProvince, callApiDistrict]);\r\n\r\n  const callApiWard = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/master-data/ward`, {\r\n        params: { district_id: selectedDistrict },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      setWards(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching wards:', error);\r\n    }\r\n  }, [selectedDistrict]);\r\n\r\n  // API gets service pack information\r\n  const [tienShip, getTienShip] = useState(0);\r\n\r\n  const getSevice = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee`, {\r\n        params: {\r\n          service_type_id: 2,\r\n          insurance_value: 500000,\r\n          coupon: null,\r\n          from_district_id: 1542,\r\n          to_district_id: selectedDistrict,\r\n          height: 15,\r\n          length: 15,\r\n          weight: 1000,\r\n          width: 15,\r\n        },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n          shop_id: 4699724,\r\n        },\r\n      });\r\n      if (provinces == null) {\r\n        getTienShip(0);\r\n      } else {\r\n        const totalShip = response.data?.data?.total || 0;\r\n        getTienShip(totalShip);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error get service:', error);\r\n    }\r\n  }, [provinces, selectedDistrict]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDistrict) {\r\n      console.log('selectedProvince: ', selectedDistrict);\r\n      callApiWard();\r\n      getSevice();\r\n    }\r\n  }, [getSevice, selectedDistrict, callApiWard]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDistrict && selectedProvince && selectedWard) {\r\n      const selectedProvinceName =\r\n        provinces.find((province) => province.ProvinceID === selectedProvince)?.ProvinceName || '';\r\n\r\n      const selectedDistrictName =\r\n        districts.find((district) => district.DistrictID === selectedDistrict)?.DistrictName || '';\r\n\r\n      const selectedWardName = wards.find((ward) => ward.WardCode === selectedWard)?.WardName || '';\r\n\r\n      setResult(`${selectedProvinceName}, ${selectedDistrictName}, ${selectedWardName}, ${diachiCuThe}`);\r\n    }\r\n  }, [selectedDistrict, selectedProvince, selectedWard, districts, provinces, wards, diachiCuThe]);\r\n\r\n  // Show thanhTien\r\n  const [thanhTien, setThanhTien] = useState(0);\r\n  const [tongTien, setTongTien] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const calculateTotalPrice = async () => {\r\n      // let total = 0;\r\n      const total = DataCart.reduce((accumulator, item) => accumulator + item[9], 0);\r\n      // Set Tong Tien\r\n      setTongTien(total);\r\n      // Set Tien Ship\r\n      console.log('getDataShip: ', listHD.tienShip);\r\n      // const totalShip = tienShip === 0 && listHD && listHD.tienShip ? listHD.tienShip : tienShip;\r\n      // Set Thanh Tien\r\n      setThanhTien(total + tienShip);\r\n      await updateTongTien(idHdParam, total, tienShip, thanhTien);\r\n    };\r\n\r\n    calculateTotalPrice();\r\n  }, [DataCart, idHdParam, tienShip, listHD, thanhTien]);\r\n\r\n  // Modal add KH\r\n  const [showModalsKH, setShowModalKH] = useState(false);\r\n  const handleAddKH = () => {\r\n    setShowModalKH(true);\r\n  };\r\n  const handleCloseAddKH = () => {\r\n    setShowModalKH(false);\r\n  };\r\n\r\n  // Handle Save\r\n  const navigate = useNavigate();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [tenKhTT, getTenKHTT] = useState('');\r\n  const [sdtKHTT, getSdtKHTT] = useState('');\r\n  const [tenKhShip, getTenKHShip] = useState('');\r\n  const [sdtKHShip, getSdtKHShip] = useState('');\r\n\r\n  const [openPayment, setOpenPayment] = useState(false);\r\n  const [openCreateOnline, setCreateOnline] = useState(false);\r\n  // const [information, setInformation] = useState();\r\n  const handleClick = async () => {\r\n    console.log('handleClick');\r\n    // const currentDate = new Date();\r\n    // const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n    if (isDeliveryChecked === false) {\r\n      setOpenPayment(true);\r\n    } else if (!tenKhShip.trim() || !sdtKHShip.trim()) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Hãy Nhập Thông Tin Người Nhận Hàng!!!',\r\n      });\r\n    } else if (!selectedWard.trim() || !selectedDistrict.trim() || !selectedProvince.trim()) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Hãy Nhập Địa Chỉ Nhận Hàng!!!',\r\n      });\r\n    } else {\r\n      setCreateOnline(true);\r\n    }\r\n  };\r\n  const handlePaymentClose = () => {\r\n    setOpenPayment(false);\r\n  };\r\n  const handleCloseCreateOnline = () => {\r\n    setCreateOnline(false);\r\n  };\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n  // Format thanhTien\r\n  const formatCurrency = (amount) => amount.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Box sx={{ bgcolor: '#fff' }}>\r\n          <Box sx={{ p: 3 }}>\r\n            <Button variant=\"contained\" onClick={handleAddTab}>\r\n              Thêm Hóa Đơn Chờ\r\n            </Button>\r\n          </Box>\r\n          <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\r\n            {tabs.map((tabLabel, index) => (\r\n              <AntTab\r\n                key={index}\r\n                onClick={() => handleChange1(tabLabel)}\r\n                label={\r\n                  <span>\r\n                    {tabLabel.maHd}\r\n                    <CloseIcon\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleCloseTab(tabLabel);\r\n                      }}\r\n                    />\r\n                  </span>\r\n                }\r\n              />\r\n            ))}\r\n          </AntTabs>\r\n\r\n          <Box sx={{ p: 3 }}>\r\n            {/* <p>Content: {tabContent[value]}</p> */}\r\n            <div>\r\n              <p>Bill Code: {listHD.maHd}</p>\r\n              <div className=\"class-add-product\">\r\n                <Button onClick={() => handleAddProduct()} variant=\"outlined\">\r\n                  <FontAwesomeIcon icon={faCartPlus} size=\"lg\" />\r\n                  Thêm Sản Phẩm\r\n                </Button>{' '}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row cart-information\">\r\n              <div className=\"row\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Giỏ Hàng{' '}\r\n                  </Typography>\r\n                </Stack>\r\n              </div>\r\n              <TableContainer sx={{ marginTop: 2, marginBottom: 2 }} component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Ảnh</TableCell>\r\n                      <TableCell>Mã Sản Phẩm</TableCell>\r\n                      <TableCell align=\"right\">Sản Phẩm</TableCell>\r\n                      <TableCell align=\"right\">Thuộc tính</TableCell>\r\n                      <TableCell align=\"right\">Giá</TableCell>\r\n                      <TableCell align=\"right\">Số Lượng</TableCell>\r\n                      <TableCell align=\"right\">Tổng</TableCell>\r\n                      <TableCell align=\"right\">Thao Tác</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {DataCart && DataCart.length > 0 ? (\r\n                      DataCart.map((item, index) => {\r\n                        const imagesArray = item[2].split(','); // Tách chuỗi thành mảng\r\n                        const firstImage = imagesArray[0];\r\n                        return (\r\n                          <TableRow\r\n                            key={index}\r\n                            sx={{\r\n                              '&:last-child td, &:last-child th': { border: 0 },\r\n                            }}\r\n                          >\r\n                            <TableCell>\r\n                              <Image rounded style={{ width: '150px', height: 'auto' }} src={firstImage} />\r\n                            </TableCell>\r\n                            <TableCell>{item[4]}</TableCell>\r\n                            <TableCell align=\"right\">{item[5]}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <Button onClick={() => handleUpdateClassify(item)} size=\"small\" variant=\"outlined\">\r\n                                Size: {item[6]}\r\n                                <br />\r\n                                Màu: {item[11]}\r\n                              </Button>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{formatCurrency(item[7])}</TableCell>\r\n                            <TableCell align=\"right\">{item[8]}</TableCell>\r\n                            <TableCell align=\"right\">{formatCurrency(item[9])}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <IconButton aria-label=\"delete\" size=\"large\" onClick={() => handleDelete(item)}>\r\n                                <DeleteSweepOutlinedIcon sx={{ color: pink[500] }} />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow>\r\n                        <TableCell align=\"right\" colSpan={8}>\r\n                          KHÔNG CÓ DỮ LIỆU\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n\r\n              <div className=\"col-2\">\r\n                <Button sx={{ marginBottom: 3 }} onClick={handDeleteAll} variant=\"outlined\" startIcon={<DeleteIcon />}>\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                {/* <Stack direction=\"row\" spacing={2} justify=\"center\" alignItems=\"center\">\r\n                  <Pagination\r\n                    onChange={(event, page) => handlePageClick(page - 1)}\r\n                    count={numberPages}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Stack> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"row customer-information\">\r\n              <div className=\"row\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thông Tin Khách Hàng{' '}\r\n                  </Typography>\r\n                  <Button onClick={() => handleAddKH()} variant=\"outlined\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                    Khách Hàng{' '}\r\n                  </Button>\r\n                </Stack>\r\n              </div>\r\n\r\n              <div className=\"text-information\">\r\n                {listHD.idKH ? (\r\n                  <>\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Mã Tài Khoản \"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={listHD.idKH.maTaiKhoan}\r\n                      // value={listHD.idKH.maTaiKhoan}\r\n                      fullWidth\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Tên Khách Hàng\"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={`${listHD.idKH.ho} ${listHD.idKH.ten}`}\r\n                      // value={selectedCustomerName}\r\n                      fullWidth\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Số Điện Thoại\"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={listHD.idKH.sdt}\r\n                      fullWidth\r\n                      // value={selectedCustomerEmail}\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Chip label=\"Khách Lẻ\" color=\"primary\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row information-payment\">\r\n              <div className=\"row header-information\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thông Tin Thanh Toán{' '}\r\n                  </Typography>\r\n                  <Button onClick={() => handleAddKH()} variant=\"outlined\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                    Primary{' '}\r\n                  </Button>\r\n                </Stack>\r\n                {/* <div className=\"col-6\">\r\n\r\n                  <h6>Thông Tin Thanh Toán</h6>\r\n                </div>\r\n                <div className=\"col-6 button-list\">\r\n                  <Button size=\"small\" variant=\"outlined\">\r\n                    Primary\r\n                  </Button>\r\n                </div> */}\r\n              </div>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6} md={7}>\r\n                  {isDeliveryChecked ? (\r\n                    <div className=\"text-information\">\r\n                      <div>\r\n                        <h5>\r\n                          {' '}\r\n                          <AccountBoxIcon />\r\n                          Thông Tin Người Nhận\r\n                        </h5>\r\n                      </div>\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Tên Người Nhận\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        onChange={(e) => getTenKHShip(e.target.value)}\r\n                        sx={{ marginTop: 2 }}\r\n                      />\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Số Điện Thoại\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getSdtKHShip(e.target.value)}\r\n                      />\r\n                      <div className=\"address\">\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 165, marginRight: 3, marginTop: 2 }}>\r\n                          <InputLabel id=\"province-label\">Tỉnh/Thành Phố</InputLabel>\r\n                          <Select\r\n                            labelId=\"province-label\"\r\n                            id=\"province-select\"\r\n                            value={selectedProvince}\r\n                            onChange={(e) => setSelectedProvince(e.target.value)}\r\n                            label=\"Tỉnh/Thành Phố\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Tỉnh/Thành Phố</em>\r\n                            </MenuItem>\r\n                            {provinces.map((province) => (\r\n                              <MenuItem key={province.ProvinceID} value={province.ProvinceID}>\r\n                                {province.ProvinceName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 165, marginRight: 3, marginTop: 2 }}>\r\n                          <InputLabel id=\"district-label\">Quận/Huyện</InputLabel>\r\n                          <Select\r\n                            labelId=\"district-label\"\r\n                            id=\"district-select\"\r\n                            value={selectedDistrict}\r\n                            onChange={(e) => setSelectedDistrict(e.target.value)}\r\n                            label=\"Quận/Huyện\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Quận/Huyện</em>\r\n                            </MenuItem>\r\n                            {districts.map((district) => (\r\n                              <MenuItem key={district.DistrictID} value={district.DistrictID}>\r\n                                {district.DistrictName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 170, marginTop: 2 }}>\r\n                          <InputLabel id=\"ward-label\">Phường/Xã</InputLabel>\r\n                          <Select\r\n                            labelId=\"ward-label\"\r\n                            id=\"ward-select\"\r\n                            value={selectedWard}\r\n                            onChange={(e) => setSelectedWard(e.target.value)}\r\n                            label=\"Phường/Xã\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Phường/Xã</em>\r\n                            </MenuItem>\r\n                            {wards.map((ward) => (\r\n                              <MenuItem key={ward.WardCode} value={ward.WardCode}>\r\n                                {ward.WardName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <div id=\"result\">{result}</div>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <TextField\r\n                          id=\"standard-multiline-flexible\"\r\n                          label=\"Địa Chỉ Cụ Thể\"\r\n                          multiline\r\n                          maxRows={4}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          sx={{ marginTop: 2 }}\r\n                          value={diachiCuThe}\r\n                          onChange={(e) => setDiachiCuThe(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-information\">\r\n                      <div>\r\n                        <h5>\r\n                          <AccountBoxIcon />\r\n                          Thông Tin Khách Hàng\r\n                        </h5>\r\n                      </div>\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Người Thanh Toán\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getTenKHTT(e.target.value)}\r\n                      />\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Số Điện Thoại\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getSdtKHTT(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12} md={6} lg={4}>\r\n                  <h5>\r\n                    <AccountBalanceWalletIcon />\r\n                    THÔNG TIN THANH TOÁN\r\n                  </h5>\r\n                  <FormControlLabel control={<Switch />} onChange={handleDeliveryChange} label=\"Giao Hàng\" />\r\n                  <br />\r\n                  <div className=\"row\">\r\n                    <Stack\r\n                      sx={{ marginTop: 5 }}\r\n                      direction=\"row\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"space-between\"\r\n                      mb={3}\r\n                    >\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Tiền Hàng{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {formatCurrency(tongTien)}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Tiền Ship{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {tienShip}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Thành Tiền{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {formatCurrency(thanhTien)}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div className=\"class-checkout\">\r\n              <LoadingButton\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n                onClick={handleClick}\r\n                loading={loading}\r\n                loadingPosition=\"start\"\r\n                startIcon={<SaveIcon />}\r\n                variant=\"contained\"\r\n              >\r\n                <span>Save</span>\r\n              </LoadingButton>\r\n            </div>\r\n\r\n            {/* Add Modals */}\r\n            <ModalAddProduct\r\n              show={showModalsAdd}\r\n              selectDataCart={selectDataCart}\r\n              handleClose={handleClose}\r\n              DataCart={DataCart}\r\n            />\r\n            {/* Modal Update Product */}\r\n            <ModalUpdateProductOnCart\r\n              show={showModalsUpdate}\r\n              handleClose={handleCloseUpdateClassify}\r\n              itemUpdateClassify={itemUpdateClassify}\r\n              selectDataCart={selectDataCart}\r\n              itemUpdate={itemUpdate}\r\n            />\r\n\r\n            {/* Modal Delete Product  */}\r\n            <ModalDeleteAllProductOnCart\r\n              open={showModalsDeleteAll}\r\n              handleClose={handCloseDeleteAll}\r\n              selectDataCart={selectDataCart}\r\n              DataCart={DataCart}\r\n            />\r\n            {/* Modal Add Customer */}\r\n            <ModalAddKhachHang\r\n              open={showModalsKH}\r\n              handleClose={handleCloseAddKH}\r\n              // setSelectedCustomerName={setSelectedCustomerName}\r\n              // setSelectedMaTk={setSelectedMaTk}\r\n              // setSelectedCustomerEmail={setSelectedCustomerEmail}\r\n            />\r\n            {/* ModalDeleteDirectSale */}\r\n            <ModalDeleteDirectSale open={open} handleClose={handleCloseDeleteInvoice} information={information} />\r\n            {DataCart.length > 0 && (\r\n              <>\r\n                {/* Modal Delete Product  */}\r\n                {itemDelete !== undefined && (\r\n                  <ModalDeleteProductOnCart\r\n                    open={showModalsDelete}\r\n                    handleClose={handleCloseModalDelelte}\r\n                    itemDelete={itemDelete}\r\n                    selectDataCart={selectDataCart}\r\n                    DataCart={DataCart}\r\n                  />\r\n                )}\r\n                <ModalPaymentComfirm\r\n                  show={openPayment}\r\n                  handleClose={handlePaymentClose}\r\n                  thanhTien={thanhTien}\r\n                  listHD={listHD}\r\n                  tenKhTT={tenKhTT}\r\n                  sdtKHTT={sdtKHTT}\r\n                />\r\n\r\n                <ModalCreateBillOnline\r\n                  open={openCreateOnline}\r\n                  handleClose={handleCloseCreateOnline}\r\n                  thanhTien={thanhTien}\r\n                  listHD={listHD}\r\n                  tenKhShip={tenKhShip}\r\n                  sdtKHShip={sdtKHShip}\r\n                  result={result}\r\n                />\r\n              </>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CartBillADM;\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\DirectSale-ADM.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Home.js",["1009"],[],"// react\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { sample } from 'lodash';\r\nimport { Box, Card, CardActionArea, Link, Stack, Typography } from '@mui/material';\r\nimport { Container } from '@mui/system';\r\nimport { Carousel, Col, Row } from 'react-bootstrap';\r\nimport { styled } from '@mui/material/styles';\r\nimport SearchOffIcon from '@mui/icons-material/SearchOff';\r\n// utils\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { fCurrency } from '../../utils/formatNumber';\r\n// import\r\nimport anh1 from '../../assets/slider_2.jpg';\r\nimport anh2 from '../../assets/banner-thoi-trang-nam.jpg';\r\nimport anh3 from '../../assets/banner-thoi-trang-the-thao-cho-nam_113858272.jpg';\r\nimport '../../scss/Home.scss';\r\nimport { fetchAllCTSPBySize } from '../../service/BillSevice';\r\n\r\n// @mui\r\nimport Label from '../../components/label';\r\nimport { ColorPreview } from '../../components/color-utils';\r\nimport { getSpGiamGiaForClient, getTopSpBanChayForClient } from '../../service/SanPhamService';\r\nimport { ProductListAll } from '../../sections/@dashboard/products';\r\n\r\nconst StyledProductImg = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute',\r\n});\r\n\r\nconst Home = () => {\r\n  const [listSPBanChay, setListSPBanChay] = useState([]);\r\n  const [listSpGiamGia, setListSpGiamGia] = useState([]);\r\n  const [listData, setListData] = useState([]);\r\n\r\n  const getListSPBanChay = async () => {\r\n    try {\r\n      const res = await getTopSpBanChayForClient();\r\n      console.log('getListSPBanChay ', res);\r\n      setListSPBanChay(res);\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  };\r\n\r\n  const getListSpGiamGia = async () => {\r\n    try {\r\n      const res = await getSpGiamGiaForClient();\r\n      console.log('Check res: ', res);\r\n      setListSpGiamGia(res);\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  };\r\n\r\n  const getAllData = useCallback(async () => {\r\n    try {\r\n      const getData = await fetchAllCTSPBySize();\r\n      console.log('getData: ', getData);\r\n      if (getData) {\r\n        setListData(getData);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getListSPBanChay();\r\n    getAllData();\r\n    getListSpGiamGia();\r\n  }, [getAllData]);\r\n\r\n  const navigate = useNavigate();\r\n  // Format thanhTien\r\n  function formatCurrency(price) {\r\n    if (!price) return \"0\";\r\n\r\n    const formatter = new Intl.NumberFormat(\"vi-VN\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  function formatCurrencyNull(price) {\r\n    if (!price) return \"\";\r\n\r\n    const formatter = new Intl.NumberFormat(\"vi-VN\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  const handleChoose = async (id, cover) => {\r\n    console.log('HIHIHI', cover, id);\r\n    navigate(`/client/detail/${id}`);\r\n  };\r\n\r\n  const PRODUCTS = listSPBanChay.map((item, index) => {\r\n    const setIndex = index + 1;\r\n    // Select price\r\n    const priceRange = item.giaMin === item.giaThucTe ? null : item.giaMin;\r\n\r\n    // const PRODUCT_COLOR = ['#00AB55', '#000000', '#FFFFFF', '#FFC0CB', '#FF4842', '#1890FF', '#94D82D', '#FFC107'];\r\n    const PRODUCT_COLOR = ['#000000', '#FFC0CB', '#94D82D'];\r\n\r\n    return {\r\n      id: item.idSp,\r\n      cover: item.url,\r\n      name: item.tenSp,\r\n      price: item.giaMin,\r\n      priceSale: priceRange,\r\n      colors:\r\n        (setIndex === 1 && PRODUCT_COLOR.slice(0, 2)) ||\r\n        (setIndex === 2 && PRODUCT_COLOR.slice(1, 3)) ||\r\n        (setIndex === 3 && PRODUCT_COLOR.slice(2, 4)) ||\r\n        (setIndex === 4 && PRODUCT_COLOR.slice(3, 6)) ||\r\n        (setIndex === 23 && PRODUCT_COLOR.slice(4, 6)) ||\r\n        (setIndex === 24 && PRODUCT_COLOR.slice(5, 6)) ||\r\n        PRODUCT_COLOR,\r\n      status: sample(['hot']),\r\n    };\r\n  });\r\n\r\n  const itemsPerSlide = 4; // Number of cards per slide\r\n\r\n  const numSlides = Math.ceil(PRODUCTS.length / itemsPerSlide);\r\n\r\n  const slides = [];\r\n  for (let i = 0; i < numSlides; i += 1) {\r\n    const start = i * itemsPerSlide;\r\n    const end = (i + 1) * itemsPerSlide;\r\n\r\n    const slideProducts = PRODUCTS.slice(start, end);\r\n    const slide = (\r\n      <Carousel.Item key={i}>\r\n        <Container>\r\n          <Row>\r\n            {slideProducts.map((product, index) => (\r\n              <Col key={index} sm={6} md={4} lg={3} className=\"product-col\">\r\n                <Card sx={{ height: 350, width: 250 }}>\r\n                  <CardActionArea onClick={() => handleChoose(product.id, product.cover)}>\r\n                    {/* <DialogContent> */}\r\n                    <Box sx={{ pt: '100%', position: 'relative' }}>\r\n                      {product.status && (\r\n                        <Label\r\n                          variant=\"filled\"\r\n                          color={(product.status === 'hot' && 'error') || 'info'}\r\n                          sx={{\r\n                            zIndex: 9,\r\n                            top: 16,\r\n                            right: 16,\r\n                            position: 'absolute',\r\n                            textTransform: 'uppercase',\r\n                          }}\r\n                        >\r\n                          {product.status}\r\n                        </Label>\r\n                      )}\r\n                      <StyledProductImg alt={product.name} src={product.cover} />\r\n                    </Box>\r\n\r\n                    <Stack spacing={2} sx={{ p: 3 }}>\r\n                      <Link color=\"inherit\" underline=\"hover\">\r\n                        <Typography variant=\"subtitle1\" noWrap>\r\n                          {product.name}\r\n                        </Typography>\r\n                      </Link>\r\n\r\n                      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                        <ColorPreview colors={product.colors} />\r\n                        <Typography variant=\"subtitle2\">\r\n                          <Typography\r\n                            component=\"span\"\r\n                            variant=\"subtitle2\"\r\n                            sx={{\r\n                              color: 'text.disabled',\r\n                              textDecoration: 'line-through',\r\n                            }}\r\n                          >\r\n                            {formatCurrencyNull(product.priceSale) && formatCurrencyNull(product.priceSale)}\r\n                          </Typography>\r\n                          &nbsp;\r\n                          {formatCurrency(product.price)}\r\n                        </Typography>\r\n                      </Stack>\r\n                    </Stack>\r\n                    {/* </DialogContent> */}\r\n                  </CardActionArea>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </Carousel.Item>\r\n    );\r\n\r\n    slides.push(slide);\r\n  }\r\n  return (\r\n    <>\r\n      <section className=\"gray-background-home\">\r\n        <div>\r\n          <h6 className=\"hello\">XIN CHÀO CÁC BẠN</h6>\r\n          <p>Chào Mừng Đến Với Cửa Hàng 5F Store</p>\r\n        </div>\r\n\r\n        <div>\r\n          <Carousel>\r\n            <Carousel.Item style={{ height: '400px' }}>\r\n              <img className=\"d-block w-100\" src={anh1} alt={anh1} />\r\n            </Carousel.Item>\r\n            <Carousel.Item style={{ height: '400px' }}>\r\n              <img className=\"d-block w-100\" src={anh2} alt=\"Second slide\" />\r\n            </Carousel.Item>\r\n            <Carousel.Item style={{ height: '400px' }}>\r\n              <img className=\"d-block w-100\" src={anh3} alt=\"Third slide\" />\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </div>\r\n      </section>\r\n      <section className=\"section2\">\r\n        <div className=\"text\">\r\n          <p>Cái Nhìn Đầu Tiên</p>\r\n          <h5>SẢN PHẨM ĐƯỢC MUA NHIỀU NHẤT</h5>\r\n          <p>Dưới Đây Là Một Số Sản Phẩm Bán Chạy Nhất Của 5F Store</p>\r\n        </div>\r\n        <div className=\"\">\r\n          <Carousel data-bs-theme=\"dark\" interval={5000}>\r\n            {slides}\r\n          </Carousel>\r\n        </div>\r\n      </section>\r\n      <section className=\"section3\">\r\n        <div>\r\n          <Carousel interval={10000}>\r\n            <Carousel.Item style={{ height: '400px' }}>\r\n              <img className=\"d-block w-100\" src={anh1} alt={anh1} />\r\n            </Carousel.Item>\r\n            <Carousel.Item style={{ height: '400px' }}>\r\n              <img className=\"d-block w-100\" src={anh2} alt=\"Second slide\" />\r\n            </Carousel.Item>\r\n            <Carousel.Item style={{ height: '400px' }}>\r\n              <img className=\"d-block w-100\" src={anh3} alt=\"Third slide\" />\r\n            </Carousel.Item>\r\n          </Carousel>\r\n        </div>\r\n        <div className=\"text\">\r\n          <p>Có Lẽ Bạn Đang Mong Chờ</p>\r\n          <h5>MỘT SỐ SẢN PHẨM GIẢM GIÁ</h5>\r\n        </div>\r\n        <div className=\"container\">\r\n          {listSpGiamGia.length > 0 ? (\r\n            <ProductListAll products={listSpGiamGia} sx={{ marginBottom: '50px' }} />\r\n          ) : (\r\n            <Typography variant=\"h5\" gutterBottom sx={{ textAlign: 'center', marginBottom: '50px' }}>\r\n              <SearchOffIcon sx={{ fontSize: 80 }} /> Không tìm thấy sản phẩm phù hợp!\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\ProductsPage.js",["1010"],[],"import { Helmet } from 'react-helmet-async';\r\nimport { useState, useEffect } from 'react';\r\n// @mui\r\nimport { Container, Stack, Typography } from '@mui/material';\r\nimport SearchOffIcon from '@mui/icons-material/SearchOff';\r\n// components\r\nimport { ProductSort, ProductListAll, ProductfilterSB } from '../../sections/@dashboard/products';\r\n// mock\r\n\r\n//\r\nimport { fetchSpForClient } from '../../service/SanPhamService';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProductsPage() {\r\n  const [listSP, setListSP] = useState([]);\r\n\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  const handleOpenFilter = () => {\r\n    setOpenFilter(true);\r\n  };\r\n\r\n  const handleCloseFilter = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  const getListData = async () => {\r\n    try {\r\n      const res = await fetchSpForClient();\r\n      console.log('Check res: ', res);\r\n      setListSP(res);\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getListData();\r\n  }, []);\r\n\r\n  // filter\r\n\r\n  const [listLoc, setListLoc] = useState([]);\r\n  const [isFiltered, setIsFiltered] = useState(false);\r\n\r\n  const handleFilter = (filteredProducts) => {\r\n    setListLoc(filteredProducts);\r\n    setIsFiltered(true);\r\n  };\r\n\r\n  const displayProducts = isFiltered ? listLoc : listSP;\r\n\r\n  console.log(\"displayProducts: \", displayProducts);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Products | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n          Products\r\n        </Typography>\r\n\r\n        <Stack direction=\"row\" flexWrap=\"wrap-reverse\" alignItems=\"center\" justifyContent=\"flex-end\" sx={{ mb: 5 }}>\r\n          <Stack direction=\"row\" spacing={1} flexShrink={0} sx={{ my: 1 }}>\r\n            <ProductfilterSB\r\n              openFilter={openFilter}\r\n              onOpenFilter={handleOpenFilter}\r\n              onCloseFilter={handleCloseFilter}\r\n              listSP={listSP}\r\n              onFilter={handleFilter}\r\n            />\r\n          </Stack>\r\n        </Stack>\r\n\r\n        {listSP.length > 0 && (\r\n          <div>\r\n            {displayProducts.length > 0 ? (\r\n              <ProductListAll products={displayProducts} sx={{ marginBottom: '50px' }} />\r\n            ) : (\r\n              <Typography variant=\"h5\" gutterBottom sx={{ textAlign: 'center', marginBottom: '50px' }}>\r\n                <SearchOffIcon sx={{ fontSize: 80 }} /> Không tìm thấy sản phẩm phù hợp!\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Detail-product.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Contact.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\SelectAllBill.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Payment-Page1.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\OrderClient-Timeline.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Cart.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\SanPham\\ModelAdd.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\discounts\\ModalsAddNewGiamGia.js",["1011"],[],"import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { vi } from 'date-fns/locale'; // Import locale cho tiếng Việt\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Checkbox,\r\n  Chip,\r\n  Grid,\r\n  Paper,\r\n  Snackbar,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { Col, Image, Table } from 'react-bootstrap';\r\nimport { DateTimePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport dayjs from 'dayjs';\r\nimport { DemoContainer, DemoItem } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { add, getAllSanPham } from '../../service/giamGiaService';\r\nimport '../../scss/GiamGiaClient.scss';\r\nimport '../../scss/GiamGiaAdd.scss';\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nconst ModelAddNewGiamGia = () => {\r\n  // const { show, handleClose, isDataGiamGia, getGiamGia } = props;\r\n  // console.log(dataSanPham)\r\n  const navigate = useNavigate();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([]);\r\n  const [right, setRight] = React.useState([]);\r\n  const [leftPage, setLeftPage] = React.useState(0);\r\n  const [leftRowsPerPage, setLeftRowsPerPage] = React.useState(5);\r\n  const [rightPage, setRightPage] = React.useState(0);\r\n  const [rightRowsPerPage, setRightRowsPerPage] = React.useState(5);\r\n  const [chiTietList, setchiTietList] = React.useState([]);\r\n  const [image, setImage] = useState([]);\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const getAllSp = async () => {\r\n    try {\r\n      const res = await getAllSanPham();\r\n      console.log('data: ', res);\r\n      setLeft(res);\r\n    } catch (error) {\r\n      console.error('Error loading images:', error);\r\n    }\r\n  };\r\n\r\n  console.log('Img: ', image);\r\n\r\n  React.useEffect(() => {\r\n    getAllSp();\r\n  }, []);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n\r\n  const handleToggle = (value, isLeft) => () => {\r\n    if (isLeft) {\r\n      const currentIndex = checked.indexOf(value);\r\n      const newChecked = [...checked];\r\n\r\n      if (currentIndex === -1) {\r\n        newChecked.push(value);\r\n      } else {\r\n        newChecked.splice(currentIndex, 1);\r\n      }\r\n\r\n      setChecked(newChecked);\r\n    } else {\r\n      const currentIndex = chiTietList.indexOf(value);\r\n      const newchiTietList = [...chiTietList];\r\n\r\n      if (currentIndex === -1) {\r\n        newchiTietList.push(value);\r\n      } else {\r\n        newchiTietList.splice(currentIndex, 1);\r\n      }\r\n      setchiTietList(newchiTietList);\r\n    }\r\n  };\r\n\r\n  const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    const newRight = right.concat(leftChecked);\r\n    const newLeft = not(left, leftChecked);\r\n\r\n    const sortedRight = leftChecked.concat(newRight.filter((value) => leftChecked.indexOf(value) === -1));\r\n\r\n    setRight(sortedRight);\r\n    setLeft(newLeft);\r\n    setChecked(not(checked, leftChecked));\r\n\r\n    setchiTietList([...chiTietList, ...leftChecked]);\r\n    console.log([...chiTietList, ...leftChecked]);\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    const newLeft = left.concat(chiTietList); // Sửa từ rightChecked sang chiTietList\r\n    const newRight = not(right, chiTietList); // Sửa từ rightChecked sang chiTietList\r\n\r\n    // Move the selected items to the top of the newLeft array\r\n    const sortedLeft = chiTietList.concat(newLeft.filter((value) => chiTietList.indexOf(value) === -1)); // Sửa từ rightChecked sang chiTietList\r\n\r\n    setLeft(sortedLeft);\r\n    setRight(newRight);\r\n    setchiTietList([]); // Xóa các phần tử đã chọn khỏi chiTietList\r\n    setChecked([]); // Xóa các phần tử đã chọn\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  const handleLeftPageChange = (event, newPage) => {\r\n    setLeftPage(newPage);\r\n  };\r\n\r\n  const handleLeftRowsPerPageChange = (event) => {\r\n    setLeftRowsPerPage(parseInt(event.target.value, 10));\r\n    setLeftPage(0);\r\n  };\r\n\r\n  const handleRightPageChange = (event, newPage) => {\r\n    setRightPage(newPage);\r\n  };\r\n\r\n  const handleRightRowsPerPageChange = (event) => {\r\n    setRightRowsPerPage(parseInt(event.target.value, 10));\r\n    setRightPage(0);\r\n  };\r\n\r\n  const isMoveLeftDisabled = chiTietList.length === 0;\r\n\r\n  function formatCurrency(price) {\r\n    if (!price) return '0';\r\n\r\n    const formatter = new Intl.NumberFormat('vi-VN', {\r\n      style: 'currency',\r\n      currency: 'VND',\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  const [giamGia, setGiamGia] = useState({\r\n    maGiamGia: '',\r\n    tenChuongTrinh: '',\r\n    ngayBatDau: '',\r\n    ngayKetThuc: '',\r\n    mucGiamPhanTram: '',\r\n    mucGiamTienMat: '',\r\n    trangThai: 0,\r\n  });\r\n\r\n  console.log(chiTietList);\r\n\r\n  const { maGiamGia, tenChuongTrinh, mucGiamPhanTram, mucGiamTienMat } = giamGia;\r\n\r\n  const onInputChange = (e) => {\r\n    setGiamGia({ ...giamGia, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  console.log(giamGia);\r\n\r\n  const [selected, setSelected] = useState('');\r\n  const changeHandler = (e) => {\r\n    setSelected(e.target.value);\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    if (!maGiamGia.trim() || !tenChuongTrinh.trim() || !ngayBatDau || !ngayKetThuc) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập đầy đủ thông tin chương trình giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!selected) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng chọn loại giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (\r\n      selected === 'phanTram' &&\r\n      (!mucGiamPhanTram || Number.isNaN(mucGiamPhanTram) || mucGiamPhanTram < 1 || mucGiamPhanTram > 50)\r\n    ) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập mức giảm phần trăm hợp lệ (1-50)!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selected === 'mucGiam' && (!mucGiamTienMat || Number.isNaN(mucGiamTienMat))) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập mức giảm tiền mặt hợp lệ!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (chiTietList.length === 0) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng chọn ít nhất một sản phẩm để áp dụng giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const checkDateValidity = () => ngayKetThuc.isAfter(ngayBatDau);\r\n\r\n    if (!checkDateValidity()) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Ngày kết thúc phải sau ngày bắt đầu!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Định dạng ngày và giờ theo múi giờ Việt Nam\r\n\r\n      const selectedDate = dayjs(ngayBatDau);\r\n      const ngay = selectedDate.format('YYYY-MM-DDTHH:mm:ss', { locale: vi });\r\n      const selectedDatekt = dayjs(ngayKetThuc);\r\n      const ngaykt = selectedDatekt.format('YYYY-MM-DDTHH:mm:ss', { locale: vi });\r\n\r\n      // const formattedDateFirst = format(ngay, 'dd/MM/yyyy HH:mm:ss', { locale: vi });\r\n      // const formattedDateLast = format(ngaykt, 'dd/MM/yyyy HH:mm:ss', { locale: vi });\r\n\r\n      console.log('ngay', ngay);\r\n\r\n      const giaGiaAa = {\r\n        maGiamGia: giamGia.maGiamGia,\r\n        tenChuongTrinh: giamGia.tenChuongTrinh,\r\n        ngayBatDau: ngay,\r\n        ngayKetThuc: ngaykt,\r\n        mucGiamPhanTram: giamGia.mucGiamPhanTram,\r\n        mucGiamTienMat: giamGia.mucGiamTienMat,\r\n        trangThai: 0,\r\n      };\r\n\r\n      console.log('giaGiaAa', giaGiaAa);\r\n\r\n      // Trích xuất danh sách idSp từ chiTietList\r\n      const idSpList = chiTietList.map((item) => item.sanPham.idSp);\r\n\r\n      // Cập nhật state listIdSp\r\n      const giamGiaChiTietOk = {\r\n        giamGia: giaGiaAa,\r\n        idSp: idSpList,\r\n      };\r\n      console.log('giamGiaChiTietOk', giamGiaChiTietOk);\r\n\r\n      const response = await add(giamGiaChiTietOk);\r\n\r\n      if (response.status === 'Ok!') {\r\n        navigate('/dashboard/discounts');\r\n        setAlertContent({\r\n          type: 'success',\r\n          message: 'Thêm thành công!',\r\n        });\r\n      } else {\r\n        setAlertContent({\r\n          type: 'success',\r\n          message: 'Thêm không thành công!',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Đã xảy ra lỗi khi thêm giảm giá!',\r\n      });\r\n    }\r\n  };\r\n  // if (!giamGiaData) {\r\n  //   return <div>Loading...</div>;\r\n  // }\r\n  const todayAtNoon = dayjs().set('hour', 12).startOf('hour');\r\n  const todayAt9AM = dayjs().set('hour', 9).startOf('hour');\r\n  const [ngayBatDau, setNgayBatDau] = useState(dayjs().set('hour', 12).startOf('hour'));\r\n  const [ngayKetThuc, setNgayKetThuc] = useState(dayjs().set('hour', 12).startOf('hour'));\r\n  return (\r\n    <>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"text-center m-25 w-100 text-uppercase\">Tạo chương trình giảm giá</Modal.Title>\r\n      </Modal.Header>\r\n      <div className=\"d-flex justify-content-around\">\r\n        <div className=\"content-left\">\r\n          <p className=\"text-center info-discount\">Thông tin giảm giá</p>\r\n          <Modal.Body>\r\n            <div className=\"body-add-new\">\r\n              <form>\r\n                <div className=\"mb-3\">\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    name=\"maGiamGia\"\r\n                    label=\"Mã chương trình\"\r\n                    value={maGiamGia}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Tên chương trình\"\r\n                    name=\"tenChuongTrinh\"\r\n                    value={tenChuongTrinh}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Mức Giảm</p>\r\n                  <div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        onChange={(e) => changeHandler(e)}\r\n                        type=\"radio\"\r\n                        name=\"flexRadioDefault\"\r\n                        id=\"form-check-label\"\r\n                        value={'mucGiam'}\r\n                        checked={selected === 'mucGiam'}\r\n                      />\r\n                      <p className=\"form-check-label\">Tiền Mặt</p>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        onChange={(e) => changeHandler(e)}\r\n                        type=\"radio\"\r\n                        name=\"flexRadioDefault\"\r\n                        id=\"form-check-label1\"\r\n                        value={'phanTram'}\r\n                        checked={selected === 'phanTram'}\r\n                      />\r\n                      <p className=\"form-check-label1\">Phần Trăm</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" aria-hidden={selected !== 'phanTram'}>\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Mức giảm %\"\r\n                    name=\"mucGiamPhanTram\"\r\n                    value={mucGiamPhanTram}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\" aria-hidden={selected !== 'mucGiam'}>\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Mức giảm tiền mặt\"\r\n                    name=\"mucGiamTienMat\"\r\n                    value={mucGiamTienMat}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Ngày bắt đầu</p>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={['DateTimePicker']}>\r\n                      <DemoItem>\r\n                        <DateTimePicker\r\n                          defaultValue={todayAtNoon}\r\n                          minDateTime={todayAt9AM}\r\n                          name=\"ngayBatDau\"\r\n                          value={ngayBatDau}\r\n                          onChange={(newDate) => setNgayBatDau(newDate)}\r\n                        />\r\n                      </DemoItem>\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Ngày kết thúc</p>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={['DateTimePicker']}>\r\n                      <DemoItem>\r\n                        <DateTimePicker\r\n                          defaultValue={todayAtNoon}\r\n                          minDateTime={todayAt9AM}\r\n                          name=\"ngayKetThuc\"\r\n                          value={ngayKetThuc}\r\n                          onChange={(newDate) => setNgayKetThuc(newDate)}\r\n                        />\r\n                      </DemoItem>\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </div>\r\n\r\n                {/* <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Ngày kết thúc</label>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DateTimePicker\r\n                      renderInput={(props) => <TextField {...props} />}\r\n                      name='ngayKetThuc'\r\n                      value={ngayKetThuc}\r\n                      onChange={(newDate) => onInputChange(newDate)}\r\n                    />\r\n                  </LocalizationProvider>\r\n                </div> */}\r\n\r\n                <Button onClick={(e) => handleSave(e)} className=\"btn bg-primary text-light d-flex align-items-end\">\r\n                  Thêm\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </div>\r\n\r\n        <div className=\"content-right\">\r\n          <p className=\"text-center info-discount\">Chọn sản phẩm cần giảm giá</p>\r\n          <div>\r\n            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n              <Grid item>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            onClick={handleToggleAll(left)}\r\n                            checked={numberOfChecked(left) === left.length && left.length !== 0}\r\n                            indeterminate={numberOfChecked(left) !== left.length && numberOfChecked(left) !== 0}\r\n                            disabled={left.length === 0}\r\n                            inputProps={{\r\n                              'aria-label': 'all items selected',\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>STT</TableCell>\r\n                        <TableCell>Mã</TableCell>\r\n                        <TableCell>Tên sản phẩm</TableCell>\r\n                        <TableCell>Trạng thái</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {left\r\n                        .slice(leftPage * leftRowsPerPage, leftPage * leftRowsPerPage + leftRowsPerPage)\r\n                        .map((value, index) => (\r\n                          <TableRow key={`left_${value.sanPham.idSp}`} onClick={handleToggle(value, true)}>\r\n                            <TableCell padding=\"checkbox\">\r\n                              <Checkbox value={value.sanPham.idSp} checked={checked.indexOf(value) !== -1} />\r\n                            </TableCell>\r\n                            <TableCell>{index + 1}</TableCell>\r\n                            <TableCell>{value.sanPham.maSp}</TableCell>\r\n                            <TableCell>{value.sanPham.tenSp}</TableCell>\r\n                            <TableCell>\r\n                              {value.sanPham.trangThai === 0 ? (\r\n                                <Chip label=\"Hoạt động\" className=\"bg-success text-light\" />\r\n                              ) : (\r\n                                <Chip label=\"Ngưng hoạt động\" className=\"bg-danger text-light\" />\r\n                              )}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={left.length}\r\n                  rowsPerPage={leftRowsPerPage}\r\n                  page={leftPage}\r\n                  onPageChange={handleLeftPageChange}\r\n                  onRowsPerPageChange={handleLeftRowsPerPageChange}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    sx={{ my: 0.5 }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCheckedRight}\r\n                    disabled={leftChecked.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    &gt;\r\n                  </Button>\r\n                  <Button\r\n                    sx={{ my: 0.5 }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCheckedLeft}\r\n                    disabled={isMoveLeftDisabled}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    &lt;\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell> </TableCell>\r\n                        <TableCell>STT</TableCell>\r\n                        <TableCell>Ảnh sản phẩm</TableCell>\r\n                        <TableCell>Mã sản phẩm</TableCell>\r\n                        <TableCell>Tên sản phẩm</TableCell>\r\n                        <TableCell>Giá sản phẩm</TableCell>\r\n                        <TableCell>Trạng thái</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {right\r\n                        .slice(rightPage * rightRowsPerPage, rightPage * rightRowsPerPage + rightRowsPerPage)\r\n                        .map((value, index) => (\r\n                          <TableRow key={`right_${value.sanPham.idSp}`}>\r\n                            <TableCell padding=\"checkbox\">\r\n                              <Checkbox\r\n                                value={value.sanPham.idSp}\r\n                                checked={chiTietList.indexOf(value) !== -1} // Sử dụng chiTietList thay vì checked\r\n                                onClick={handleToggle(value, false)} // Đặt isLeft là false để xác định là bảng phải\r\n                              // onChange={handleChange}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>{index + 1}</TableCell>\r\n                            <TableCell>\r\n                              <Col xs={6} md={4}>\r\n                                <Image\r\n                                  rounded\r\n                                  style={{ width: '150px', height: 'auto' }}\r\n                                  src={value.url_image}\r\n                                  alt={`Ảnh sản phẩm ${value.maSp}`}\r\n                                />\r\n                              </Col>\r\n                            </TableCell>\r\n                            <TableCell>{value.sanPham.maSp}</TableCell>\r\n                            <TableCell>{value.sanPham.tenSp}</TableCell>\r\n                            <TableCell>\r\n                              {value.sanPham.giaSmall === value.sanPham.giaBig\r\n                                ? formatCurrency(value.sanPham.giaSmall)\r\n                                : `${formatCurrency(value.sanPham.giaSmall)} - ${formatCurrency(value.sanPham.giaBig)}`}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {value.sanPham.trangThai === 0 ? (\r\n                                <Chip label=\"Hoạt động\" className=\"bg-success text-light\" />\r\n                              ) : (\r\n                                <Chip label=\"Ngưng hoạt động\" className=\"bg-danger text-light\" />\r\n                              )}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={right.length}\r\n                  rowsPerPage={rightRowsPerPage}\r\n                  page={rightPage}\r\n                  onPageChange={handleRightPageChange}\r\n                  onRowsPerPageChange={handleRightRowsPerPageChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/* <ModelAddNewGiamGia dataSanPham={chiTietList}/> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelAddNewGiamGia;\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\discounts\\DiscountPage.js",["1012","1013","1014","1015"],[],"import { Helmet } from 'react-helmet-async';\r\nimport { filter } from 'lodash';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n// @mui\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Paper,\r\n  Button,\r\n  Popover,\r\n  Checkbox,\r\n  TableRow,\r\n  MenuItem,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  IconButton,\r\n  TableContainer,\r\n  TablePagination,\r\n  Snackbar,\r\n  Alert,\r\n  Chip,\r\n} from '@mui/material';\r\n// components\r\nimport Iconify from '../../components/iconify';\r\nimport Scrollbar from '../../components/scrollbar';\r\n// sections\r\nimport { UserListHead, UserListToolbar } from '../../sections/@dashboard/user';\r\nimport ModalDeleteDiscount from './Modal-Delete-Discount';\r\n// mock\r\n// import USERLIST from '../_mock/user';\r\n// import { useEffect } from 'react';\r\nimport { getSanPhamDetails } from '../../service/giamGiaService';\r\nimport ModelUpdateGiamGia from './ModalsUpdateGiamGia';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'stt', label: 'STT', alignRight: false },\r\n  { id: 'anh', label: 'Ảnh', alignRight: false },\r\n  { id: 'tenchuongtrinh', label: 'Chương Trình', alignRight: false },\r\n  { id: 'tensanpham', label: 'Tên sản phẩm', alignRight: false },\r\n  { id: 'mucgiam', label: 'Mức giảm', alignRight: false },\r\n  { id: 'thoigian', label: 'Thời gian', alignRight: false },\r\n  { id: 'dongia', label: 'Đơn giá', alignRight: false },\r\n  { id: 'sotienconlai', label: 'Số tiền còn lại', alignRight: false },\r\n  { id: 'trangthai', label: 'Trạng Thái', alignRight: false },\r\n  { id: 'thaotac', label: 'Thao Tác', alignRight: false }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function DiscountPage() {\r\n  // Select list of users\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const [orderBy, setOrderBy] = useState('tenChuongTrinh');\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const [listData, setListData] = useState([]);\r\n\r\n  // Show Data On Tables\r\n  // const [numberPages, setNumberPages] = useState(0);\r\n  const getListData = async () => {\r\n    try {\r\n      const res = await getSanPhamDetails();\r\n      console.log('Check res: ', res);\r\n      setListData(res);\r\n\r\n      // setNumberPages(Math.ceil(res.totalPages));\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  };\r\n  // const [currentPage, setCurrentPage] = useState(0);\r\n  useEffect(() => {\r\n    getListData();\r\n  }, []);\r\n\r\n  // Open and Close menu\r\n  const [object, getObject] = useState([]);\r\n  const handleOpenMenu = (event, row) => {\r\n    console.log('Check event: ', event);\r\n    console.log('Check row: ', row);\r\n    getObject(row);\r\n\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = listData.map((n) => n.idGgct);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n  // Next Page\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setPage(0);\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - listData.length) : 0;\r\n\r\n  const filteredUsers =\r\n    listData && listData ? applySortFilter(listData, getComparator(order, orderBy), filterName) : [];\r\n  const isNotFound = !filteredUsers.length && !!filterName;\r\n\r\n\r\n  // Set status of trangThai\r\n  function mapTrangThaiToStatus(trangThai) {\r\n    return trangThai === 0 ? <Chip\r\n      label=\"Hoạt động\"\r\n      color=\"primary\"\r\n      variant=\"outlined\"\r\n      style={{ color: 'white', backgroundColor: 'green', border: 'none' }}\r\n    /> : trangThai === 10 ? <Chip\r\n      label=\"Dừng hoạt động\"\r\n      color=\"secondary\"\r\n      variant=\"outlined\"\r\n      style={{ color: 'white', backgroundColor: 'red', border: 'none' }}\r\n    /> : <Chip\r\n      label=\"Không xác định\"\r\n      color=\"warning\"\r\n      variant=\"outlined\"\r\n      style={{ color: 'white', backgroundColor: 'red', border: 'none' }}\r\n    />;\r\n  }\r\n  const navigate = useNavigate();\r\n\r\n  // Create a new Detail Direct\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  const [lastGeneratedNumber, setLastGeneratedNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Đọc số lớn nhất từ cơ sở dữ liệu (localStorage) khi ứng dụng khởi động\r\n    const savedNumber = localStorage.getItem('lastGeneratedNumber');\r\n    if (savedNumber) {\r\n      setLastGeneratedNumber(Number(savedNumber));\r\n    }\r\n  }, []);\r\n  const generateNewCode = () => {\r\n    const newNumber = lastGeneratedNumber + 1;\r\n    setLastGeneratedNumber(newNumber);\r\n\r\n    // Lưu số mới vào cơ sở dữ liệu (localStorage)\r\n    localStorage.setItem('lastGeneratedNumber', newNumber.toString());\r\n\r\n    return `HD${newNumber.toString().padStart(5, '0')}`;\r\n  };\r\n\r\n  let getIdHttp;\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  // Handle delete\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [information, setInformation] = useState();\r\n  const handleDelete = () => {\r\n    setInformation(object);\r\n    setOpenDelete(true);\r\n    setOpen(null);\r\n  };\r\n  const handleClose = () => {\r\n    setOpenDelete(false);\r\n    getListData();\r\n  };\r\n\r\n  // Handle edit\r\n  const handleEdit = () => {\r\n    console.log(\"abc\");\r\n    navigate(`/dashboard/discount/update/${object.idGgct}`);\r\n  };\r\n\r\n  function formatCurrency(price) {\r\n    if (!price) return \"0\";\r\n\r\n    const formatter = new Intl.NumberFormat(\"vi-VN\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n\r\n    const dateTime = new Date(dateString);\r\n    const formattedEndDate = format(dateTime, 'HH:mm dd/MM/yyyy');\r\n\r\n    return formattedEndDate;\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Discount | 5F Store </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Giảm giá\r\n          </Typography>\r\n          <Link to={'/dashboard/discount/add'}>\r\n            <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n              Thêm Giảm Giá\r\n            </Button>\r\n          </Link>\r\n        </Stack>\r\n\r\n        <Card>\r\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={listData.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                    const { idGgct, urlImage, tenChuongTrinh, tenSp, mucGiamPhanTram, mucGiamTienMat, ngayBatDau, ngayKetThuc, giaBanMin, giaBanMax, giaThucTeMin, giaThucTeMax, trangThai } = row;\r\n                    const selectedUser = selected.indexOf(idGgct) !== -1;\r\n\r\n                    return (\r\n                      <TableRow hover key={idGgct} tabIndex={-1} role=\"checkbox\" selected={selectedUser}>\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox checked={selectedUser} onChange={(event) => handleClick(event, idGgct)} />\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{index + 1}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <img src={urlImage} alt=\"Mô tả ảnh\" width=\"100\" height=\"100\" />\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{tenChuongTrinh}</TableCell>\r\n                        <TableCell align=\"left\">{tenSp}</TableCell>\r\n                        <TableCell align=\"left\">{mucGiamTienMat === null ? `${mucGiamPhanTram} %` : formatCurrency(mucGiamTienMat)}</TableCell>\r\n                        <TableCell align=\"left\">{`${formatDate(ngayBatDau)} - ${formatDate(ngayKetThuc)}`}</TableCell>\r\n                        <TableCell align=\"left\">{giaBanMin === giaBanMax ? formatCurrency(giaBanMin) : `${formatCurrency(giaBanMin)} - ${formatCurrency(giaBanMax)}`}</TableCell>\r\n                        <TableCell align=\"left\">{giaThucTeMin === giaThucTeMax ? formatCurrency(giaThucTeMin) : `${formatCurrency(giaThucTeMin)} - ${formatCurrency(giaThucTeMax)}`}</TableCell>\r\n                        <TableCell align=\"left\">{mapTrangThaiToStatus(trangThai)}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <IconButton size=\"large\" color=\"inherit\" onClick={(event) => handleOpenMenu(event, row)}>\r\n                            <Iconify icon={'eva:more-vertical-fill'} />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={3} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n\r\n                {isNotFound && (\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                        <Paper\r\n                          sx={{\r\n                            textAlign: 'center',\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h6\" paragraph>\r\n                            Not found\r\n                          </Typography>\r\n\r\n                          <Typography variant=\"body2\">\r\n                            No results found for &nbsp;\r\n                            <strong>&quot;{filterName}&quot;</strong>.\r\n                            <br /> Try checking for typos or using complete words.\r\n                          </Typography>\r\n                        </Paper>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={listData && listData.length ? listData.length : 0}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 140,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem onClick={() => handleEdit()}>\r\n          <Iconify icon={'eva:edit-fill'} sx={{ mr: 2 }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={() => handleDelete()} sx={{ color: 'error.main' }}>\r\n          <Iconify icon={'eva:trash-2-outline'} sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n      {/* Dialog xác nhận xóa */}\r\n      <ModalDeleteDiscount open={openDelete} handleClose={handleClose} information={information} />\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\SanPham\\SanPhamMain.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\SanPham\\ModelUpdate.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\discounts\\ModalsUpdateGiamGia.js",["1016","1017","1018","1019","1020","1021","1022","1023"],[],"import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { DateTimePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport dayjs from 'dayjs';\r\nimport { DemoContainer, DemoItem } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { Alert, Button, Checkbox, Chip, Grid, Paper, Snackbar, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TextField } from '@mui/material';\r\nimport { Col, Image, Table } from 'react-bootstrap';\r\nimport { detail, getAllSanPham, getDetailSanPhamById, update } from \"../../service/giamGiaService\";\r\nimport \"../../scss/GiamGiaClient.scss\";\r\nimport \"../../scss/GiamGiaAdd.scss\";\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nconst ModelUpdateGiamGia = (props) => {\r\n\r\n  console.log(\"Data: \", props.data);\r\n\r\n  const { id } = useParams();\r\n\r\n  // const { show, handleClose, isDataGiamGia, getGiamGia } = props;\r\n  // console.log(dataSanPham)\r\n  const navigate = useNavigate();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([]);\r\n  const [right, setRight] = React.useState([]);\r\n  const [leftPage, setLeftPage] = React.useState(0);\r\n  const [leftRowsPerPage, setLeftRowsPerPage] = React.useState(5);\r\n  const [rightPage, setRightPage] = React.useState(0);\r\n  const [rightRowsPerPage, setRightRowsPerPage] = React.useState(5);\r\n  const [chiTietList, setchiTietList] = React.useState([]);\r\n  const [image, setImage] = useState([]);\r\n  const [images, setImages] = useState({});\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n\r\n\r\n  const [giamGia, setGiamGia] = useState({\r\n    maGiamGia: '',\r\n    tenChuongTrinh: '',\r\n    ngayBatDau: '',\r\n    ngayKetThuc: '',\r\n    mucGiamPhanTram: '',\r\n    mucGiamTienMat: '',\r\n    trangThai: 0,\r\n  });\r\n\r\n  const [selected, setSelected] = useState(\"\");\r\n  const getAllSp = async () => {\r\n    try {\r\n      const res = await getAllSanPham();\r\n      const resDetail = await detail(id);\r\n      console.log(\"resDetail: \", resDetail.data.idSp.idSp)\r\n      const resDetailRight = await getDetailSanPhamById(resDetail.data.idSp.idSp);\r\n      console.log(\"resDetailRight: \", resDetailRight)\r\n  \r\n      // Check if resDetailRight is an object\r\n      if (typeof resDetailRight === 'object' && !Array.isArray(resDetailRight)) {\r\n        // Handle this situation based on your requirements, e.g., convert to an array.\r\n        const resDetailRightArray = [resDetailRight];\r\n        if (resDetail.data.idGiamGia.mucGiamPhanTram !== null) {\r\n          setSelected(\"phanTram\");\r\n        } else if (resDetail.data.idGiamGia.mucGiamTienMat !== null) {\r\n          setSelected(\"mucGiam\");\r\n        }\r\n        setGiamGia(resDetail.data.idGiamGia);\r\n        setLeft(res);\r\n        setRight(resDetailRightArray); // Set the right state with the data from resDetailRight\r\n      } else {\r\n        // If it's already an array, proceed as before\r\n        if (resDetail.data.idGiamGia.mucGiamPhanTram !== null) {\r\n          setSelected(\"phanTram\");\r\n        } else if (resDetail.data.idGiamGia.mucGiamTienMat !== null) {\r\n          setSelected(\"mucGiam\");\r\n        }\r\n        setGiamGia(resDetail.data.idGiamGia);\r\n        setLeft(res);\r\n        setRight(resDetailRight); // Set the right state with the data from resDetailRight\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading images:', error);\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n\r\n  console.log(\"Img: \", image)\r\n\r\n  React.useEffect(() => {\r\n    getAllSp();\r\n  }, [])\r\n\r\n  const leftChecked = intersection(checked, left);\r\n\r\n  const handleToggle = (value, isLeft) => () => {\r\n    if (isLeft) {\r\n      const currentIndex = checked.indexOf(value);\r\n      const newChecked = [...checked];\r\n\r\n      if (currentIndex === -1) {\r\n        newChecked.push(value);\r\n      } else {\r\n        newChecked.splice(currentIndex, 1);\r\n      }\r\n\r\n      setChecked(newChecked);\r\n    } else {\r\n      const currentIndex = chiTietList.indexOf(value);\r\n      const newchiTietList = [...chiTietList];\r\n\r\n      if (currentIndex === -1) {\r\n        newchiTietList.push(value);\r\n      } else {\r\n        newchiTietList.splice(currentIndex, 1);\r\n      }\r\n      setchiTietList(newchiTietList);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    const newRight = right.concat(leftChecked);\r\n    const newLeft = not(left, leftChecked);\r\n\r\n    const sortedRight = leftChecked.concat(newRight.filter((value) => leftChecked.indexOf(value) === -1));\r\n\r\n    setRight(sortedRight);\r\n    setLeft(newLeft);\r\n    setChecked(not(checked, leftChecked));\r\n\r\n    setchiTietList([...chiTietList, ...leftChecked]);\r\n    console.log([...chiTietList, ...leftChecked])\r\n  };\r\n\r\n\r\n  const handleCheckedLeft = () => {\r\n    const newLeft = left.concat(chiTietList); // Sửa từ rightChecked sang chiTietList\r\n    const newRight = not(right, chiTietList); // Sửa từ rightChecked sang chiTietList\r\n\r\n    // Move the selected items to the top of the newLeft array\r\n    const sortedLeft = chiTietList.concat(newLeft.filter((value) => chiTietList.indexOf(value) === -1)); // Sửa từ rightChecked sang chiTietList\r\n\r\n    setLeft(sortedLeft);\r\n    setRight(newRight);\r\n    setchiTietList([]); // Xóa các phần tử đã chọn khỏi chiTietList\r\n    setChecked([]); // Xóa các phần tử đã chọn\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleLeftPageChange = (event, newPage) => {\r\n    setLeftPage(newPage);\r\n  };\r\n\r\n  const handleLeftRowsPerPageChange = (event) => {\r\n    setLeftRowsPerPage(parseInt(event.target.value, 10));\r\n    setLeftPage(0);\r\n  };\r\n\r\n  const handleRightPageChange = (event, newPage) => {\r\n    setRightPage(newPage);\r\n  };\r\n\r\n  const handleRightRowsPerPageChange = (event) => {\r\n    setRightRowsPerPage(parseInt(event.target.value, 10));\r\n    setRightPage(0);\r\n  };\r\n\r\n  const isMoveLeftDisabled = chiTietList.length === 0;\r\n\r\n  function formatCurrency(price) {\r\n    if (!price) return \"0\";\r\n\r\n    const formatter = new Intl.NumberFormat(\"vi-VN\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  console.log(chiTietList)\r\n\r\n  const { maGiamGia, tenChuongTrinh, ngayBatDau, ngayKetThuc, mucGiamPhanTram, mucGiamTienMat } = giamGia;\r\n\r\n  const onChangeNbd = (newDate) => {\r\n    // Lấy ngày giờ mới từ newDate\r\n    const newDatetime = newDate;\r\n    setGiamGia({\r\n      ...giamGia,\r\n      ngayBatDau: newDatetime\r\n    })\r\n  }\r\n\r\n  const onChangeNkt = (newDate) => {\r\n    // Lấy ngày giờ mới từ newDate\r\n    const newDatetime = newDate;\r\n    setGiamGia({\r\n      ...giamGia,\r\n      ngayKetThuc: newDatetime\r\n    })\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    console.log(\"e: \", e);\r\n    setGiamGia({ ...giamGia, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  console.log(giamGia);\r\n\r\n  const changeHandler = e => {\r\n    setSelected(e.target.value);\r\n    // Clear the values based on the selected radio button\r\n    if (e.target.value === 'phanTram') {\r\n      setGiamGia({\r\n        ...giamGia,\r\n        mucGiamTienMat: null\r\n      });\r\n    } else if (e.target.value === 'mucGiam') {\r\n      setGiamGia({\r\n        ...giamGia,\r\n        mucGiamPhanTram: null\r\n      });\r\n    }\r\n  };\r\n  console.log(selected);\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    if (!maGiamGia.trim() || !tenChuongTrinh.trim() || !ngayBatDau || !ngayKetThuc) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập đầy đủ thông tin chương trình giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!selected) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng chọn loại giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selected === 'phanTram' && (!mucGiamPhanTram || Number.isNaN(mucGiamPhanTram) || mucGiamPhanTram < 1 || mucGiamPhanTram > 50)) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập mức giảm phần trăm hợp lệ (1-50)!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selected === 'mucGiam' && (!mucGiamTienMat || Number.isNaN(mucGiamTienMat))) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập mức giảm tiền mặt hợp lệ!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (chiTietList.length === 0) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng chọn ít nhất một sản phẩm để áp dụng giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const checkDateValidity = () => {\r\n      const startDate = dayjs(ngayBatDau);\r\n      const endDate = dayjs(ngayKetThuc);\r\n\r\n      return endDate.isAfter(startDate);\r\n    }\r\n\r\n    if (!checkDateValidity()) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Ngày kết thúc phải sau ngày bắt đầu!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // try {\r\n    const selectedDate = dayjs(ngayBatDau);\r\n\r\n    // Format ngày bắt đầu\r\n    const formattedStartDate = selectedDate.format('YYYY-MM-DDTHH:mm:ss');\r\n\r\n    const selectedDateEnd = dayjs(ngayKetThuc);\r\n\r\n    // Format ngày kết thúc \r\n    const formattedEndDate = selectedDateEnd.format('YYYY-MM-DDTHH:mm:ss');\r\n\r\n    const giaGiaAa = {\r\n      maGiamGia: giamGia.maGiamGia,\r\n      tenChuongTrinh: giamGia.tenChuongTrinh,\r\n      ngayBatDau: formattedStartDate,\r\n      ngayKetThuc: formattedEndDate,\r\n      mucGiamPhanTram: giamGia.mucGiamPhanTram,\r\n      mucGiamTienMat: giamGia.mucGiamTienMat,\r\n      trangThai: 0,\r\n    }\r\n\r\n    console.log(\"giaGiaAa: \", giaGiaAa)\r\n\r\n\r\n    // Trích xuất danh sách idSp từ chiTietList\r\n    const idSpList = chiTietList.map(item => item.sanPham.idSp);\r\n\r\n    // Cập nhật state listIdSp\r\n    const giamGiaChiTietOk = {\r\n      giamGia: giaGiaAa,\r\n      idSp: idSpList\r\n    }\r\n    console.log(\"giamGiaChiTietOk\", giamGiaChiTietOk);\r\n\r\n    const response = await update(giamGiaChiTietOk, id);\r\n\r\n    if (response.status === 'Ok!') {\r\n      navigate('/dashboard/discounts');\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Cập nhật thành công!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Cập nhật không thành công!',\r\n      });\r\n    }\r\n    // } catch (error) {\r\n    //   setAlertContent({\r\n    //     type: 'error',\r\n    //     message: 'Đã xảy ra lỗi khi cập nhật giảm giá!',\r\n    //   });\r\n    // }\r\n\r\n  };\r\n  // if (!giamGiaData) {\r\n  //   return <div>Loading...</div>;\r\n  // }\r\n  const todayAtNoon = dayjs().set('hour', 12).startOf('hour');\r\n  const todayAt9AM = dayjs().set('hour', 9).startOf('hour');\r\n\r\n  const ngayBatDauFromApi = giamGia.ngayBatDau;\r\n  const parsedStartDate = dayjs(ngayBatDauFromApi);\r\n\r\n  // const [ngayBatDau, setNgayBatDau] = useState(giamGia.ngayBatDau);\r\n  // console.log(ngayBatDau);\r\n  // const [ngayKetThuc, setNgayKetThuc] = useState();\r\n  return (\r\n    <>\r\n      <Modal.Header>\r\n        <Modal.Title className='text-center m-25 w-100 text-uppercase'>Chỉnh sửa chương trình giảm giá</Modal.Title>\r\n      </Modal.Header>\r\n      <div className=\"d-flex justify-content-around\">\r\n        <div className=\"content-left\">\r\n          <p className='text-center info-discount'>Thông tin giảm giá</p>\r\n          <Modal.Body>\r\n            <div className=\"body-add-new\">\r\n              <form>\r\n                <div className=\"mb-3\">\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    name='maGiamGia'\r\n                    label=\"Mã chương trình\"\r\n                    value={maGiamGia}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Tên chương trình\"\r\n                    name='tenChuongTrinh'\r\n                    value={tenChuongTrinh}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Mức Giảm</p>\r\n                  <div>\r\n                    <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" onChange={(e) => changeHandler(e)} type=\"radio\" name=\"flexRadioDefault\" id=\"form-check-label\" value={\"mucGiam\"} checked={selected === \"mucGiam\"} />\r\n                      <p className=\"form-check-label\">\r\n                        Tiền Mặt\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" onChange={(e) => changeHandler(e)} type=\"radio\" name=\"flexRadioDefault\" id=\"form-check-label1\" value={\"phanTram\"} checked={selected === \"phanTram\"} />\r\n                      <p className=\"form-check-label1\">\r\n                        Phần Trăm\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" aria-hidden={selected !== \"phanTram\"}>\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Mức giảm %\"\r\n                    name='mucGiamPhanTram'\r\n                    value={mucGiamPhanTram}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\" aria-hidden={selected !== \"mucGiam\"}>\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Mức giảm tiền mặt\"\r\n                    name='mucGiamTienMat'\r\n                    value={mucGiamTienMat}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Ngày bắt đầu</p>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={['DateTimePicker']}>\r\n                      <DemoItem>\r\n                        <DateTimePicker\r\n                          defaultValue={ngayBatDau}\r\n                          name='ngayBatDau'\r\n                          value={dayjs(ngayBatDau)}\r\n                          onChange={(e) => onChangeNbd(e)}\r\n                        />\r\n                      </DemoItem>\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Ngày kết thúc</p>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={['DateTimePicker']}>\r\n                      <DemoItem>\r\n                        <DateTimePicker\r\n                          minDateTime={todayAt9AM}\r\n                          name='ngayKetThuc'\r\n                          value={dayjs(ngayKetThuc)}\r\n                          onChange={(e) => onChangeNkt(e)}\r\n                        />\r\n                      </DemoItem>\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </div>\r\n\r\n                {/* <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Ngày kết thúc</label>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DateTimePicker\r\n                      renderInput={(props) => <TextField {...props} />}\r\n                      name='ngayKetThuc'\r\n                      value={ngayKetThuc}\r\n                      onChange={(newDate) => onInputChange(newDate)}\r\n                    />\r\n                  </LocalizationProvider>\r\n                </div> */}\r\n\r\n                <button onClick={(e) => handleSave(e)} className=\"btn bg-primary text-light d-flex align-items-end\">Thêm</button>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </div>\r\n\r\n        <div className=\"content-right\">\r\n          <p className='text-center info-discount'>Chọn sản phẩm cần giảm giá</p>\r\n          <div>\r\n            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n              <Grid item>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            onClick={handleToggleAll(left)}\r\n                            checked={numberOfChecked(left) === left.length && left.length !== 0}\r\n                            indeterminate={numberOfChecked(left) !== left.length && numberOfChecked(left) !== 0}\r\n                            disabled={left.length === 0}\r\n                            inputProps={{\r\n                              'aria-label': 'all items selected',\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>STT</TableCell>\r\n                        <TableCell>Mã</TableCell>\r\n                        <TableCell>Tên sản phẩm</TableCell>\r\n                        <TableCell>Trạng thái</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {left.slice(leftPage * leftRowsPerPage, leftPage * leftRowsPerPage + leftRowsPerPage).map((value, index) =>\r\n                      (\r\n                        <TableRow key={`left_${value.sanPham.idSp}`} onClick={handleToggle(value, true)}>\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              value={value.sanPham.idSp}\r\n                              checked={checked.indexOf(value) !== -1}\r\n\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{index + 1}</TableCell>\r\n                          <TableCell>{value.sanPham.maSp}</TableCell>\r\n                          <TableCell>{value.sanPham.tenSp}</TableCell>\r\n                          <TableCell>{value.sanPham.trangThai === 0 || value.sanPham.trangThai === 1 ? <Chip label=\"Hoạt động\" className=\"bg-success text-light\" /> : <Chip label=\"Ngưng hoạt động\" className=\"bg-danger text-light\" />}</TableCell>\r\n                        </TableRow>\r\n                      ))} \r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={left.length}\r\n                  rowsPerPage={leftRowsPerPage}\r\n                  page={leftPage}\r\n                  onPageChange={handleLeftPageChange}\r\n                  onRowsPerPageChange={handleLeftRowsPerPageChange}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    sx={{ my: 0.5 }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCheckedRight}\r\n                    disabled={leftChecked.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    &gt;\r\n                  </Button>\r\n                  <Button\r\n                    sx={{ my: 0.5 }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCheckedLeft}\r\n                    disabled={isMoveLeftDisabled}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    &lt;\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell> </TableCell>\r\n                        <TableCell>STT</TableCell>\r\n                        <TableCell>Ảnh sản phẩm</TableCell>\r\n                        <TableCell>Mã sản phẩm</TableCell>\r\n                        <TableCell>Tên sản phẩm</TableCell>\r\n                        <TableCell>Giá sản phẩm</TableCell>\r\n                        <TableCell>Trạng thái</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {right.slice(rightPage * rightRowsPerPage, rightPage * rightRowsPerPage + rightRowsPerPage).map((value, index) => (\r\n                        <TableRow key={`right_${value.sanPham.idSp}`}>\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              value={value.sanPham.idSp}\r\n                              checked={chiTietList.indexOf(value) !== -1} // Sử dụng chiTietList thay vì checked\r\n                              onClick={handleToggle(value, false)} // Đặt isLeft là false để xác định là bảng phải\r\n                            // onChange={handleChange}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{index + 1}</TableCell>\r\n                          <TableCell>\r\n                            <Col xs={6} md={4}>\r\n                              <Image\r\n                                rounded\r\n                                style={{ width: \"150px\", height: \"auto\" }}\r\n                                src={value.url_image}\r\n                                alt={`Ảnh sản phẩm ${value.maSp}`}\r\n                              />\r\n                            </Col>\r\n                          </TableCell>\r\n                          <TableCell>{value.sanPham.maSp}</TableCell>\r\n                          <TableCell>{value.sanPham.tenSp}</TableCell>\r\n                          <TableCell>{value.sanPham.giaSmall === value.sanPham.giaBig ? formatCurrency(value.sanPham.giaSmall) : `${formatCurrency(value.sanPham.giaSmall)} - ${formatCurrency(value.sanPham.giaBig)}`}</TableCell>\r\n                          <TableCell>{value.sanPham.trangThai === 0 || value.sanPham.trangThai === 1 ? <Chip label=\"Hoạt động\" className=\"bg-success text-light\" /> : <Chip label=\"Ngưng hoạt động\" className=\"bg-danger text-light\" />}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={right.length}\r\n                  rowsPerPage={rightRowsPerPage}\r\n                  page={rightPage}\r\n                  onPageChange={handleRightPageChange}\r\n                  onRowsPerPageChange={handleRightRowsPerPageChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/* <ModelAddNewGiamGia dataSanPham={chiTietList}/> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelUpdateGiamGia;","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\AddClients.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\UpdateClients.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Staff\\Modal-Update-Staff.js",["1024"],[],"import { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Alert,\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  InputLabel,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  Snackbar,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { detailTaiKhoan, postUpdateTaiKhoan, } from \"../../service/taiKhoanNhanVienService\";\r\nimport { chucVu3 ,detailTen} from \"../../service/chucVuService\";\r\n\r\n\r\nconst UpdateTkNV = (props) => {\r\n  const param = useParams();\r\n  const idNV = param.id;\r\n  const [Data, setData] = useState([]);\r\n  const [chucVu, setChucVu] = useState(\"\");\r\n  const [ho, setHo] = useState(\"\");\r\n  const [ten, setTen] = useState(\"\");\r\n  const [sdt, setSdt] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [matKhau, setMatKhau] = useState(\"\");\r\n  const [soCanCuoc, setSoCanCuoc] = useState(\"\");\r\n  const [trangThai, setTrangThai] = useState(\"0\");\r\n  const [myChucVu, setMyChucVu] = useState([]);\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const getAllChucVu = async () => {\r\n    const rs = await chucVu3(0);\r\n    setMyChucVu(rs);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllChucVu();\r\n  }, []);\r\n\r\n  // chuyen trang\r\n  const navigate = useNavigate();\r\n  const getListData = useCallback(async () => {\r\n    try {\r\n      const res = await detailTaiKhoan(idNV);\r\n      setData(res);\r\n      setChucVu(res.idChucVu.tenCv);\r\n      setHo(res.ho);\r\n      setTen(res.ten);\r\n      setEmail(res.email);\r\n      setSdt(res.sdt);\r\n      setMatKhau(res.matKhau);\r\n      setSoCanCuoc(res.soCanCuoc);\r\n      setTrangThai(res.trangThai);\r\n      console.log(\"check res: \", res);\r\n    } catch (error) {\r\n      console.log(\"error: \", error);\r\n    }\r\n  }, [idNV]);\r\n  useEffect(() => {\r\n    getListData();\r\n  }, [getListData]);\r\n\r\n  const handleSave = async () => {\r\n    if (\r\n      ho === \"\" ||\r\n      ten === \"\" ||\r\n      email === \"\" ||\r\n      sdt === \"\" ||\r\n      matKhau === \"\" ||\r\n      soCanCuoc === \"\"\r\n    ) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Một số trường đang trống!',\r\n      });\r\n    } else {\r\n      const tenCv = await detailTen({ tenCv: chucVu });\r\n      const res = await postUpdateTaiKhoan(\r\n        Data.idTaiKhoan,\r\n        Data.maTaiKhoan,\r\n        tenCv,\r\n        ho,\r\n        ten,\r\n        sdt,\r\n        email,\r\n        matKhau,\r\n        soCanCuoc,\r\n        trangThai\r\n      );\r\n      console.log(\"Check res: \", res);\r\n      if (res && res.idTaiKhoan) {\r\n        const successMessage = {\r\n          type: 'success',\r\n          message: 'Cập nhập Nhân Viên Thành Công!',\r\n        };\r\n        localStorage.setItem('successMessage', JSON.stringify(successMessage));\r\n        navigate('/dashboard/staff');\r\n      } else {\r\n        setAlertContent({\r\n          type: 'error',\r\n          message: 'Cập Nhập tài khoản thất bại!',\r\n        });\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"row row-order-management\">\r\n        <div\r\n          className=\"title\"\r\n          style={{ textAlign: \"center\", margin: \"20px 0\" }}\r\n        >\r\n          <h4>Cập Nhập Tài Khoản</h4>\r\n          <h5>Mã tài khoản: {Data.maTaiKhoan}</h5>\r\n        </div>\r\n        <Box\r\n          component=\"form\"\r\n          sx={{\r\n            \"& .MuiTextField-root\": { m: 1, width: \"120\" },\r\n          }}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          alignItems={\"center\"}\r\n        >\r\n          <FormControl fullWidth margin=\"dense\">\r\n            <InputLabel>Chức Vụ</InputLabel>\r\n            <Select\r\n              value={chucVu}\r\n              onChange={(event) => setChucVu(event.target.value)}\r\n            >\r\n              {myChucVu\r\n                .filter((item) => item.idCv === 1 || item.idCv === 8) // Lọc theo idCv\r\n                .map((item, index) => (\r\n                  <MenuItem\r\n                    key={index}\r\n                    value={item.tenCv}\r\n                  >\r\n                    {item.tenCv}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            fullWidth\r\n            label=\"Họ\"\r\n            id=\"fullWidth\"\r\n            value={ho}\r\n            onChange={(event) => setHo(event.target.value)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Tên\"\r\n            id=\"fullWidth\"\r\n            value={ten}\r\n            onChange={(event) => setTen(event.target.value)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Email\"\r\n            id=\"fullWidth\"\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Số Điện Thoại\"\r\n            id=\"fullWidth\"\r\n            value={sdt}\r\n            onChange={(event) => setSdt(event.target.value)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            label=\"Mật Khẩu\"\r\n            // value={matKhau}\r\n            onChange={(event) => setMatKhau(event.target.value)}\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            id=\"outlined-basic\"\r\n            label=\"Số Căn Cước\"\r\n            value={soCanCuoc}\r\n            onChange={(event) => setSoCanCuoc(event.target.value)}\r\n          />\r\n          <FormControl style={{ marginLeft: \"10px\" }}>\r\n            <FormLabel id=\"demo-radio-buttons-group-label\">\r\n              Trạng thái\r\n            </FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n              name=\"row-radio-buttons-group\"\r\n              value={trangThai}\r\n              onChange={(event) => setTrangThai(event.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"0\"\r\n                control={<Radio />}\r\n                label=\"Đang Hoạt Động\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"10\"\r\n                control={<Radio />}\r\n                label=\"Dừng Hoạt Động\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        <div style={{ textAlign: \"right\", margin: \"20px 0\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => handleSave()}\r\n          >\r\n            Cập Nhập\r\n          </Button>\r\n        </div>\r\n        {alertContent && (\r\n          <Snackbar\r\n            open\r\n            autoHideDuration={3000}\r\n            onClose={handleSnackbarClose}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          >\r\n            <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n              {alertContent.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\nexport default UpdateTkNV;\r\n\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\ClientsPage.js",["1025","1026","1027"],[],"import {useEffect, useState} from \"react\";\r\nimport {Helmet} from \"react-helmet-async\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {\r\n    DataGrid,\r\n    GridActionsCellItem,\r\n    GridToolbarColumnsButton,\r\n    GridToolbarContainer,\r\n    GridToolbarDensitySelector,\r\n    GridToolbarExport,\r\n    GridToolbarFilterButton\r\n} from \"@mui/x-data-grid\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    IconButton,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    Stack,\r\n    TextField,\r\n    Typography\r\n} from \"@mui/material\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport AddLocationAltIcon from \"@mui/icons-material/AddLocationAlt\";\r\n\r\n\r\nimport {deleteTaiKhoanKH, fetchAllTKKH} from \"../../service/taiKhoanKhachHangSevice\";\r\nimport Iconify from \"../../components/iconify\";\r\nimport {useAlert} from \"../../layouts/dashboard/AlertContext\";\r\n\r\n\r\nconst ClientPage = () => {\r\n    const [listData, setListData] = useState([]);\r\n\r\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n    const [selectedStatus, setSelectedStatus] = useState(\"Tất cả\");\r\n    const [originalListData, setOriginalListData] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const {showAlert} = useAlert();\r\n\r\n    const getListData = async (page, query) => {\r\n        try {\r\n            const res = await fetchAllTKKH(page, query);\r\n            setListData(res);\r\n            setOriginalListData(res);\r\n            setListData(res);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getListData(0);\r\n    }, []);\r\n\r\n\r\n    const columns = [\r\n        {field: \"index\", headerName: \"Index\", width: 50},\r\n        {field: \"maTaiKhoan\", headerName: \"Mã Tài Khoản\", width: 120},\r\n        {field: \"tenKh\", headerName: \"Tên Khách Hàng\", width: 180},\r\n        {field: \"sdtKh\", headerName: \"Số Điện Thoại\", width: 120,},\r\n        {field: \"email\", headerName: \"Email\", width: 200,},\r\n        {\r\n            field: \"trangThai\",\r\n            headerName: \"Trạng Thái\",\r\n            width: 200,\r\n            renderCell: (params) => {\r\n                const {value: trangThai} = params;\r\n                let badgeVariant;\r\n                let statusText;\r\n\r\n                switch (trangThai) {\r\n                    case 1:\r\n                        badgeVariant = \"primary\";\r\n                        statusText = \"Đã kích hoạt\";\r\n                        break;\r\n                    case 4:\r\n                        badgeVariant = \"info\";\r\n                        statusText = \"Đã Ngưng hoạt động\";\r\n                        break;\r\n                    default:\r\n                        badgeVariant = \"light\";\r\n                        statusText = \"Chưa Kích Hoạt\";\r\n                        break;\r\n                }\r\n\r\n                return (\r\n                    <Badge bg={badgeVariant} text=\"dark\">\r\n                        {statusText}\r\n                    </Badge>\r\n                );\r\n            },\r\n\r\n        },\r\n\r\n        {\r\n            field: \"actions\",\r\n            headerName: \"Hành Động\",\r\n            width: 100,\r\n            renderCell: (params) => {\r\n                const {row} = params;\r\n                return [\r\n                    <GridActionsCellItem\r\n                        color=\"info\"\r\n                        onClick={() => handlClickRow(row)}\r\n                        icon={<EditIcon/>}\r\n                    />,\r\n                    <GridActionsCellItem\r\n                        color=\"inherit\"\r\n                        icon={<AddLocationAltIcon/>}\r\n                        onClick={() => handAddDiaChi(row)}\r\n                    />,\r\n                    <GridActionsCellItem\r\n                        color=\"error\"\r\n                        icon={<DeleteIcon/>}\r\n                        onClick={() => handleClickOpenDelete(row)}\r\n                    />\r\n                ];\r\n            },\r\n        },\r\n    ];\r\n    // Xử lý dữ liệu của bảng vào mảng rows\r\n    const rows = listData\r\n        .filter((item) =>\r\n            Object.values(item).some((value) =>\r\n                String(value).toLowerCase().includes(searchKeyword.toLowerCase())\r\n            )\r\n        )\r\n        .map((item, index) => ({\r\n            idTaiKhoan: item.idTaiKhoan,\r\n            id: item.idTaiKhoan,\r\n            index: index + 1,\r\n            maTaiKhoan: item.maTaiKhoan,\r\n            tenKh: `${item.ho} ${item.ten}`,\r\n            sdtKh: item.sdt,\r\n            email: item.email,\r\n            trangThai: item.trangThai,\r\n        }));\r\n\r\n\r\n    const handlePageClick = (page) => {\r\n        getListData(page);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const filteredData =\r\n            selectedStatus === \"Tất cả\"\r\n                ? originalListData // Sử dụng danh sách dữ liệu gốc khi chọn \"All\"\r\n                : originalListData.filter(\r\n                    (item) =>\r\n                        item.trangThai === parseInt(selectedStatus, 10)\r\n                );\r\n        setListData(filteredData);\r\n    }, [selectedStatus, originalListData]);\r\n\r\n\r\n    const handAdd = () => {\r\n        showAlert('success', 'Chuyển trang thêm Thành Công');\r\n        navigate(\"/dashboard/clients/add\");\r\n\r\n    };\r\n    const handAddDiaChi = (item) => {\r\n        showAlert('success', 'Chuyển trang địa chỉ Thành Công');\r\n        navigate(`/dashboard/address/${item.maTaiKhoan}`);\r\n    };\r\n\r\n    const handlClickRow = (item) => {\r\n        showAlert('success', 'Chuyển trang update Thành Công');\r\n        navigate(`/dashboard/clients/detail/${item.idTaiKhoan}`);\r\n\r\n    };\r\n\r\n\r\n    const handleDelete = async (item) => {\r\n        const res = await deleteTaiKhoanKH(item.id);\r\n        console.log(\"Check res: \", res);\r\n        if (res) {\r\n            showAlert('success', 'Xóa Thành Công');\r\n            handleClose();\r\n            handlePageClick(0);\r\n        } else {\r\n            showAlert('warning', 'Xóa Thất Bại');\r\n            handleClose();\r\n        }\r\n    };\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [idDelete, setIdDelete] = useState(\"\");\r\n\r\n    const handleClickOpenDelete = (id) => {\r\n        setOpen(true);\r\n        setIdDelete(id);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function CustomToolbar() {\r\n        return (\r\n            <GridToolbarContainer>\r\n                <GridToolbarFilterButton/>\r\n                <GridToolbarColumnsButton/>\r\n                <GridToolbarDensitySelector/>\r\n                <GridToolbarExport\r\n                    csvOptions={{\r\n                        fileName: 'Client',\r\n                        utf8WithBom: true,\r\n                    }}\r\n                />\r\n\r\n                <FormControl variant=\"standard\" sx={{m: 1, minWidth: 120}}>\r\n                    <InputLabel id=\"status-select\">Trạng Thái:</InputLabel>\r\n                    <Select\r\n                        labelId=\"status-select\"\r\n                        id=\"status-select\"\r\n                        value={selectedStatus}\r\n                        label=\"Trạng Thái\"\r\n                        onChange={(e) => setSelectedStatus(e.target.value)}\r\n                    >\r\n                        <MenuItem value={\"Tất cả\"}>Tất Cả</MenuItem>\r\n                        <MenuItem value={0}>Chưa Kích Hoạt</MenuItem>\r\n                        <MenuItem value={1}>Đã Kích Hoạt</MenuItem>\r\n                        <MenuItem value={2}>Ngưng Hoạt Động</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n\r\n            </GridToolbarContainer>\r\n        );\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title> Client || 5F Store </title>\r\n            </Helmet>\r\n            <Container>\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        Tài Khoản Khách Hàng\r\n                    </Typography>\r\n                    <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\"/>} onClick={() => handAdd()}>\r\n                        Tài Khoản Mới\r\n                    </Button>\r\n                </Stack>\r\n\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    sx={{ml: 1, flex: 1}}\r\n                    placeholder=\"Tìm Kiếm\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <IconButton type=\"button\" sx={{p: '10px'}} aria-label=\"search\">\r\n                                <SearchIcon/>\r\n                            </IconButton>\r\n                        ),\r\n                    }}\r\n                    onChange={(e) => setSearchKeyword(e.target.value)}\r\n                />\r\n\r\n\r\n                <DataGrid\r\n                    rows={rows}\r\n                    columns={columns}\r\n                    initialState={{\r\n                        pagination: {\r\n                            paginationModel: {page: 0, pageSize: 5},\r\n                        },\r\n                    }}\r\n                    slots={{toolbar: CustomToolbar}}\r\n                    getRowSpacing={(params) => ({\r\n                        top: params.isFirstVisible ? 0 : 5,\r\n                        bottom: params.isLastVisible ? 0 : 5,\r\n                    })}\r\n                    pageSizeOptions={[5, 10, 15]}\r\n                />\r\n\r\n            </Container>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{\"Xác nhận xóa?\"}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        Bạn có chắc chắn muốn xóa Tài Khoản này không?\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Hủy</Button>\r\n                    <Button onClick={() => handleDelete(idDelete)} autoFocus>\r\n                        Xóa\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClientPage;\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Staff\\Modal-Add-Staff.js",["1028","1029","1030"],[],"import React, { useEffect, useState } from 'react';\r\nimport QrReader from 'react-qr-scanner';\r\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\r\nimport { Box, Button, TextField, FormControl, InputLabel, Select, MenuItem, Snackbar, Alert } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { chucVu } from '../../service/chucVuService';\r\nimport { postAddTaiKhoan } from '../../service/taiKhoanNhanVienService';\r\n\r\nconst AddTKNV = () => {\r\n  const [maTaiKhoan, setMaTaiKhoan] = useState(null);\r\n  const [ho, setHo] = useState('');\r\n  const [ten, setTen] = useState('');\r\n  const [chucVuId, setChucVuId] = useState('');\r\n  const [sdt, setSdt] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [soCanCuoc, setSoCanCuoc] = useState('');\r\n  const [matKhau, setMatKhau] = useState('');\r\n  const [trangThai, setTrangThai] = useState(0);\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  const [scanning, setScanning] = useState(false);\r\n  const [result, setResult] = useState('No result');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!chucVuId || !ho || !ten || !email || !sdt || !soCanCuoc || !matKhau) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập đầy đủ thông tin nhân viên!',\r\n      });\r\n    } else {\r\n      const res = await postAddTaiKhoan(maTaiKhoan, chucVuId, ho, ten, sdt, email, soCanCuoc, matKhau, trangThai);\r\n      if (res && res.idTaiKhoan) {\r\n        const successMessage = {\r\n          type: 'success',\r\n          message: 'Thêm Nhân Viên mới Thành Công!',\r\n        };\r\n        localStorage.setItem('successMessage', JSON.stringify(successMessage));\r\n        navigate('/dashboard/staff');\r\n      } else {\r\n        setAlertContent({\r\n          type: 'error',\r\n          message: 'Thêm Nhân Viên thất bại!',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const [myChucVu, setMyChucVu] = useState([]);\r\n\r\n  const getAllChucVu = async () => {\r\n    const rs = await chucVu(0);\r\n    setMyChucVu(rs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllChucVu();\r\n  }, []);\r\n\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      setResult(data);\r\n      try {\r\n        const qrData = data.text;\r\n        const dataParts = qrData.split('|');\r\n        const cleanedData = dataParts.map((part) => part.replace(/\\|/g, ''));\r\n        if (cleanedData.length >= 2) {\r\n          const hoTenParts = cleanedData[2].split(' ');\r\n          const ho = hoTenParts[0] || '';\r\n          const ten = hoTenParts.slice(1).join(' ') || '';\r\n          setHo(ho);\r\n          setTen(ten);\r\n          setSoCanCuoc(cleanedData[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error processing QR Code data:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n  };\r\n\r\n  const handleStartScan = () => {\r\n    setScanning(true);\r\n  };\r\n\r\n  const handleStopScan = () => {\r\n    setScanning(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ textAlign: 'center', margin: '20px 0' }}>\r\n        <h4>Thêm</h4>\r\n      </div>\r\n\r\n      <div>\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n          {scanning ? (\r\n            <>\r\n              <QrReader delay={100} style={{ height: 240, width: 320 }} onError={handleError} onScan={handleScan} />\r\n              <Button size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleStopScan} style={{ marginTop: '10px' }}>\r\n                Stop Scanning\r\n              </Button>\r\n              <p>Scanned Tên: {ten}</p>\r\n              <p>Scanned Số Căn Cước: {soCanCuoc}</p>\r\n            </>\r\n          ) : (\r\n            <Button size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleStartScan} style={{ marginTop: '10px' }}>\r\n              <QrCodeScannerIcon />\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <FormControl fullWidth margin=\"dense\">\r\n          <InputLabel>Chức Vụ</InputLabel>\r\n          <Select value={chucVuId} onChange={(event) => setChucVuId(event.target.value)}>\r\n            {myChucVu\r\n              .filter((item) => item.idCv === 1 || item.idCv === 8)\r\n              .map((item, index) => (\r\n                <MenuItem key={index} value={item}>\r\n                  {item.tenCv}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField fullWidth margin=\"dense\" label=\"Họ\" value={ho} onChange={(event) => setHo(event.target.value)} />\r\n        <TextField fullWidth margin=\"dense\" label=\"Tên\" value={ten} onChange={(event) => setTen(event.target.value)} />\r\n        <TextField fullWidth margin=\"dense\" label=\"Mật Khẩu\" value={matKhau} onChange={(event) => setMatKhau(event.target.value)} />\r\n        <TextField fullWidth margin=\"dense\" label=\"Email\" value={email} onChange={(event) => setEmail(event.target.value)} />\r\n        <TextField fullWidth margin=\"dense\" label=\"Số Điện Thoại\" onChange={(event) => setSdt(event.target.value)} />\r\n        <TextField fullWidth margin=\"dense\" label=\"Số Căn Cước\" value={soCanCuoc} onChange={(event) => setSoCanCuoc(event.target.value)} />\r\n        <Button size=\"large\" variant=\"contained\" color=\"success\" onClick={handleSave} style={{ marginTop: '20px' }}>\r\n          Thêm tài khoản nhân viên mới\r\n        </Button>\r\n      </Box>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTKNV;\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Staff\\Modal-User-Staff.js",["1031","1032","1033","1034","1035"],[],"import { Link, Navigate } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\n// icon\r\nimport Chip from '@mui/material/Chip';\r\n\r\n// import { filter } from 'lodash';\r\nimport { useEffect, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Button,\r\n  Popover,\r\n  Checkbox,\r\n  TableRow,\r\n  MenuItem,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  IconButton,\r\n  TableContainer,\r\n  TablePagination,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\n// components\r\nimport { filter } from 'lodash';\r\nimport Iconify from '../../components/iconify';\r\nimport Scrollbar from '../../components/scrollbar';\r\n// sections\r\nimport { UserListHead, UserListToolbar } from '../../sections/@dashboard/user';\r\n// mock\r\nimport { taiKhoan } from '../../service/taiKhoanNhanVienService';\r\nimport ModalDeleteDiscount from './Modal-Delete-Staff';\r\n// import { Navigate } from 'react-router-dom';\r\n\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'maTaiKhoan', label: 'Mã Tài Khoản', alignRight: false },\r\n  { id: 'ten', label: 'Tên', alignRight: false },\r\n  { id: 'chucVu', label: 'Chức Vụ', alignRight: false },\r\n  { id: 'soCanCuoc', label: 'Số Căn Cước', alignRight: false },\r\n  { id: 'email', label: 'Email', alignRight: false },\r\n  { id: 'sdt', label: 'SĐT', alignRight: false },\r\n  { id: 'trangThai', label: 'Trạng Thái', alignRight: false },\r\n  { id: '' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user) => _user.maTaiKhoan.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function UserStaff() {\r\n  // Select list of users\r\n\r\n  const [listData, setListData] = useState([]);\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  const getListData = async (page, query) => {\r\n    try {\r\n      const res = await taiKhoan(page, query);\r\n      console.log('Check res: ', res);\r\n      // Cập nhật giá trị của listData sau khi tìm kiếm\r\n      setListData(res);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await taiKhoan(0);\r\n      setListData(res);\r\n      setFilteredList(res); // Cập nhật danh sách đã lọc\r\n\r\n      const storedMessage = localStorage.getItem('successMessage');\r\n      if (storedMessage) {\r\n        setAlertContent(JSON.parse(storedMessage));\r\n        localStorage.removeItem('successMessage');\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n    getListData(0);\r\n    const storedMessage = localStorage.getItem('successMessage');\r\n    if (storedMessage) {\r\n      setAlertContent(JSON.parse(storedMessage));\r\n      localStorage.removeItem('successMessage');\r\n    }\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const [orderBy, setOrderBy] = useState('name');\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  // Create a new Detail Direct\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  const [lastGeneratedNumber, setLastGeneratedNumber] = useState(0);\r\n  const [object, setOject] = useState([]);\r\n\r\n  const handleOpenMenu = (event, row) => {\r\n    setOpen(event.currentTarget);\r\n    setOject(row);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  // handDelete\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [information, setInformation] = useState();\r\n  const handleDelete = () => {\r\n    console.log(object);\r\n    setInformation(object);\r\n    setOpenDelete(true);\r\n  };\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpenDelete(false);\r\n    getListData();\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = listData.map((n) => n.idTaiKhoan);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    // setPage(0);\r\n    // setFilterName(event.target.value);\r\n\r\n    const query = event.target.value.toLowerCase();\r\n\r\n    // Lọc danh sách dựa trên tên\r\n    const filteredUsers = listData.filter((user) =>\r\n      (user.maTaiKhoan && user.maTaiKhoan.toLowerCase().includes(query)) ||\r\n      (user.ten && user.ten.toLowerCase().includes(query)) ||\r\n      (user.chuVu && user.chucVu.toLowerCase().includes(query)) ||\r\n      (user.soCanCuoc && user.soCanCuoc.toLowerCase().includes(query)) ||\r\n      (user.email && user.email.toLowerCase().includes(query)) ||\r\n      (user.sdt && user.sdt.toLowerCase().includes(query)) ||\r\n      (user.trangThai && typeof user.trangThai === 'string' && user.trangThai.toLowerCase().includes(query))\r\n    );\r\n\r\n    setFilteredList(filteredUsers); // Cập nhật danh sách đã lọc\r\n\r\n    setPage(0); // Đặt lại trang khi tìm kiếm\r\n\r\n    setFilterName(query); // Cập nhật trường tìm kiếm\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - listData.length) : 0;\r\n\r\n  const filteredUsers = applySortFilter(listData, getComparator(order, orderBy), filterName);\r\n\r\n  const isNotFound = !filteredUsers.length && !!filterName;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Tài Khoản Admin </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Tài Khoản Nhân Viên\r\n          </Typography>\r\n          <Link to=\"/dashboard/addNewTKNV\">\r\n            <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n              Thêm Nhân Viên\r\n            </Button>\r\n          </Link>\r\n        </Stack>\r\n\r\n        <Card>\r\n          <UserListToolbar\r\n            numSelected={selected.length}\r\n            filterName={filterName}\r\n            onFilterName={handleFilterByName} // Truyền hàm xử lý tìm kiếm\r\n          />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={listData.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {filteredList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                    <TableRow key={row.idTaiKhoan}>\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={selected.indexOf(row.idTaiKhoan) !== -1}\r\n                          onChange={(event) => handleClick(event, row.idTaiKhoan)}\r\n                        />\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"left\">{row.maTaiKhoan}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row.ho} {row.ten}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.idChucVu.tenCv}</TableCell>\r\n                      <TableCell align=\"left\">{row.soCanCuoc}</TableCell>\r\n                      <TableCell align=\"left\">{row.email}</TableCell>\r\n                      <TableCell align=\"left\">{row.sdt}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row.trangThai === 0 ? (\r\n                          <Chip\r\n                            label=\"Hoạt động\"\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            style={{ color: 'white', backgroundColor: 'green', border: 'none' }}\r\n                          />\r\n\r\n                        ) : (\r\n                          <Chip\r\n                            label=\"Dừng hoạt động\"\r\n                            color=\"secondary\"\r\n                            variant=\"outlined\"\r\n                            style={{ color: 'white', backgroundColor: 'red', border: 'none' }}\r\n                          />\r\n\r\n                        )}\r\n                      </TableCell>\r\n\r\n\r\n\r\n                      <TableCell align=\"right\">\r\n                        <IconButton size=\"large\" color=\"inherit\" onClick={(event) => handleOpenMenu(event, row)}>\r\n                          <Iconify icon={'eva:more-vertical-fill'} />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={listData && listData.length ? listData.length : 0}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 140,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <Link to={`/dashboard/detail/${object.idTaiKhoan}`} style={{ textDecoration: 'none' }}>\r\n          <MenuItem sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <Iconify icon={'eva:edit-fill'} sx={{ fontSize: 20, marginRight: 2, color: 'primary.main' }} />\r\n            <span>Edit</span>\r\n          </MenuItem>\r\n        </Link>\r\n\r\n        <MenuItem onClick={() => handleDelete()} sx={{ color: 'error.main' }}>\r\n          <Iconify icon={'eva:trash-2-outline'} sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n      {/* Dialog xác nhận xóa */}\r\n      <ModalDeleteDiscount open={openDelete} handleClose={handleClose} information={information} />\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\diaChi\\AllAddress.js",["1036"],["1037"],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\diaChi\\AddressByClient.js",["1038","1039","1040","1041","1042"],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\diaChi\\AddAddress.js",["1043","1044","1045","1046","1047"],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\diaChi\\UpdateAddress.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\coupons\\AddCoupons.js",["1048"],[],"import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import {toast} from \"react-toastify\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Box, Button, Container, InputAdornment, Stack, TextField, Typography } from \"@mui/material\";\r\nimport { DateTimePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { vi } from 'date-fns/locale'; // Import locale cho tiếng Việt\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport dayjs from \"dayjs\";\r\nimport { DemoContainer, DemoItem } from \"@mui/x-date-pickers/internals/demo\";\r\nimport { add } from \"../../service/CouponsService\";\r\nimport Iconify from \"../../components/iconify\";\r\nimport { useAlert } from \"../../layouts/dashboard/AlertContext\";\r\n\r\nconst AddCoupons = () => {\r\n    const todayAtNoon = dayjs();\r\n    const todayAt9AM = dayjs();\r\n    const [ngayKetThuc, setNgayKetThuc] = useState(dayjs().set('hour', 12).startOf('hour'));\r\n    const [ngayBatDau, setNgayBatDau] = useState(dayjs().set('hour', 12).startOf('hour'));\r\n\r\n    // chuyen trang\r\n    const navigate = useNavigate();\r\n\r\n    const [validationErrors, setValidationErrors] = useState(\"\");\r\n    const { showAlert } = useAlert();\r\n\r\n    const [coupon, setCoupon] = useState({\r\n        tenChuongTrinh: '',\r\n        code: '',\r\n        moTa: '',\r\n        thoiGianKetThuc: '',\r\n        thoiGianTao: '',\r\n        soLuong: '',\r\n        phanTram: '',\r\n        tienToiThieu: ''\r\n    });\r\n\r\n    // const {name, code, moTa, thoiGianKetThuc, soLuong, hoaDon, phanTram, tienToiThieu, soLuongHienTai} = coupon;\r\n\r\n    const onInputChange = (e) => {\r\n        setCoupon({ ...coupon, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSave = async () => {\r\n\r\n        const selectedDatekt = dayjs(ngayKetThuc);\r\n        const ngaykt = selectedDatekt.format('YYYY-MM-DDTHH:mm:ss', { locale: vi });\r\n        const selectedDateBd = dayjs(ngayBatDau);\r\n        const ngayBd = selectedDateBd.format('YYYY-MM-DDTHH:mm:ss', { locale: vi });\r\n\r\n        const couponAdd = {\r\n            tenChuongTrinh: coupon.tenChuongTrinh,\r\n            code: coupon.code,\r\n            moTa: coupon.moTa,\r\n            thoiGianKetThuc: ngaykt,\r\n            thoiGianTao: ngayBd,\r\n            soLuong: coupon.soLuong,\r\n            phanTram: coupon.phanTram,\r\n            tienToiThieu: coupon.tienToiThieu\r\n        };\r\n\r\n        console.log(\"couponAdd: \", couponAdd);\r\n\r\n        let res;\r\n        try {\r\n            res = await add(couponAdd);\r\n            console.log(\"Check res: \", res);\r\n        } catch (error) {\r\n            if (error.response && error.response.data) {\r\n                console.log(\"error.response.data\", error.response.data);\r\n                setValidationErrors(error.response.data);\r\n            } else {\r\n                console.error(\"Error:\", error);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (res && res.idCoupon) {\r\n            showAlert('success', 'Thêm Thành Công');\r\n            navigate(\"/dashboard/coupons\");\r\n        } else {\r\n            showAlert('warning', 'Thêm Thất Bại');\r\n        }\r\n\r\n    };\r\n\r\n    function generateRandomCode() {\r\n        const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        const codeLength = 8;\r\n        let code = '';\r\n\r\n        for (let i = 0; i < codeLength; i += 1) {\r\n            const randomIndex = Math.floor(Math.random() * characters.length);\r\n            code += characters.charAt(randomIndex);\r\n        }\r\n        coupon.code = code;\r\n        return code;\r\n    }\r\n\r\n    const [randomCode, setRandomCode] = useState(\"\");\r\n    useEffect(() => {\r\n        setRandomCode(generateRandomCode());\r\n    }, []);\r\n\r\n    const refreshInput = () => {\r\n        setRandomCode(generateRandomCode());\r\n    }\r\n\r\n    console.log(\"ngayKetThuc: \", ngayKetThuc);\r\n\r\n    console.log(\"coupon: \", coupon);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Helmet>\r\n                <title> Coupons | 5F Store </title>\r\n            </Helmet>\r\n            <Container>\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        Coupons\r\n                    </Typography>\r\n                </Stack>\r\n\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        display: \"flex\",         // Center horizontally\r\n                        justifyContent: \"center\", // Center horizontally\r\n                        flexDirection: \"column\", // Align items vertically\r\n                        alignItems: \"center\",    // Align items horizontally\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n\r\n                >\r\n                    <TextField\r\n                        error={!!validationErrors.tenChuongTrinh}\r\n                        helperText={validationErrors.tenChuongTrinh}\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        label=\"Tên Chương Trình\"\r\n                        name=\"tenChuongTrinh\"\r\n                        onChange={(e) => onInputChange(e)}\r\n                    />\r\n                    <TextField\r\n                        error={!!validationErrors.code}\r\n                        helperText={validationErrors.code}\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        label=\"Code\"\r\n                        name=\"code\"\r\n                        value={randomCode}\r\n                        disabled\r\n                        onChange={(e) => onInputChange(e)}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Button size=\"small\" onClick={() => refreshInput()}>\r\n                                        <RefreshIcon data-testid=\"RefreshIcon\" />\r\n                                    </Button>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n\r\n                    <TextField\r\n                        error={!!validationErrors.soLuong}\r\n                        helperText={validationErrors.soLuong}\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        label=\"Số Lượng\"\r\n                        name=\"soLuong\"\r\n                        onChange={(e) => onInputChange(e)}\r\n                    />\r\n\r\n                    <div className=\"mb-3 text-center mt-3\">\r\n                        <p className=\"form-label\">Ngày bắt đầu</p>\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n                            <DemoContainer components={['DateTimePicker']}>\r\n                                <DemoItem>\r\n                                    <DateTimePicker\r\n                                        defaultValue={todayAtNoon}\r\n                                        minDateTime={todayAt9AM}\r\n                                        name='thoiGianTao'\r\n                                        onChange={(newDate) => setNgayBatDau(newDate)}\r\n                                        renderInput={(props) => (\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                margin=\"dense\"\r\n                                                label=\"Thời Gian bắt đầu\"\r\n                                                {...props}\r\n                                                sx={{\r\n                                                    '& .MuiInputLabel-root': {\r\n                                                        fontSize: '0.875rem !important',\r\n                                                    },\r\n                                                    '& .MuiInputBase-root': {\r\n                                                        fontSize: '0.875rem !important',\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </DemoItem>\r\n                            </DemoContainer>\r\n                        </LocalizationProvider>\r\n                    </div>\r\n\r\n                    <div className=\"mb-3 text-center mt-3\">\r\n                        <p className=\"form-label\">Ngày kết thúc</p>\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n                            <DemoContainer components={['DateTimePicker']}>\r\n                                <DemoItem>\r\n                                    <DateTimePicker\r\n                                        defaultValue={todayAtNoon}\r\n                                        minDateTime={todayAt9AM}\r\n                                        name='thoiGianKetThuc'\r\n                                        onChange={(newDate) => setNgayKetThuc(newDate)}\r\n                                        renderInput={(props) => (\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                margin=\"dense\"\r\n                                                label=\"Thời Gian Kết Thúc\"\r\n                                                {...props}\r\n                                                sx={{\r\n                                                    '& .MuiInputLabel-root': {\r\n                                                        fontSize: '0.875rem !important',\r\n                                                    },\r\n                                                    '& .MuiInputBase-root': {\r\n                                                        fontSize: '0.875rem !important',\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </DemoItem>\r\n                            </DemoContainer>\r\n                        </LocalizationProvider>\r\n                    </div>\r\n\r\n                    <TextField\r\n                        error={!!validationErrors.phanTram}\r\n                        helperText={validationErrors.phanTram}\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        label=\"Phần Trăm Giảm\"\r\n                        name=\"phanTram\"\r\n                        onChange={(e) => onInputChange(e)}\r\n                    />\r\n\r\n                    <TextField\r\n                        error={!!validationErrors.tienToiThieu}\r\n                        helperText={validationErrors.tienToiThieu}\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        label=\"Số tiền tối thiểu\"\r\n                        name=\"tienToiThieu\"\r\n                        onChange={(e) => onInputChange(e)}\r\n                    />\r\n                    <TextField\r\n                        error={!!validationErrors.moTa}\r\n                        helperText={validationErrors.moTa}\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        label=\"Mô Tả (Tùy Chọn)\"\r\n                        name=\"moTa\"\r\n                        onChange={(e) => onInputChange(e)}\r\n                    />\r\n\r\n                    <Button\r\n                        size={\"large\"}\r\n                        variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n                        onClick={() => handleSave()}\r\n                        style={{ marginTop: \"20px\" }} // Make button wider\r\n                    >\r\n                        Thêm Coupon Mới\r\n                    </Button>\r\n                </Box>\r\n\r\n            </Container>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\nexport default AddCoupons;","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\coupons\\CouponsPage.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\coupons\\UpdateCoupons.js",["1049","1050"],[],"import { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n// import {toast} from \"react-toastify\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Box, Button, Container, InputAdornment, Stack, TextField, Typography } from \"@mui/material\";\r\nimport { DateTimePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { vi } from 'date-fns/locale'; // Import locale cho tiếng Việt\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport dayjs from \"dayjs\";\r\nimport { DemoContainer, DemoItem } from \"@mui/x-date-pickers/internals/demo\";\r\nimport { detail, update } from \"../../service/CouponsService\";\r\nimport Iconify from \"../../components/iconify\";\r\nimport { useAlert } from \"../../layouts/dashboard/AlertContext\";\r\n\r\nconst UpdateCoupons = () => {\r\n    const todayAtNoon = dayjs();\r\n    const todayAt9AM = dayjs();\r\n    const [ngayKetThuc, setNgayKetThuc] = useState(dayjs().set('hour', 12).startOf('hour'));\r\n    const [ngayBatDau, setNgayBatDau] = useState(dayjs().set('hour', 12).startOf('hour'));\r\n    const [randomCode, setRandomCode] = useState(\"\");\r\n    const { id } = useParams();\r\n\r\n    // chuyen trang\r\n    const navigate = useNavigate();\r\n\r\n    const [validationErrors, setValidationErrors] = useState(\"\");\r\n    const { showAlert } = useAlert();\r\n\r\n    const [coupon, setCoupon] = useState({\r\n        tenChuongTrinh: '',\r\n        code: '',\r\n        moTa: '',\r\n        thoiGianKetThuc: '',\r\n        thoiGianTao: '',\r\n        soLuongHienTai: '',\r\n        phanTram: '',\r\n        tienToiThieu: ''\r\n    });\r\n\r\n    // const {name, code, moTa, thoiGianKetThuc, soLuongHienTai, hoaDon, phanTram, tienToiThieu, soLuongHienTaiHienTai} = coupon;\r\n\r\n    const onInputChange = (e) => {\r\n        setCoupon({ ...coupon, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSave = async () => {\r\n\r\n        const selectedDatekt = dayjs(ngayKetThuc);\r\n        const ngaykt = selectedDatekt.format('YYYY-MM-DDTHH:mm:ss', { locale: vi });\r\n        const selectedDateBd = dayjs(ngayBatDau);\r\n        const ngayBd = selectedDateBd.format('YYYY-MM-DDTHH:mm:ss', { locale: vi });\r\n\r\n        const couponAdd = {\r\n            tenChuongTrinh: coupon.tenChuongTrinh,\r\n            code: coupon.code,\r\n            moTa: coupon.moTa,\r\n            thoiGianKetThuc: ngaykt,\r\n            thoiGianTao: ngayBd,\r\n            soLuongHienTai: coupon.soLuongHienTai,\r\n            phanTram: coupon.phanTram,\r\n            tienToiThieu: coupon.tienToiThieu\r\n        };\r\n\r\n        console.log(\"couponAdd: \", couponAdd);\r\n\r\n        let res;\r\n        try {\r\n            res = await update(id, couponAdd);\r\n            console.log(\"Check res: \", res);\r\n        } catch (error) {\r\n            if (error.response && error.response.data) {\r\n                console.log(error.response.data);\r\n                setValidationErrors(error.response.data);\r\n            } else {\r\n                console.error(\"Error:\", error);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (res && res.idCoupon) {\r\n            showAlert('success', 'Thêm Thành Công');\r\n            navigate(\"/dashboard/coupons\");\r\n        } else {\r\n            showAlert('warning', 'Thêm Thất Bại');\r\n        }\r\n\r\n    };\r\n\r\n    function generateRandomCode() {\r\n        const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n        const codeLength = 8;\r\n        let code = '';\r\n\r\n        for (let i = 0; i < codeLength; i += 1) {\r\n            const randomIndex = Math.floor(Math.random() * characters.length);\r\n            code += characters.charAt(randomIndex);\r\n        }\r\n        coupon.code = code;\r\n        return code;\r\n    }\r\n\r\n    const getOne = async () => {\r\n        const res = await detail(id);\r\n        setCoupon(res);\r\n    }\r\n    console.log(\"res: \", coupon);\r\n\r\n    useEffect(() => {\r\n        getOne();\r\n    }, []);\r\n\r\n    const refreshInput = () => {\r\n        setRandomCode(generateRandomCode());\r\n    }\r\n\r\n    console.log(\"ngayKetThuc: \", ngayKetThuc);\r\n\r\n    console.log(\"coupon: \", coupon);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Helmet>\r\n                <title> Coupons | 5F Store </title>\r\n            </Helmet>\r\n            <Container>\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                    <Typography variant=\"h4\" gutterBottom>\r\n                        Coupons\r\n                    </Typography>\r\n                </Stack>\r\n\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        display: \"flex\",         // Center horizontally\r\n                        justifyContent: \"center\", // Center horizontally\r\n                        flexDirection: \"column\", // Align items vertically\r\n                        alignItems: \"center\",    // Align items horizontally\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n\r\n                >\r\n                    <TextField\r\n                        error={!!validationErrors.tenChuongTrinh}\r\n                        helperText={validationErrors.tenChuongTrinh}\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        label=\"Tên Chương Trình\"\r\n                        name=\"tenChuongTrinh\"\r\n                        value={coupon.tenChuongTrinh}\r\n                        onChange={(e) => onInputChange(e)}\r\n                    />\r\n                    <TextField\r\n                        error={!!validationErrors.code}\r\n                        helperText={validationErrors.code}\r\n                        fullWidth\r\n                        margin=\"dense\"\r\n                        label=\"Code\"\r\n                        name=\"code\"\r\n                        value={coupon.code}\r\n                        disabled\r\n                        onChange={(e) => onInputChange(e)}\r\n                        InputProps={{\r\n                            endAdornment: (\r\n                                <InputAdornment position=\"end\">\r\n                                    <Button size=\"small\" onClick={() => refreshInput()}>\r\n                                        <RefreshIcon data-testid=\"RefreshIcon\" />\r\n                                    </Button>\r\n                                </InputAdornment>\r\n                            ),\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        error={!!validationErrors.soLuongHienTai}\r\n                        helperText={validationErrors.soLuongHienTai}\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        label=\"Số Lượng\"\r\n                        name=\"soLuongHienTai\"\r\n                        value={coupon.soLuongHienTai}\r\n                        onChange={(e) => onInputChange(e)}\r\n                    />\r\n\r\n                    <div className=\"mb-3 text-center mt-3\">\r\n                        <p className=\"form-label\">Ngày bắt đầu</p>\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n                            <DemoContainer components={['DateTimePicker']}>\r\n                                <DemoItem>\r\n                                    <DateTimePicker\r\n                                        defaultValue={todayAtNoon}\r\n                                        minDateTime={todayAt9AM}\r\n                                        name='thoiGianTao'\r\n                                        value={dayjs(coupon.thoiGianTao)}\r\n                                        onChange={(newDate) => setNgayBatDau(newDate)}\r\n                                        renderInput={(props) => (\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                margin=\"dense\"\r\n                                                label=\"Thời Gian bắt đầu\"\r\n                                                {...props}\r\n                                                sx={{\r\n                                                    '& .MuiInputLabel-root': {\r\n                                                        fontSize: '0.875rem !important',\r\n                                                    },\r\n                                                    '& .MuiInputBase-root': {\r\n                                                        fontSize: '0.875rem !important',\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </DemoItem>\r\n                            </DemoContainer>\r\n                        </LocalizationProvider>\r\n                    </div>\r\n\r\n                    <div className=\"mb-3 text-center mt-3\">\r\n                        <p className=\"form-label\">Ngày kết thúc</p>\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs} fullWidth>\r\n                            <DemoContainer components={['DateTimePicker']}>\r\n                                <DemoItem>\r\n                                    <DateTimePicker\r\n                                        defaultValue={todayAtNoon}\r\n                                        minDateTime={todayAt9AM}\r\n                                        name='thoiGianKetThuc'\r\n                                        value={dayjs(coupon.thoiGianKetThuc)}\r\n                                        onChange={(newDate) => setNgayKetThuc(newDate)}\r\n                                        renderInput={(props) => (\r\n                                            <TextField\r\n                                                fullWidth\r\n                                                margin=\"dense\"\r\n                                                label=\"Thời Gian Kết Thúc\"\r\n                                                {...props}\r\n                                                sx={{\r\n                                                    '& .MuiInputLabel-root': {\r\n                                                        fontSize: '0.875rem !important',\r\n                                                    },\r\n                                                    '& .MuiInputBase-root': {\r\n                                                        fontSize: '0.875rem !important',\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        )}\r\n                                    />\r\n                                </DemoItem>\r\n                            </DemoContainer>\r\n                        </LocalizationProvider>\r\n                    </div>\r\n\r\n                    <TextField\r\n                        error={!!validationErrors.phanTram}\r\n                        helperText={validationErrors.phanTram}\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        label=\"Phần Trăm Giảm\"\r\n                        name=\"phanTram\"\r\n                        value={coupon.phanTram}\r\n                        onChange={(e) => onInputChange(e)}\r\n                    />\r\n\r\n                    <TextField\r\n                        error={!!validationErrors.tienToiThieu}\r\n                        helperText={validationErrors.tienToiThieu}\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        label=\"Số tiền tối thiểu\"\r\n                        name=\"tienToiThieu\"\r\n                        value={coupon.tienToiThieu}\r\n                        onChange={(e) => onInputChange(e)}\r\n                    />\r\n                    <TextField\r\n                        error={!!validationErrors.moTa}\r\n                        helperText={validationErrors.moTa}\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        margin={\"dense\"}\r\n                        label=\"Mô Tả\"\r\n                        name=\"moTa\"\r\n                        value={coupon.moTa}\r\n                        onChange={(e) => onInputChange(e)}\r\n                    />\r\n\r\n                    <Button\r\n                        size={\"large\"}\r\n                        variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n                        onClick={() => handleSave()}\r\n                        style={{ marginTop: \"20px\" }} // Make button wider\r\n                    >\r\n                        Update Coupon\r\n                    </Button>\r\n                </Box>\r\n\r\n            </Container>\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\nexport default UpdateCoupons;","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout-Client.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\shadows.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\globalStyles.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\typography.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\customShadows.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\palette.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\simple\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\chart\\styles.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\chart\\useChart.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\scroll-to-top\\ScrollToTop.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\_mock\\user.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\OderManagementSevice.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\bill-service.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\taiKhoanKhachHangSevice.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\hooks\\useResponsive.js",[],["1051"],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\BillSevice.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\OrderManagementTimeLine.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\san-pham-service.js",["1052","1053","1054","1055","1056","1057","1058","1059"],[],"import custom from './custom-axios';\r\n\r\nconst fetchAllSP = (page) => {\r\n  return custom.get(`/san-pham/view-all?p=${page}`); // Call API\r\n};\r\n\r\nconst fetchSpWithImg = (page) => {\r\n  return custom.get(`/san-pham/getSpWithImg?p=${page}`); // Call API\r\n};\r\n\r\nconst fetchSP = () => {\r\n  return custom.get(`/san-pham/listSP`); // Call API\r\n};\r\n\r\nconst detailSP = (idSp) => {\r\n  return custom.get(`/san-pham/detail/${idSp}`); // Call API\r\n};\r\n\r\nconst postAddSanPham = (maSp, tenSp, idCl, idMs, idLsp, idXx, idCoAo, idTayAo, moTa, giaBan, trangThai) => {\r\n  return custom.post('/san-pham/add', {\r\n    maSp,\r\n    tenSp,\r\n    idCl,\r\n    idMs,\r\n    idLsp,\r\n    idXx,\r\n    idCoAo,\r\n    idTayAo,\r\n    moTa,\r\n    giaBan,\r\n    trangThai,\r\n  });\r\n};\r\nconst deleteSanPham = (id) => {\r\n  return custom.delete(`/san-pham/delete/${id}`);\r\n};\r\n\r\nconst putUpdateSanPham = (idSp, maSp, tenSp, idCl, idMs, idLsp, idXx, idCoAo, idTayAo, moTa, giaBan, trangThai) => {\r\n  return custom.put(`/san-pham/update`, {\r\n    idSp,\r\n    maSp,\r\n    tenSp,\r\n    idCl,\r\n    idMs,\r\n    idLsp,\r\n    idXx,\r\n    idCoAo,\r\n    idTayAo,\r\n    moTa,\r\n    giaBan,\r\n    trangThai,\r\n  });\r\n};\r\n\r\nconst topSpTrending = () => {\r\n  return custom.get('/san-pham/top-sp-trend'); // Thay đổi URL dựa trên định nghĩa URL API của bạn\r\n};\r\n\r\nexport {\r\n  fetchAllSP,\r\n  fetchSP,\r\n  detailSP,\r\n  postAddSanPham,\r\n  deleteSanPham,\r\n  putUpdateSanPham,\r\n  fetchSpWithImg,\r\n  topSpTrending,\r\n};\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modals-AddProduct.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Delete-DirectSale.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modals-Update-Product-Cart.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Payment-Confirm.js",["1060"],[],"import { useNavigate, useParams } from 'react-router-dom';\r\nimport '../scss/Car-Bill-ADM.scss';\r\nimport { Alert, Dialog, FormControlLabel, Snackbar, Switch, TextField } from '@mui/material';\r\nimport { useState, forwardRef } from 'react';\r\nimport { format } from 'date-fns';\r\nimport Button from '@mui/material/Button';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport PropTypes from 'prop-types';\r\nimport { paymentOnline } from '../service/BillSevice';\r\nimport { updatePayment } from '../service/OrderManagementTimeLine';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nconst ModalPaymentComfirm = (props) => {\r\n  // Get Props\r\n  ModalPaymentComfirm.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    sdtKHTT: PropTypes.string.isRequired,\r\n    tenKhTT: PropTypes.string.isRequired,\r\n    thanhTien: PropTypes.number.isRequired,\r\n    listHD: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  };\r\n  const { show, handleClose, listHD, thanhTien, tenKhTT, sdtKHTT } = props;\r\n\r\n  //   Insert product\r\n  const param = useParams();\r\n  const idHdParam = param.id;\r\n  const [moTa, setMoTa] = useState('');\r\n  const currentDate = new Date();\r\n  const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //   Show  payment online\r\n  const [isDeliveryChecked, setIsDeliveryChecked] = useState(false);\r\n\r\n  const handleDeliveryChange = (event) => {\r\n    setIsDeliveryChecked(event.target.checked);\r\n    setChangeAmount(0);\r\n  };\r\n\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  const handlePaymentOnCash = async () => {\r\n    try {\r\n      if (isDeliveryChecked === true) {\r\n        const cashGivenValue = parseFloat(cashGiven);\r\n        if (!Number.isNaN(cashGivenValue)) {\r\n          const change = thanhTien - cashGivenValue;\r\n          if (change < 0) {\r\n            setAlertContent({\r\n              type: 'warning',\r\n              message: 'Tiền Mặt Khách Đưa Đã Dư',\r\n            });\r\n          } else if (change < 10000) {\r\n            setAlertContent({\r\n              type: 'warning',\r\n              message: 'Tiền Chuyển Khoản Phải Trên 10000',\r\n            });\r\n          } else {\r\n            console.log('Check listHD: ', listHD);\r\n            const paymentOn = await paymentOnline(changeAmount, listHD.idHd);\r\n            console.log('Check paymentOn: ', paymentOn);\r\n            // Mở tab mới với đường dẫn URL\r\n            window.location.href = paymentOn;\r\n          }\r\n        } else {\r\n          setChangeAmount(0);\r\n        }\r\n      } else {\r\n        const cashGivenValue = parseFloat(cashGiven);\r\n        const change = cashGivenValue - thanhTien;\r\n\r\n        if (change < 0) {\r\n          setAlertContent({\r\n            type: 'warning',\r\n            message: 'Tiền Khách Đưa Chưa Đủ',\r\n          });\r\n        } else {\r\n          await updatePayment(idHdParam, tenKhTT, sdtKHTT, formattedDate, thanhTien, cashGiven, change, 1, 9);\r\n          setAlertContent({\r\n            type: 'success',\r\n            message: 'Thanh Toán Tại Quầy Thành Công!!!',\r\n          });\r\n          navigate(`/order-management-timeline/${idHdParam}`);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error('Error updating', e);\r\n    }\r\n  };\r\n  //   Payment\r\n  const [cashGiven, setCashGiven] = useState('');\r\n  const [changeAmount, setChangeAmount] = useState(0);\r\n\r\n  const handleCalculateChange = () => {\r\n    const cashGivenValue = parseFloat(cashGiven);\r\n\r\n    let change = 0;\r\n\r\n    if (!Number.isNaN(cashGivenValue)) {\r\n      if (isDeliveryChecked === true) {\r\n        change = thanhTien - cashGivenValue;\r\n      } else {\r\n        change = cashGivenValue - thanhTien;\r\n      }\r\n    }\r\n\r\n    if (change < 0) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: isDeliveryChecked ? 'Tiền Mặt Khách Đưa Đã Dư' : 'Tiền Khách Đưa Chưa Đủ',\r\n      });\r\n      setChangeAmount(0);\r\n    } else {\r\n      setChangeAmount(change);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Dialog\r\n          open={show}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          maxWidth=\"xl\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle>{'THANH TOÁN HÓA ĐƠN'}</DialogTitle>\r\n          <DialogContent>\r\n            {/* <DialogContentText id=\"alert-dialog-slide-description\"> */}\r\n            <div>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Mã Hóa Đơn\"\r\n                multiline\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={listHD.maHd}\r\n                fullWidth\r\n                sx={{ marginTop: 2 }}\r\n              />\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Thành Tiền\"\r\n                multiline\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={thanhTien}\r\n                fullWidth\r\n                sx={{ marginTop: 2 }}\r\n              />\r\n              <TextField\r\n                onChange={(e) => setMoTa(e.target.value)}\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Mô Tả\"\r\n                sx={{ m: 1, marginTop: 2, marginLeft: 0 }}\r\n                fullWidth\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <FormControlLabel control={<Switch />} onChange={handleDeliveryChange} label=\"Thanh Toán Online\" />\r\n              {isDeliveryChecked ? (\r\n                <>\r\n                  <TextField\r\n                    id=\"standard-multiline-flexible\"\r\n                    label=\"Số Tiền Mặt Gửi\"\r\n                    type=\"number\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    defaultValue={0}\r\n                    sx={{ marginTop: 2, marginBottom: 2 }}\r\n                    onChange={(e) => setCashGiven(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    sx={{ marginBottom: 2 }}\r\n                    variant=\"contained\"\r\n                    endIcon={<SendIcon />}\r\n                    onClick={handleCalculateChange}\r\n                  >\r\n                    Tính Tiền\r\n                  </Button>\r\n                  <span>Số Tiền Chuyển Khoản: {changeAmount}</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <TextField\r\n                    id=\"standard-multiline-flexible\"\r\n                    label=\"Số Tiền Khách Gửi\"\r\n                    type=\"number\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2, marginBottom: 2 }}\r\n                    onChange={(e) => setCashGiven(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    sx={{ marginBottom: 2 }}\r\n                    variant=\"contained\"\r\n                    endIcon={<SendIcon />}\r\n                    onClick={handleCalculateChange}\r\n                  >\r\n                    Tính Tiền\r\n                  </Button>\r\n                  <span>Số Tiền Thừa Của Khách: {changeAmount}</span>\r\n                </>\r\n              )}\r\n            </div>\r\n            {/* </DialogContentText> */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Hủy</Button>\r\n            <Button onClick={handlePaymentOnCash}>Đồng Ý</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ModalPaymentComfirm;\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Update-Status.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Delete-All-Product.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modals-SelectHistoryBill.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modals-AddKhachHang.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Delete-Product.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Create-Online.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\MappingTimeLine\\TimelineEvent.jsx",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\MappingTimeLine\\Timeline.jsx",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\SanPhamService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\CouponsService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modals-Add-Address.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\utils\\formatNumber.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\scrollbar\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\logo\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\iconify\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\client\\SelectBill.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\client\\Detail-Product.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\client\\Detail-Cart.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\client\\Payment.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\auth\\login\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\OngTayAoService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\XuatXuService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\LoaiCoAoService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\LoaiSPService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\ChatLieuService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\giamGiaService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\AnhService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\CloudinaryService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\ChiTietSPService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\MauSacService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\SizeService.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\user\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\discounts\\Modal-Delete-Discount.js",["1061","1062","1063","1064","1065","1066","1067","1068","1069"],[],"import { Alert, Snackbar } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { remove } from '../../service/giamGiaService';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function ModalDeleteDiscount(props) {\r\n  const { open, handleClose, information } = props;\r\n  const [idGgct, setIdGgct] = useState('');\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (information != null) {\r\n      setIdGgct(information.idGgct);\r\n    } else {\r\n      setIdGgct('');\r\n    }\r\n  }, [information]);\r\n\r\n  const handleDelete = async () => {\r\n    if (information.trangThai === 0) {\r\n      console.log(information.idGgct);\r\n      await remove(information.idGgct);\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Xóa thành công!',\r\n      });\r\n    } else if (information.trangThai === 1) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Không thể xóa!!!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Lỗi của chúng tôi!',\r\n      });\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{'Xóa Giảm Giá'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">Xóa Giảm Giá Có Mã Là: {idGgct}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Hủy</Button>\r\n          <Button onClick={handleDelete}>Đồng Ý</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\color-utils\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\label\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\taiKhoanNhanVienService.js",["1070","1071","1072","1073","1074","1075","1076"],[],"import custom from './custom-axios';\r\n\r\nconst taiKhoan = (page) => {\r\n  return custom.get(`/tai-khoan/view-alls`); // Call API\r\n};\r\nconst taiKhoan2 = (page, trangThai) => {\r\n  return custom.get(`/tai-khoan/view-all?p=${page}&trangThai=${trangThai}`); // Call API\r\n};\r\nconst postAddTaiKhoan = (maTaiKhoan, idChucVu, ho, ten, sdt, email, soCanCuoc , matKhau, trangThai) => {\r\n  return custom.post('/tai-khoan/add', {\r\n    maTaiKhoan,\r\n    idChucVu,\r\n    ho,\r\n    ten,\r\n    sdt,\r\n    email,\r\n    soCanCuoc,\r\n    matKhau,\r\n    trangThai,\r\n  });\r\n};\r\nconst postUpdateTaiKhoan = (id, maTaiKhoan, idChucVu, ho, ten, sdt, email, matKhau, soCanCuoc, trangThai) => {\r\n  return custom.put(`/tai-khoan/update/${id}`, {\r\n    maTaiKhoan,\r\n    idChucVu,\r\n    ho,\r\n    ten,\r\n    sdt,\r\n    email,\r\n    matKhau,\r\n    soCanCuoc,\r\n    trangThai,\r\n  });\r\n};\r\nconst deleteTaiKhoan = (id) => {\r\n  return custom.patch(`/tai-khoan/delete/${id}`);\r\n};\r\nconst detailTaiKhoan = (id) => {\r\n  return custom.get(`/tai-khoan/detail/${id}`);\r\n};\r\nexport { taiKhoan, postAddTaiKhoan, deleteTaiKhoan, postUpdateTaiKhoan, detailTaiKhoan, taiKhoan2 };\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\AlertContext.js",["1077"],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\chucVuService.js",["1078","1079","1080","1081","1082","1083","1084"],[],"import custom from \"./custom-axios\";\r\n\r\nconst chucVu = () => {\r\n  return custom.get(`/chuc-vu/view-all`); // Call API\r\n};\r\nconst chucVu3 = () => {\r\n  return custom.get(`/chuc-vu/list-chuc-vu`); // Call API\r\n};\r\nconst chucVu2 = ( trangThai) => {\r\n  return custom.get(`/tai-khoan/view-alls?trangThai=${trangThai}`); // Call API\r\n};\r\nconst postAddChucVu = (maCv, tenCv, ngayTao, trangThai) => {\r\n  return custom.post(\"/chuc-vu/add\", { maCv, tenCv, ngayTao ,trangThai});\r\n};\r\nconst deleteChucVu = (id) => {\r\n  return custom.delete(`/chuc-vu/delete/${id}`);\r\n};\r\nconst detail = (id) => {\r\n  return custom.get(`/chuc-vu/detail/${id}`);\r\n}\r\n\r\nconst detailTen = (params) => {\r\n  return custom.get(`/chuc-vu/detailTen`, { params });\r\n}\r\n\r\nexport {detail, chucVu, postAddChucVu, deleteChucVu, chucVu2, chucVu3 ,detailTen};\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\apiDiaChi.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\diaChiSevice.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\utils\\cssStyles.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\AlertSnackbar.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\Staff\\Modal-Delete-Staff.js",["1085","1086","1087","1088","1089","1090","1091","1092","1093","1094"],[],"import { Alert, Snackbar } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\nimport { deleteTaiKhoan } from '../../service/taiKhoanNhanVienService'\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function ModalDeleteDiscount(props) {\r\n  const { open, handleClose, information } = props;\r\n  const [idTaiKhoan, setidTaiKhoan] = useState('');\r\n  const [maTaiKhoan, setMaTaiKhoan] = useState('');\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (information != null) {\r\n      console.log(information);\r\n      setidTaiKhoan(information.idTaiKhoan);\r\n      setMaTaiKhoan(information.maTaiKhoan);\r\n    } else {\r\n      setidTaiKhoan('');\r\n    }\r\n  }, [information]);\r\n\r\n  const handleDelete = async () => {\r\n    // Kiểm tra trạng thái trước khi xóa\r\n    if (information.trangThai === 0) {\r\n      // Thay đổi trạng thái thành 10\r\n      information.trangThai = 10;\r\n\r\n      // Gửi yêu cầu xóa\r\n      await deleteTaiKhoan(information.idTaiKhoan);\r\n\r\n      // Cập nhật giao diện ngay lập tức\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Xóa thành công!',\r\n      });\r\n    } else if (information.trangThai === 10) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Không thể xóa!!!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Lỗi của chúng tôi!',\r\n      });\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{'Xóa Nhân Viên'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">Xóa Mã Nhân Viên: {maTaiKhoan}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Hủy</Button>\r\n          <Button onClick={handleDelete}>Đồng Ý</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\coupons\\Modal-Delete-Coupon.js",["1095","1096","1097","1098","1099","1100","1101","1102"],[],"import { Alert, Snackbar } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\nimport { del } from '../../service/CouponsService';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function ModalDeleteCoupon(props) {\r\n  const { open, handleClose, information } = props;\r\n  const [idCoupon, setidCoupon] = useState('');\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (information != null) {\r\n      setidCoupon(information.idCoupon);\r\n    } else {\r\n      setidCoupon('');\r\n    }\r\n  }, [information]);\r\n\r\n  const handleDelete = async () => {\r\n    if (information.trangThai === 0) {\r\n      console.log(information.idCoupon);\r\n      await del(information.idCoupon, 10);\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Xóa thành công!',\r\n      });\r\n    } else if (information.trangThai === 10) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Không thể xóa!!!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Lỗi của chúng tôi!',\r\n      });\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const handleSnackbarClose = (reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{'Xóa Coupon'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">Xóa Coupon Có Mã Là: {idCoupon}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Hủy</Button>\r\n          <Button onClick={handleDelete}>Đồng Ý</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\simple\\SimpleLayout.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\coupons\\Modal-Reset-Coupon.js",["1103","1104","1105","1106","1107","1108","1109","1110"],[],"import { Alert, Snackbar } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\nimport { del } from '../../service/CouponsService';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function ModalResetCoupon(props) {\r\n  const { open, handleClose, information } = props;\r\n  const [idCoupon, setidCoupon] = useState('');\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (information != null) {\r\n      setidCoupon(information.idCoupon);\r\n    } else {\r\n      setidCoupon('');\r\n    }\r\n  }, [information]);\r\n\r\n  const handleDelete = async () => {\r\n    if (information.trangThai === 10) {\r\n      console.log(information.idCoupon);\r\n      await del(information.idCoupon, 0);\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Reset thành công!',\r\n      });\r\n    } else if (information.trangThai === 0) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Không thể reset!!!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Lỗi của chúng tôi!',\r\n      });\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const handleSnackbarClose = (reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{'Reset Coupon'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">Reset Coupon Có Mã Là: {idCoupon}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Hủy</Button>\r\n          <Button onClick={handleDelete}>Đồng Ý</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\client\\Footer.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\client\\Header.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\custom-axios.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Backdrop.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Paper.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Table.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Autocomplete.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Tooltip.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Button.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Card.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Input.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\DirectSaleSevice.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\theme\\overrides\\Typography.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\MappingTimeLine\\Placeholder.jsx",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\iconify\\Iconify.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\scrollbar\\Scrollbar.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\logo\\Logo.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\auth\\login\\LoginForm.js",["1111"],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead-NoCheckbox.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar-NoFilter.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppNewsUpdate.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTasks.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTrafficBySite.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppOrderTimeline.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentSubject.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWebsiteVisits.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentVisits.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWidgetSummary.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\color-utils\\ColorSinglePicker.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppConversionRates.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\label\\Label.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\color-utils\\ColorMultiPicker.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\color-utils\\ColorPreview.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-ADM.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-Client.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCard.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductSort.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCardAll.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCartWidget.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductListAll.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSidebar.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSB.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\_mock\\account.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\header\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\index.js",["1112"],["1113"],"import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n// @mui\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material';\r\n// mock\r\nimport account from '../../../_mock/account';\r\n// hooks\r\nimport useResponsive from '../../../hooks/useResponsive';\r\n// components\r\nimport Logo from '../../../components/logo';\r\nimport Scrollbar from '../../../components/scrollbar';\r\nimport NavSection from '../../../components/nav-section';\r\n//\r\nimport navConfig from './config';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst NAV_WIDTH = 280;\r\n\r\nconst StyledAccount = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 2.5),\r\n  borderRadius: Number(theme.shape.borderRadius) * 1.5,\r\n  backgroundColor: alpha(theme.palette.grey[500], 0.12),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nNav.propTypes = {\r\n  openNav: PropTypes.bool,\r\n  onCloseNav: PropTypes.func,\r\n};\r\n\r\nexport default function Nav({ openNav, onCloseNav }) {\r\n  const { pathname } = useLocation();\r\n\r\n  const isDesktop = useResponsive('up', 'lg');\r\n\r\n  useEffect(() => {\r\n    if (openNav) {\r\n      onCloseNav();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pathname]);\r\n\r\n  const renderContent = (\r\n    <Scrollbar\r\n      sx={{\r\n        height: 1,\r\n        '& .simplebar-content': { height: 1, display: 'flex', flexDirection: 'column' },\r\n      }}\r\n    >\r\n      <Box sx={{ px: 2.5, py: 3, display: 'inline-flex' }}>\r\n        <Logo />\r\n      </Box>\r\n\r\n      <Box sx={{ mb: 5, mx: 2.5 }}>\r\n        <Link underline=\"none\">\r\n          <StyledAccount>\r\n            <Avatar src={account.photoURL} alt=\"photoURL\" />\r\n\r\n            <Box sx={{ ml: 2 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ color: 'text.primary' }}>\r\n                {account.displayName}\r\n              </Typography>\r\n\r\n              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                {account.role}\r\n              </Typography>\r\n            </Box>\r\n          </StyledAccount>\r\n        </Link>\r\n      </Box>\r\n\r\n      <NavSection data={navConfig} />\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n\r\n      <Box sx={{ px: 2.5, pb: 3, mt: 10 }}>\r\n        <Stack alignItems=\"center\" spacing={3} sx={{ pt: 5, borderRadius: 2, position: 'relative' }}>\r\n          <Box\r\n            component=\"img\"\r\n            src=\"/assets/illustrations/illustration_avatar.png\"\r\n            sx={{ width: 100, position: 'absolute', top: -50 }}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    </Scrollbar>\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      component=\"nav\"\r\n      sx={{\r\n        flexShrink: { lg: 0 },\r\n        width: { lg: NAV_WIDTH },\r\n      }}\r\n    >\r\n      {isDesktop ? (\r\n        <Drawer\r\n          open\r\n          variant=\"permanent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: NAV_WIDTH,\r\n              bgcolor: 'background.default',\r\n              borderRightStyle: 'dashed',\r\n            },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      ) : (\r\n        <Drawer\r\n          open={openNav}\r\n          onClose={onCloseNav}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          PaperProps={{\r\n            sx: { width: NAV_WIDTH },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\scrollbar\\styles.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\utils\\formatTime.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Detail-SanPham.js",["1114"],[],"import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../scss/Modal-Detail-SanPham.scss';\r\n// import { selectAllImgProduct } from \"../services/BillSevice\";\r\nimport { Button, Dialog, DialogActions, DialogContent, Alert, DialogTitle, IconButton, Snackbar } from '@mui/material';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport RemoveIcon from '@mui/icons-material/Remove';\r\nimport PropTypes from 'prop-types';\r\nimport { findByProductNameAndSize } from '../service/BillSevice';\r\nimport { postAddDirect, updateCart } from '../service/DirectSaleSevice';\r\n\r\nconst ModalDetailProduct = (props) => {\r\n  ModalDetailProduct.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    handleCloseDetai: PropTypes.func.isRequired,\r\n    dataDetail: PropTypes.array.isRequired,\r\n    selectDataCart: PropTypes.func.isRequired,\r\n    DataCart: PropTypes.array.isRequired,\r\n    listImages: PropTypes.string.isRequired,\r\n  };\r\n  const { show, handleCloseDetai, dataDetail, selectDataCart, DataCart, listImages } = props;\r\n\r\n  //   Insert product\r\n  //   Get Name Of Size And Number\r\n  const [selectedSize, setSelectedSize] = useState(null);\r\n  const [selectedMauSac, setSelectedMauSac] = useState(null);\r\n  const [isSizeSelected, setIsSizeSelected] = useState(false);\r\n  const [isMSSelected, setIsMSSelected] = useState(false);\r\n  const [availableColors, setAvailableColors] = useState([]);\r\n  const [selectSoLuongTon, setSelectSoLuongTon] = useState([]);\r\n\r\n  // Set select one MS and Size\r\n  const uniqueSizes = [...new Set(dataDetail.map((size) => size.idSize.tenSize))];\r\n  const uniqueMS = [...new Set(dataDetail.map((ms) => ms.idMs.tenMs))];\r\n\r\n  const handleShowSize = (size) => {\r\n    const checkSize = dataDetail.filter((item) => item.idSize.tenSize === size);\r\n    console.log('checkSize: ', checkSize);\r\n\r\n    if (isSizeSelected && selectedSize === size) {\r\n      setSelectedSize(null);\r\n      setIsSizeSelected(false);\r\n      setAvailableColors([]);\r\n      setSelectedMauSac(null);\r\n      setIsMSSelected(false);\r\n      setSelectSoLuongTon([]);\r\n    } else {\r\n      setSelectedSize(size);\r\n      setIsSizeSelected(true);\r\n      setAvailableColors(checkSize.map((item) => item.idMs.tenMs));\r\n    }\r\n  };\r\n\r\n  const handleShowMS = (mauSac) => {\r\n    const checkSoLuong = dataDetail.filter(\r\n      (item) => item.idMs.tenMs === mauSac && item.idSize.tenSize === selectedSize\r\n    );\r\n    console.log('checkSoLuong:', checkSoLuong);\r\n\r\n    if (isMSSelected && selectedMauSac === mauSac) {\r\n      setSelectedMauSac(null);\r\n      setIsMSSelected(false);\r\n      setSelectSoLuongTon([]);\r\n    } else {\r\n      setSelectSoLuongTon(checkSoLuong);\r\n      setSelectedMauSac(mauSac);\r\n      setIsMSSelected(true);\r\n    }\r\n  };\r\n\r\n  const [quantity, setQuantity] = useState(1); // Initialize with a default quantity\r\n  const handleQuantityChange = (event) => {\r\n    const newQuantity = Number(event.target.value);\r\n    setQuantity(newQuantity);\r\n  };\r\n\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  //   Get number\r\n  const param = useParams();\r\n  const idHdParam = param.id;\r\n\r\n  const handleChoose = async () => {\r\n    const selectedSp = dataDetail[0].idSp.tenSp;\r\n    console.log('Selected selectedSp:', selectedSp);\r\n\r\n    try {\r\n      const getOneCTSP = await findByProductNameAndSize(selectedSp, selectedSize, selectedMauSac);\r\n\r\n      console.log('Selected getOneCTSP:', getOneCTSP);\r\n\r\n      const existingItem = DataCart.find((item) => item[10] === getOneCTSP.idCtsp);\r\n      console.log('Selected existingItem:', existingItem);\r\n\r\n      if (selectedSize === null || selectedMauSac === null || selectedSp === '') {\r\n        setAlertContent({\r\n          type: 'warning',\r\n          message: 'Xin mời chọn size và màu sắc của sản phẩm',\r\n        });\r\n      } else if (quantity < 1 || quantity === '' || Number.isNaN(quantity)) {\r\n        setAlertContent({\r\n          type: 'warning',\r\n          message: 'Vui lòng chọn số lượng lớn hơn 0',\r\n        });\r\n      } else if (existingItem) {\r\n        //   Get IdHdct\r\n        const getIdHdct = existingItem[1];\r\n        //   Get soLuong\r\n        const oldQuantity = existingItem[8];\r\n        const newQuantity = oldQuantity + quantity;\r\n        //   Get donGia\r\n        const donGia = existingItem[7] * newQuantity;\r\n\r\n        //   Update Product On Cart\r\n        await updateCart(getIdHdct, getOneCTSP, newQuantity, donGia);\r\n        //   Close the modal\r\n        setSelectedSize(null);\r\n        handleClose();\r\n        setQuantity(1);\r\n        //   Load new data on cart\r\n        selectDataCart();\r\n        setAlertContent({\r\n          type: 'warning',\r\n          message: 'Sản phẩm đã có trong giỏ hàng. Chúng tôi đã cộng thêm số lượng vào sản phẩm',\r\n        });\r\n      } else {\r\n        //   Insert to the cart\r\n        const donGia = getOneCTSP.giaThucTe * quantity;\r\n        await postAddDirect(getOneCTSP, quantity, donGia, idHdParam, 0);\r\n        //   Close the modal\r\n        setSelectedSize(null);\r\n        handleClose();\r\n        setQuantity(1);\r\n        //   Load new data on cart\r\n        selectDataCart();\r\n        setAlertContent({\r\n          type: 'success',\r\n          message: 'Thêm sản phẩm thành công',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n  };\r\n  // Close the alert\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n  // Select price\r\n  // Select price\r\n  const giaThucTe = dataDetail.map((item) => item.giaThucTe);\r\n\r\n  // Find max and min of price\r\n  const minPrice = Math.min(...giaThucTe);\r\n  const maxPrice = Math.max(...giaThucTe);\r\n\r\n  // Create the price range string\r\n  const formattedMinPrice = minPrice.toLocaleString('en-US').replace(/,/g, '.');\r\n  const formattedMaxPrice = maxPrice.toLocaleString('en-US').replace(/,/g, '.');\r\n  const priceRange = minPrice === maxPrice ? formattedMinPrice : `${formattedMinPrice} - ${formattedMaxPrice}`;\r\n\r\n  function formatCurrency(price) {\r\n    if (!price) return '0';\r\n\r\n    const formatter = new Intl.NumberFormat('vi-VN', {\r\n      style: 'currency',\r\n      currency: 'VND',\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setSelectSoLuongTon([]);\r\n    setIsMSSelected(false);\r\n    setIsSizeSelected(false);\r\n    setSelectedMauSac(null);\r\n    setSelectedSize(null);\r\n    setQuantity(1);\r\n    handleCloseDetai(); // Call the original handleClose function\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Dialog open={show} onClose={handleClose} maxWidth=\"xl\">\r\n          <DialogTitle>THÔNG TIN SẢN PHẨM</DialogTitle>\r\n          {dataDetail.length > 0 && (\r\n            <DialogContent>\r\n              <Card sx={{ display: 'flex' }}>\r\n                <Carousel interval={null} style={{ maxWidth: 500, margin: '0 auto' }}>\r\n                  <Carousel.Item>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      sx={{ maxWidth: 250, height: '100%' }}\r\n                      image={listImages}\r\n                      alt={listImages}\r\n                    />\r\n                  </Carousel.Item>\r\n                </Carousel>\r\n\r\n                <Box sx={{ display: 'flex', flexDirection: 'column' }}>\r\n                  <CardContent sx={{ flex: '1 0 auto' }}>\r\n                    <Typography component=\"div\" variant=\"h5\">\r\n                      Tên Sản Phẩm: {dataDetail[0].idSp.tenSp}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\r\n                      <p>Xuất Xứ: {dataDetail[0].idSp.idXx.tenNuoc}</p>\r\n                      <p>Chất Liệu: {dataDetail[0].idSp.idCl.tenCl}</p>\r\n                      <p>\r\n                        Giá: {selectSoLuongTon.length > 0 ? formatCurrency(selectSoLuongTon[0].giaThucTe) : priceRange}\r\n                      </p>\r\n                    </Typography>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', pb: 1 }}>\r\n                      <div>\r\n                        Size:{' '}\r\n                        {uniqueSizes.map((size, sizeIndex) => (\r\n                          <Button\r\n                            style={{\r\n                              marginRight: '4px',\r\n                              marginBottom: '4px',\r\n                            }}\r\n                            key={`size-button-${sizeIndex}`}\r\n                            onClick={() => handleShowSize(size)}\r\n                            variant={selectedSize === size ? 'contained' : 'outlined'}\r\n                            size=\"small\"\r\n                          >\r\n                            {size}\r\n                          </Button>\r\n                        ))}\r\n                      </div>\r\n                    </Box>\r\n                    {/* Box mau sac */}\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <div>\r\n                        Màu Sắc:{' '}\r\n                        {availableColors.length > 0\r\n                          ? // Hiển thị danh sách màu sắc từ availableColors\r\n                            availableColors.map((mauSac, msIndex) => (\r\n                              <Button\r\n                                style={{\r\n                                  marginRight: '4px',\r\n                                  marginBottom: '4px',\r\n                                }}\r\n                                key={`size-button-${msIndex}`}\r\n                                onClick={() => handleShowMS(mauSac)}\r\n                                variant={selectedMauSac === mauSac ? 'contained' : 'outlined'}\r\n                                size=\"small\"\r\n                              >\r\n                                {mauSac}\r\n                              </Button>\r\n                            ))\r\n                          : // Hiển thị dữ liệu từ dataDetail\r\n                            uniqueMS.map((item, index) => (\r\n                              <Button\r\n                                style={{\r\n                                  marginRight: '4px',\r\n                                  marginBottom: '4px',\r\n                                }}\r\n                                key={`size-button-${index}`}\r\n                                onClick={() => handleShowMS(item)}\r\n                                variant={selectedMauSac === item ? 'contained' : 'outlined'}\r\n                                size=\"small\"\r\n                              >\r\n                                {item}\r\n                              </Button>\r\n                            ))}\r\n                      </div>\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <span className=\"buttons_added\">\r\n                        <p>Số lượng: </p>\r\n                        <IconButton\r\n                          onClick={() => setQuantity(Math.max(1, quantity - 1))}\r\n                          color=\"primary\"\r\n                          aria-label=\"add an alarm\"\r\n                        >\r\n                          <RemoveIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        <input\r\n                          aria-label=\"quantity\"\r\n                          className=\"input-qty\"\r\n                          max=\"Số tối đa\"\r\n                          min=\"Số tối thiểu\"\r\n                          type=\"text\"\r\n                          pattern=\"[0-9]*\"\r\n                          inputMode=\"numeric\"\r\n                          value={quantity || '0'}\r\n                          onChange={handleQuantityChange}\r\n                        />\r\n                        <IconButton onClick={() => setQuantity(quantity + 1)} color=\"primary\" aria-label=\"add an alarm\">\r\n                          <AddIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        {selectSoLuongTon.length > 0 && <span>Số lượng tồn: {selectSoLuongTon[0].soLuongTon}</span>}\r\n                      </span>\r\n                    </Box>\r\n                  </CardContent>\r\n                </Box>\r\n              </Card>\r\n            </DialogContent>\r\n          )}\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Hủy</Button>\r\n            <Button onClick={handleChoose}>Hoàn Tất</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ModalDetailProduct;\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\label\\styles.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\color-utils\\Icon.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\header\\LanguagePopover.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\header\\AccountPopover.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\header\\NotificationsPopover.js",["1115","1116"],[],"import PropTypes from 'prop-types';\r\nimport { set, sub } from 'date-fns';\r\nimport { noCase } from 'change-case';\r\nimport { faker } from '@faker-js/faker';\r\nimport { useEffect, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Box,\r\n  List,\r\n  Badge,\r\n  Button,\r\n  Avatar,\r\n  Tooltip,\r\n  Divider,\r\n  Popover,\r\n  Typography,\r\n  IconButton,\r\n  ListItemText,\r\n  ListSubheader,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// utils\r\nimport { fToNow } from '../../../utils/formatTime';\r\n// components\r\nimport Iconify from '../../../components/iconify';\r\nimport Scrollbar from '../../../components/scrollbar';\r\nimport { getAllOrderManagement } from '../../../service/OderManagementSevice';\r\n\r\n// ----------------------------------------------------------------------\r\n// {\r\n//   id: faker.datatype.uuid(),\r\n//   title: faker.name.fullName(),\r\n//   description: 'answered to your comment on the Minimal',\r\n//   avatar: '/assets/images/avatars/avatar_2.jpg',\r\n//   type: 'friend_interactive',\r\n//   createdAt: sub(new Date(), { hours: 3, minutes: 30 }),\r\n//   isUnRead: true,\r\n// },\r\n// {\r\n//   id: faker.datatype.uuid(),\r\n//   title: 'You have new message',\r\n//   description: '5 unread messages',\r\n//   avatar: null,\r\n//   type: 'chat_message',\r\n//   createdAt: sub(new Date(), { days: 1, hours: 3, minutes: 30 }),\r\n//   isUnRead: false,\r\n// },\r\n// {\r\n//   id: faker.datatype.uuid(),\r\n//   title: 'You have new mail',\r\n//   description: 'sent from Guido Padberg',\r\n//   avatar: null,\r\n//   type: 'mail',\r\n//   createdAt: sub(new Date(), { days: 2, hours: 3, minutes: 30 }),\r\n//   isUnRead: false,\r\n// },\r\n// {\r\n//   id: faker.datatype.uuid(),\r\n//   title: 'Delivery processing',\r\n//   description: 'Your order is being shipped',\r\n//   avatar: null,\r\n//   type: 'order_shipped',\r\n//   createdAt: sub(new Date(), { days: 3, hours: 3, minutes: 30 }),\r\n//   isUnRead: false,\r\n// },\r\n\r\nexport default function NotificationsPopover() {\r\n  const [listData, setListData] = useState([]);\r\n\r\n  const getListData = async () => {\r\n    try {\r\n      const res = await getAllOrderManagement();\r\n      setListData(res.filter((item) => item.trangThai === 0));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getListData();\r\n  }, []);\r\n\r\n  // const maHDList = listData.map((item) => item.maHD);\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const updatedNotifications = listData.map((item) => ({\r\n      idHd: item.idHd,\r\n      id: faker.datatype.uuid(),\r\n      title: 'Có Một Hóa Đơn Mới',\r\n      description: item.maHd,\r\n      avatar: null,\r\n      type: 'order_placed',\r\n      createdAt: item.ngayTao,\r\n      isUnRead: true,\r\n    }));\r\n    setNotifications(updatedNotifications);\r\n  }, [listData]);\r\n\r\n  const totalUnRead = notifications.filter((item) => item.isUnRead === true).length;\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpen = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleMarkAllAsRead = () => {\r\n    setNotifications(\r\n      notifications.map((notification) => ({\r\n        ...notification,\r\n        isUnRead: false,\r\n      }))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton color={open ? 'primary' : 'default'} onClick={handleOpen} sx={{ width: 40, height: 40 }}>\r\n        <Badge badgeContent={totalUnRead} color=\"error\">\r\n          <Iconify icon=\"eva:bell-fill\" />\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            mt: 1.5,\r\n            ml: 0.75,\r\n            width: 360,\r\n          },\r\n        }}\r\n      >\r\n        <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Typography variant=\"subtitle1\">Notifications</Typography>\r\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n              Đang Có {totalUnRead} Chưa Được Xác Nhận\r\n            </Typography>\r\n          </Box>\r\n\r\n          {totalUnRead > 0 && (\r\n            <Tooltip title=\" Mark all as read\">\r\n              <IconButton color=\"primary\" onClick={handleMarkAllAsRead}>\r\n                <Iconify icon=\"eva:done-all-fill\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          )}\r\n        </Box>\r\n\r\n        <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <Scrollbar sx={{ height: { xs: 340, sm: 'auto' } }}>\r\n          <List\r\n            disablePadding\r\n            subheader={\r\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\r\n                New\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {notifications.slice(0, notifications.length).map((notification) => (\r\n              <NotificationItem key={notification.id} notification={notification} />\r\n            ))}\r\n          </List>\r\n\r\n          {/* <List\r\n            disablePadding\r\n            subheader={\r\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\r\n                Before that\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            {notifications.slice(2, 5).map((notification) => (\r\n              <NotificationItem key={notification.id} notification={notification} />\r\n            ))}\r\n          </List> */}\r\n        </Scrollbar>\r\n\r\n        <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n        <Box sx={{ p: 1 }}>\r\n          <Button fullWidth disableRipple>\r\n            View All\r\n          </Button>\r\n        </Box>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nNotificationItem.propTypes = {\r\n  notification: PropTypes.shape({\r\n    createdAt: PropTypes.instanceOf(Date),\r\n    id: PropTypes.string,\r\n    isUnRead: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    type: PropTypes.string,\r\n    avatar: PropTypes.any,\r\n    idHd: PropTypes.array,\r\n  }),\r\n};\r\n\r\nfunction NotificationItem({ notification }) {\r\n  const { idHd, avatar, title } = renderContent(notification);\r\n\r\n  // Click on the table\r\n  const navigate = useNavigate();\r\n\r\n  const handlClickRow = (idHd) => {\r\n    console.log('Check idHd: ', idHd);\r\n    console.log('HOHO');\r\n\r\n    navigate(`/dashboard/bills/time-line/${idHd}`);\r\n  };\r\n\r\n  return (\r\n    <ListItemButton\r\n      onClick={() => handlClickRow(idHd)}\r\n      sx={{\r\n        py: 1.5,\r\n        px: 2.5,\r\n        mt: '1px',\r\n        ...(notification.isUnRead && {\r\n          bgcolor: 'action.selected',\r\n        }),\r\n      }}\r\n    >\r\n      <ListItemAvatar>\r\n        <Avatar sx={{ bgcolor: 'background.neutral' }}>{avatar}</Avatar>\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={title}\r\n        secondary={\r\n          <Typography\r\n            variant=\"caption\"\r\n            sx={{\r\n              mt: 0.5,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              color: 'text.disabled',\r\n            }}\r\n          >\r\n            <Iconify icon=\"eva:clock-outline\" sx={{ mr: 0.5, width: 16, height: 16 }} />\r\n            {fToNow(notification.createdAt)}\r\n          </Typography>\r\n        }\r\n      />\r\n    </ListItemButton>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction renderContent(notification) {\r\n  const title = (\r\n    <Typography variant=\"subtitle2\">\r\n      {notification.title}\r\n      <Typography component=\"span\" variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n        &nbsp; {noCase(notification.description)}\r\n      </Typography>\r\n    </Typography>\r\n  );\r\n\r\n  if (notification.type === 'order_placed') {\r\n    return {\r\n      idHd: notification.idHd,\r\n      avatar: <img alt={notification.title} src=\"/assets/icons/ic_notification_package.svg\" />,\r\n      title,\r\n    };\r\n  }\r\n  if (notification.type === 'order_shipped') {\r\n    return {\r\n      avatar: <img alt={notification.title} src=\"/assets/icons/ic_notification_shipping.svg\" />,\r\n      title,\r\n    };\r\n  }\r\n  if (notification.type === 'mail') {\r\n    return {\r\n      avatar: <img alt={notification.title} src=\"/assets/icons/ic_notification_mail.svg\" />,\r\n      title,\r\n    };\r\n  }\r\n  if (notification.type === 'chat_message') {\r\n    return {\r\n      avatar: <img alt={notification.title} src=\"/assets/icons/ic_notification_chat.svg\" />,\r\n      title,\r\n    };\r\n  }\r\n  return {\r\n    avatar: notification.avatar ? <img alt={notification.title} src={notification.avatar} /> : null,\r\n    title,\r\n  };\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\header\\Searchbar.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\nav-section\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\config.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\nav-section\\NavSection.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\svg-color\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\nav-section\\styles.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\components\\svg-color\\SvgColor.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\client\\Modals-ReturnItem.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\client\\Modals-DetailReturnItem.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Moda-Payment-Page1.js",["1117","1118","1119","1120","1121","1122","1123"],[],"import { Alert, Card, CardActionArea, CardContent, CardMedia, Radio, Snackbar, Typography } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\nimport logo5F from '../../assets/logo_5F.png';\r\nimport { getAll, insertHd } from '../../service/CouponsService';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function ModalPaymentPage(props) {\r\n  const { open, handleClose, information, getDetailHD } = props;\r\n  const [idHD, setIdhd] = useState('');\r\n  const [code, setCode] = useState('');\r\n  const [hoaDon, setHoaDon] = useState([]);\r\n  const [coupons, setCoupons] = useState([]);\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n\r\n  const handleCardClick = (value) => {\r\n    setSelectedValue(value);\r\n    setCode(value);\r\n    console.log(value);\r\n  };\r\n\r\n  const getAllCoupons = async () => {\r\n    const res = await getAll();\r\n    setCoupons(res);\r\n    console.log(\"getAllCoupons: \", res);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllCoupons();\r\n    if (information && information[0]) {\r\n      setHoaDon(information[0]);\r\n    }\r\n  }, [information]);\r\n  console.log(\"hoaDon\", hoaDon);\r\n\r\n  const handleSave = async () => {\r\n    console.log('hoaDonSave: ', hoaDon[0]);\r\n    console.log('CodeSave: ', code);\r\n    try {\r\n      const save = await insertHd(hoaDon[0], code);\r\n      if (save) {\r\n        setAlertContent({\r\n          type: 'success',\r\n          message: 'Thêm Thành Công!',\r\n        });\r\n      } else {\r\n        setAlertContent({\r\n          type: 'error',\r\n          message: \"Đã xảy ra lỗi!\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: error.response.data,\r\n      });\r\n    }\r\n    handleClose();\r\n    getDetailHD();\r\n  };\r\n\r\n  const handleSnackbarClose = (reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  function formatCurrency(price) {\r\n    if (!price) return \"0\";\r\n\r\n    const formatter = new Intl.NumberFormat(\"vi-VN\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{'Chọn Coupon'}</DialogTitle>\r\n        <DialogContent dividers>\r\n          {coupons\r\n            .filter(coupon => coupon.trangThai === 0)\r\n            .map((coupon, index) => (\r\n              <Card\r\n                key={coupon.code}\r\n                onClick={() => handleCardClick(coupon.code)}\r\n                sx={{ boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)', marginBottom: 2 }}\r\n              >\r\n                <CardActionArea sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  {/* You can customize the CardMedia based on your coupon data */}\r\n                  <CardMedia component=\"img\" height=\"140\" image={logo5F} alt={coupon.label} />\r\n                  <CardContent>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ whiteSpace: 'nowrap', marginRight: 2 }}>\r\n                      Giảm {`${coupon.phanTram} %`}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ whiteSpace: 'nowrap', marginRight: 2 }}>\r\n                      Đơn Tối Thiểu {formatCurrency(coupon.tienToiThieu)}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ whiteSpace: 'nowrap', marginRight: 2 }}>\r\n                      Số lượng: {coupon.soLuong}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ whiteSpace: 'nowrap', marginRight: 2 }}>\r\n                      Đã được dùng: {coupon.soLuong - coupon.soLuongHienTai}\r\n                    </Typography>\r\n                    {/* Add more Typography components as needed */}\r\n                  </CardContent>\r\n                  <Radio checked={selectedValue === coupon.code} />\r\n                </CardActionArea>\r\n              </Card>\r\n            ))}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Hủy</Button>\r\n          <Button onClick={handleSave}>Đồng Ý</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\SanPham\\ModalQuickAtt.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\service\\client\\ReturnItem.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\Modal-Payment-Confirm-TimeLine.js",["1124","1125"],[],"import { useNavigate, useParams } from 'react-router-dom';\r\nimport '../scss/Car-Bill-ADM.scss';\r\nimport { Alert, Dialog, FormControlLabel, Snackbar, Switch, TextField } from '@mui/material';\r\nimport { useState, forwardRef } from 'react';\r\nimport { format } from 'date-fns';\r\nimport Button from '@mui/material/Button';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport PropTypes from 'prop-types';\r\nimport { paymentOnline } from '../service/BillSevice';\r\nimport { updatePayment } from '../service/OrderManagementTimeLine';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nconst ModalPaymentComfirmTimeline = (props) => {\r\n  // Get Props\r\n  ModalPaymentComfirmTimeline.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    sdtKHTT: PropTypes.string.isRequired,\r\n    tenKhTT: PropTypes.string.isRequired,\r\n    thanhTien: PropTypes.number.isRequired,\r\n    getListData: PropTypes.func.isRequired,\r\n    listHD: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  };\r\n  const { getListData, show, handleClose, listHD, thanhTien, tenKhTT, sdtKHTT } = props;\r\n\r\n  //   Insert product\r\n  const param = useParams();\r\n  const idHdParam = param.id;\r\n  const [moTa, setMoTa] = useState('');\r\n  const currentDate = new Date();\r\n  const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //   Show  payment online\r\n  const [isDeliveryChecked, setIsDeliveryChecked] = useState(false);\r\n\r\n  const handleDeliveryChange = (event) => {\r\n    setIsDeliveryChecked(event.target.checked);\r\n    setChangeAmount(0);\r\n  };\r\n\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  const handlePaymentOnCash = async () => {\r\n    try {\r\n      if (isDeliveryChecked === true) {\r\n        const cashGivenValue = parseFloat(cashGiven);\r\n        if (!Number.isNaN(cashGivenValue)) {\r\n          const change = thanhTien - cashGivenValue;\r\n          if (change < 0) {\r\n            setAlertContent({\r\n              type: 'warning',\r\n              message: 'Tiền Mặt Khách Đưa Đã Dư',\r\n            });\r\n          } else if (change < 10000) {\r\n            setAlertContent({\r\n              type: 'warning',\r\n              message: 'Tiền Chuyển Khoản Phải Trên 10000',\r\n            });\r\n          } else {\r\n            console.log('Check listHD: ', listHD);\r\n            const paymentOn = await paymentOnline(changeAmount, listHD.idHd);\r\n            console.log('Check paymentOn: ', paymentOn);\r\n            // Mở tab mới với đường dẫn URL\r\n            window.location.href = paymentOn;\r\n          }\r\n        } else {\r\n          setChangeAmount(0);\r\n        }\r\n      } else {\r\n        const cashGivenValue = parseFloat(cashGiven);\r\n        const change = cashGivenValue - thanhTien;\r\n\r\n        if (change < 0) {\r\n          setAlertContent({\r\n            type: 'warning',\r\n            message: 'Tiền Khách Đưa Chưa Đủ',\r\n          });\r\n        } else {\r\n          await updatePayment(idHdParam, tenKhTT, sdtKHTT, formattedDate, thanhTien, cashGiven, change, 4);\r\n          setAlertContent({\r\n            type: 'success',\r\n            message: 'Thanh Toán Tại Quầy Thành Công!!!',\r\n          });\r\n          getListData();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error('Error updating', e);\r\n    }\r\n  };\r\n  //   Payment\r\n  const [cashGiven, setCashGiven] = useState('');\r\n  const [changeAmount, setChangeAmount] = useState(0);\r\n\r\n  const handleCalculateChange = () => {\r\n    const cashGivenValue = parseFloat(cashGiven);\r\n\r\n    let change = 0;\r\n\r\n    if (!Number.isNaN(cashGivenValue)) {\r\n      if (isDeliveryChecked === true) {\r\n        change = thanhTien - cashGivenValue;\r\n      } else {\r\n        change = cashGivenValue - thanhTien;\r\n      }\r\n    }\r\n\r\n    if (change < 0) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: isDeliveryChecked ? 'Tiền Mặt Khách Đưa Đã Dư' : 'Tiền Khách Đưa Chưa Đủ',\r\n      });\r\n      setChangeAmount(0);\r\n    } else {\r\n      setChangeAmount(change);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Dialog\r\n          open={show}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          maxWidth=\"xl\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle>{'THANH TOÁN HÓA ĐƠN'}</DialogTitle>\r\n          <DialogContent>\r\n            {/* <DialogContentText id=\"alert-dialog-slide-description\"> */}\r\n            <div>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Mã Hóa Đơn\"\r\n                multiline\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={listHD.maHd}\r\n                fullWidth\r\n                sx={{ marginTop: 2 }}\r\n              />\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Thành Tiền\"\r\n                multiline\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={thanhTien}\r\n                fullWidth\r\n                sx={{ marginTop: 2 }}\r\n              />\r\n              <TextField\r\n                onChange={(e) => setMoTa(e.target.value)}\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Mô Tả\"\r\n                sx={{ m: 1, marginTop: 2, marginLeft: 0 }}\r\n                fullWidth\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <FormControlLabel control={<Switch />} onChange={handleDeliveryChange} label=\"Thanh Toán Online\" />\r\n              {isDeliveryChecked ? (\r\n                <>\r\n                  <TextField\r\n                    id=\"standard-multiline-flexible\"\r\n                    label=\"Số Tiền Mặt Gửi\"\r\n                    type=\"number\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    defaultValue={0}\r\n                    sx={{ marginTop: 2, marginBottom: 2 }}\r\n                    onChange={(e) => setCashGiven(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    sx={{ marginBottom: 2 }}\r\n                    variant=\"contained\"\r\n                    endIcon={<SendIcon />}\r\n                    onClick={handleCalculateChange}\r\n                  >\r\n                    Tính Tiền\r\n                  </Button>\r\n                  <span>Số Tiền Chuyển Khoản: {changeAmount}</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <TextField\r\n                    id=\"standard-multiline-flexible\"\r\n                    label=\"Số Tiền Khách Gửi\"\r\n                    type=\"number\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2, marginBottom: 2 }}\r\n                    onChange={(e) => setCashGiven(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    sx={{ marginBottom: 2 }}\r\n                    variant=\"contained\"\r\n                    endIcon={<SendIcon />}\r\n                    onClick={handleCalculateChange}\r\n                  >\r\n                    Tính Tiền\r\n                  </Button>\r\n                  <span>Số Tiền Thừa Của Khách: {changeAmount}</span>\r\n                </>\r\n              )}\r\n            </div>\r\n            {/* </DialogContentText> */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Hủy</Button>\r\n            <Button onClick={handlePaymentOnCash}>Đồng Ý</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ModalPaymentComfirmTimeline;\r\n","C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\forms\\client\\Modals-Update-Product-Cart-Client.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\SignUpPage.js",["1126","1127","1128","1129","1130"],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\ForgetPasswordPage.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\auth\\forgetPassword\\ForgetPasswordForm.js",["1131"],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\auth\\signUp\\index.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\sections\\auth\\signUp\\SignUpForm.js",[],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\Cart-NoAccount.js",["1132","1133"],[],"C:\\Users\\tranh\\Documents\\DATN\\5f_store\\DuAn_5F_WebsiteBanHang\\fullstack-fontend\\src\\pages\\client\\SaleProductsPage.js",["1134"],[],{"ruleId":"1135","replacedBy":"1136"},{"ruleId":"1137","replacedBy":"1138"},{"ruleId":"1139","replacedBy":"1140"},{"ruleId":"1141","replacedBy":"1142"},{"ruleId":"1143","replacedBy":"1144"},{"ruleId":"1145","replacedBy":"1146"},{"ruleId":"1147","replacedBy":"1148"},{"ruleId":"1149","severity":1,"message":"1150","line":4,"column":48,"nodeType":"1151","messageId":"1152","endLine":4,"endColumn":53},{"ruleId":"1149","severity":1,"message":"1153","line":4,"column":55,"nodeType":"1151","messageId":"1152","endLine":4,"endColumn":61},{"ruleId":"1149","severity":1,"message":"1154","line":9,"column":8,"nodeType":"1151","messageId":"1152","endLine":9,"endColumn":15},{"ruleId":"1149","severity":1,"message":"1155","line":3,"column":10,"nodeType":"1151","messageId":"1152","endLine":3,"endColumn":22},{"ruleId":"1149","severity":1,"message":"1156","line":105,"column":9,"nodeType":"1151","messageId":"1152","endLine":105,"endColumn":23},{"ruleId":"1157","severity":1,"message":"1158","line":62,"column":6,"nodeType":"1159","endLine":62,"endColumn":8,"suggestions":"1160"},{"ruleId":"1149","severity":1,"message":"1161","line":442,"column":19,"nodeType":"1151","messageId":"1152","endLine":442,"endColumn":29},{"ruleId":"1149","severity":1,"message":"1162","line":36,"column":10,"nodeType":"1151","messageId":"1152","endLine":36,"endColumn":18},{"ruleId":"1149","severity":1,"message":"1163","line":7,"column":10,"nodeType":"1151","messageId":"1152","endLine":7,"endColumn":21},{"ruleId":"1149","severity":1,"message":"1164","line":55,"column":17,"nodeType":"1151","messageId":"1152","endLine":55,"endColumn":25},{"ruleId":"1149","severity":1,"message":"1165","line":38,"column":8,"nodeType":"1151","messageId":"1152","endLine":38,"endColumn":26},{"ruleId":"1149","severity":1,"message":"1166","line":220,"column":9,"nodeType":"1151","messageId":"1152","endLine":220,"endColumn":24},{"ruleId":"1149","severity":1,"message":"1167","line":230,"column":7,"nodeType":"1151","messageId":"1152","endLine":230,"endColumn":16},{"ruleId":"1149","severity":1,"message":"1168","line":233,"column":9,"nodeType":"1151","messageId":"1152","endLine":233,"endColumn":22},{"ruleId":"1169","severity":1,"message":"1170","line":29,"column":31,"nodeType":"1151","messageId":"1171","endLine":29,"endColumn":35},{"ruleId":"1149","severity":1,"message":"1164","line":44,"column":17,"nodeType":"1151","messageId":"1152","endLine":44,"endColumn":25},{"ruleId":"1149","severity":1,"message":"1172","line":45,"column":10,"nodeType":"1151","messageId":"1152","endLine":45,"endColumn":16},{"ruleId":"1149","severity":1,"message":"1173","line":45,"column":18,"nodeType":"1151","messageId":"1152","endLine":45,"endColumn":27},{"ruleId":"1157","severity":1,"message":"1174","line":104,"column":6,"nodeType":"1159","endLine":104,"endColumn":8,"suggestions":"1175"},{"ruleId":"1149","severity":1,"message":"1176","line":379,"column":9,"nodeType":"1151","messageId":"1152","endLine":379,"endColumn":20},{"ruleId":"1149","severity":1,"message":"1177","line":383,"column":9,"nodeType":"1151","messageId":"1152","endLine":383,"endColumn":24},{"ruleId":"1178","severity":1,"message":"1179","line":521,"column":17,"nodeType":"1180","messageId":"1181","endLine":521,"endColumn":130},{"ruleId":"1149","severity":1,"message":"1182","line":23,"column":21,"nodeType":"1151","messageId":"1152","endLine":23,"endColumn":26},{"ruleId":"1183","severity":1,"message":"1184","line":114,"column":21,"nodeType":"1180","messageId":"1185","endLine":118,"endColumn":23},{"ruleId":"1183","severity":1,"message":"1184","line":119,"column":21,"nodeType":"1180","messageId":"1185","endLine":123,"endColumn":23},{"ruleId":"1183","severity":1,"message":"1184","line":124,"column":21,"nodeType":"1180","messageId":"1185","endLine":128,"endColumn":23},{"ruleId":"1149","severity":1,"message":"1186","line":10,"column":22,"nodeType":"1151","messageId":"1152","endLine":10,"endColumn":35},{"ruleId":"1149","severity":1,"message":"1187","line":18,"column":21,"nodeType":"1151","messageId":"1152","endLine":18,"endColumn":33},{"ruleId":"1149","severity":1,"message":"1188","line":21,"column":10,"nodeType":"1151","messageId":"1152","endLine":21,"endColumn":16},{"ruleId":"1149","severity":1,"message":"1189","line":1,"column":16,"nodeType":"1151","messageId":"1152","endLine":1,"endColumn":24},{"ruleId":"1149","severity":1,"message":"1190","line":141,"column":10,"nodeType":"1151","messageId":"1152","endLine":141,"endColumn":29},{"ruleId":"1149","severity":1,"message":"1191","line":141,"column":31,"nodeType":"1151","messageId":"1152","endLine":141,"endColumn":53},{"ruleId":"1149","severity":1,"message":"1192","line":238,"column":9,"nodeType":"1151","messageId":"1152","endLine":238,"endColumn":18},{"ruleId":"1149","severity":1,"message":"1193","line":242,"column":9,"nodeType":"1151","messageId":"1152","endLine":242,"endColumn":19},{"ruleId":"1149","severity":1,"message":"1194","line":196,"column":9,"nodeType":"1151","messageId":"1152","endLine":196,"endColumn":24},{"ruleId":"1157","severity":1,"message":"1195","line":62,"column":6,"nodeType":"1159","endLine":62,"endColumn":16,"suggestions":"1196","suppressions":"1197"},{"ruleId":"1149","severity":1,"message":"1198","line":36,"column":9,"nodeType":"1151","messageId":"1152","endLine":36,"endColumn":20},{"ruleId":"1149","severity":1,"message":"1199","line":36,"column":22,"nodeType":"1151","messageId":"1152","endLine":36,"endColumn":34},{"ruleId":"1149","severity":1,"message":"1200","line":36,"column":36,"nodeType":"1151","messageId":"1152","endLine":36,"endColumn":51},{"ruleId":"1183","severity":1,"message":"1184","line":129,"column":21,"nodeType":"1180","messageId":"1185","endLine":133,"endColumn":23},{"ruleId":"1183","severity":1,"message":"1184","line":134,"column":21,"nodeType":"1180","messageId":"1185","endLine":138,"endColumn":23},{"ruleId":"1149","severity":1,"message":"1201","line":12,"column":5,"nodeType":"1151","messageId":"1152","endLine":12,"endColumn":19},{"ruleId":"1149","severity":1,"message":"1202","line":44,"column":29,"nodeType":"1151","messageId":"1152","endLine":44,"endColumn":43},{"ruleId":"1157","severity":1,"message":"1203","line":146,"column":21,"nodeType":"1204","endLine":146,"endColumn":111},{"ruleId":"1157","severity":1,"message":"1205","line":149,"column":21,"nodeType":"1204","endLine":149,"endColumn":111},{"ruleId":"1157","severity":1,"message":"1206","line":151,"column":37,"nodeType":"1204","endLine":151,"endColumn":105},{"ruleId":"1157","severity":1,"message":"1207","line":104,"column":8,"nodeType":"1159","endLine":104,"endColumn":10,"suggestions":"1208"},{"ruleId":"1149","severity":1,"message":"1209","line":21,"column":12,"nodeType":"1151","messageId":"1152","endLine":21,"endColumn":22},{"ruleId":"1157","severity":1,"message":"1210","line":111,"column":8,"nodeType":"1159","endLine":111,"endColumn":10,"suggestions":"1211"},{"ruleId":"1212","severity":2,"message":"1213","line":43,"column":23,"nodeType":"1151","endLine":43,"endColumn":36,"suppressions":"1214"},{"ruleId":"1215","severity":1,"message":"1216","line":3,"column":30,"nodeType":"1217","messageId":"1218","endLine":5,"endColumn":2,"fix":"1219"},{"ruleId":"1215","severity":1,"message":"1216","line":7,"column":34,"nodeType":"1217","messageId":"1218","endLine":9,"endColumn":2,"fix":"1220"},{"ruleId":"1215","severity":1,"message":"1216","line":11,"column":23,"nodeType":"1217","messageId":"1218","endLine":13,"endColumn":2,"fix":"1221"},{"ruleId":"1215","severity":1,"message":"1216","line":15,"column":28,"nodeType":"1217","messageId":"1218","endLine":17,"endColumn":2,"fix":"1222"},{"ruleId":"1215","severity":1,"message":"1216","line":19,"column":108,"nodeType":"1217","messageId":"1218","endLine":33,"endColumn":2,"fix":"1223"},{"ruleId":"1215","severity":1,"message":"1216","line":34,"column":31,"nodeType":"1217","messageId":"1218","endLine":36,"endColumn":2,"fix":"1224"},{"ruleId":"1215","severity":1,"message":"1216","line":38,"column":116,"nodeType":"1217","messageId":"1218","endLine":53,"endColumn":2,"fix":"1225"},{"ruleId":"1215","severity":1,"message":"1216","line":55,"column":29,"nodeType":"1217","messageId":"1218","endLine":57,"endColumn":2,"fix":"1226"},{"ruleId":"1149","severity":1,"message":"1227","line":33,"column":10,"nodeType":"1151","messageId":"1152","endLine":33,"endColumn":14},{"ruleId":"1149","severity":1,"message":"1228","line":10,"column":10,"nodeType":"1151","messageId":"1152","endLine":10,"endColumn":21},{"ruleId":"1169","severity":1,"message":"1229","line":16,"column":11,"nodeType":"1230","messageId":"1171","endLine":16,"endColumn":15},{"ruleId":"1169","severity":1,"message":"1231","line":16,"column":17,"nodeType":"1230","messageId":"1171","endLine":16,"endColumn":28},{"ruleId":"1169","severity":1,"message":"1232","line":16,"column":30,"nodeType":"1230","messageId":"1171","endLine":16,"endColumn":41},{"ruleId":"1169","severity":1,"message":"1233","line":23,"column":29,"nodeType":"1151","messageId":"1171","endLine":23,"endColumn":35},{"ruleId":"1169","severity":1,"message":"1234","line":30,"column":21,"nodeType":"1151","messageId":"1171","endLine":30,"endColumn":30},{"ruleId":"1169","severity":1,"message":"1233","line":31,"column":31,"nodeType":"1151","messageId":"1171","endLine":31,"endColumn":37},{"ruleId":"1169","severity":1,"message":"1233","line":32,"column":32,"nodeType":"1151","messageId":"1171","endLine":32,"endColumn":38},{"ruleId":"1169","severity":1,"message":"1234","line":37,"column":28,"nodeType":"1151","messageId":"1171","endLine":37,"endColumn":37},{"ruleId":"1149","severity":1,"message":"1235","line":3,"column":19,"nodeType":"1151","messageId":"1152","endLine":3,"endColumn":23},{"ruleId":"1215","severity":1,"message":"1216","line":3,"column":28,"nodeType":"1217","messageId":"1218","endLine":5,"endColumn":2,"fix":"1236"},{"ruleId":"1215","severity":1,"message":"1216","line":6,"column":40,"nodeType":"1217","messageId":"1218","endLine":8,"endColumn":2,"fix":"1237"},{"ruleId":"1215","severity":1,"message":"1216","line":9,"column":104,"nodeType":"1217","messageId":"1218","endLine":21,"endColumn":2,"fix":"1238"},{"ruleId":"1215","severity":1,"message":"1216","line":22,"column":110,"nodeType":"1217","messageId":"1218","endLine":34,"endColumn":2,"fix":"1239"},{"ruleId":"1215","severity":1,"message":"1216","line":35,"column":32,"nodeType":"1217","messageId":"1218","endLine":37,"endColumn":2,"fix":"1240"},{"ruleId":"1215","severity":1,"message":"1216","line":38,"column":32,"nodeType":"1217","messageId":"1218","endLine":40,"endColumn":2,"fix":"1241"},{"ruleId":"1169","severity":1,"message":"1242","line":7,"column":33,"nodeType":"1230","messageId":"1171","endLine":7,"endColumn":41},{"ruleId":"1215","severity":1,"message":"1216","line":3,"column":22,"nodeType":"1217","messageId":"1218","endLine":5,"endColumn":2,"fix":"1243"},{"ruleId":"1215","severity":1,"message":"1216","line":6,"column":23,"nodeType":"1217","messageId":"1218","endLine":8,"endColumn":2,"fix":"1244"},{"ruleId":"1215","severity":1,"message":"1216","line":9,"column":33,"nodeType":"1217","messageId":"1218","endLine":11,"endColumn":2,"fix":"1245"},{"ruleId":"1215","severity":1,"message":"1216","line":12,"column":60,"nodeType":"1217","messageId":"1218","endLine":14,"endColumn":2,"fix":"1246"},{"ruleId":"1215","severity":1,"message":"1216","line":15,"column":30,"nodeType":"1217","messageId":"1218","endLine":17,"endColumn":2,"fix":"1247"},{"ruleId":"1215","severity":1,"message":"1216","line":18,"column":24,"nodeType":"1217","messageId":"1218","endLine":20,"endColumn":2,"fix":"1248"},{"ruleId":"1215","severity":1,"message":"1216","line":22,"column":31,"nodeType":"1217","messageId":"1218","endLine":24,"endColumn":2,"fix":"1249"},{"ruleId":"1169","severity":1,"message":"1229","line":15,"column":11,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":15},{"ruleId":"1169","severity":1,"message":"1231","line":15,"column":17,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":28},{"ruleId":"1169","severity":1,"message":"1232","line":15,"column":30,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":41},{"ruleId":"1149","severity":1,"message":"1250","line":16,"column":10,"nodeType":"1151","messageId":"1152","endLine":16,"endColumn":20},{"ruleId":"1169","severity":1,"message":"1251","line":23,"column":33,"nodeType":"1151","messageId":"1171","endLine":23,"endColumn":43},{"ruleId":"1169","severity":1,"message":"1252","line":24,"column":33,"nodeType":"1151","messageId":"1171","endLine":24,"endColumn":43},{"ruleId":"1169","severity":1,"message":"1234","line":32,"column":21,"nodeType":"1151","messageId":"1171","endLine":32,"endColumn":30},{"ruleId":"1169","severity":1,"message":"1234","line":34,"column":19,"nodeType":"1151","messageId":"1171","endLine":34,"endColumn":28},{"ruleId":"1169","severity":1,"message":"1251","line":37,"column":40,"nodeType":"1151","messageId":"1171","endLine":37,"endColumn":50},{"ruleId":"1169","severity":1,"message":"1234","line":44,"column":28,"nodeType":"1151","messageId":"1171","endLine":44,"endColumn":37},{"ruleId":"1169","severity":1,"message":"1229","line":15,"column":11,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":15},{"ruleId":"1169","severity":1,"message":"1231","line":15,"column":17,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":28},{"ruleId":"1169","severity":1,"message":"1232","line":15,"column":30,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":41},{"ruleId":"1169","severity":1,"message":"1253","line":22,"column":31,"nodeType":"1151","messageId":"1171","endLine":22,"endColumn":39},{"ruleId":"1169","severity":1,"message":"1234","line":29,"column":21,"nodeType":"1151","messageId":"1171","endLine":29,"endColumn":30},{"ruleId":"1169","severity":1,"message":"1253","line":30,"column":31,"nodeType":"1151","messageId":"1171","endLine":30,"endColumn":39},{"ruleId":"1169","severity":1,"message":"1253","line":31,"column":29,"nodeType":"1151","messageId":"1171","endLine":31,"endColumn":37},{"ruleId":"1169","severity":1,"message":"1234","line":36,"column":28,"nodeType":"1151","messageId":"1171","endLine":36,"endColumn":37},{"ruleId":"1169","severity":1,"message":"1229","line":15,"column":11,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":15},{"ruleId":"1169","severity":1,"message":"1231","line":15,"column":17,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":28},{"ruleId":"1169","severity":1,"message":"1232","line":15,"column":30,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":41},{"ruleId":"1169","severity":1,"message":"1253","line":22,"column":31,"nodeType":"1151","messageId":"1171","endLine":22,"endColumn":39},{"ruleId":"1169","severity":1,"message":"1234","line":29,"column":21,"nodeType":"1151","messageId":"1171","endLine":29,"endColumn":30},{"ruleId":"1169","severity":1,"message":"1253","line":30,"column":31,"nodeType":"1151","messageId":"1171","endLine":30,"endColumn":39},{"ruleId":"1169","severity":1,"message":"1253","line":31,"column":29,"nodeType":"1151","messageId":"1171","endLine":31,"endColumn":37},{"ruleId":"1169","severity":1,"message":"1234","line":36,"column":28,"nodeType":"1151","messageId":"1171","endLine":36,"endColumn":37},{"ruleId":"1149","severity":1,"message":"1254","line":6,"column":62,"nodeType":"1151","messageId":"1152","endLine":6,"endColumn":70},{"ruleId":"1149","severity":1,"message":"1153","line":6,"column":21,"nodeType":"1151","messageId":"1152","endLine":6,"endColumn":27},{"ruleId":"1157","severity":1,"message":"1255","line":47,"column":6,"nodeType":"1159","endLine":47,"endColumn":16,"suggestions":"1256","suppressions":"1257"},{"ruleId":"1149","severity":1,"message":"1258","line":1,"column":10,"nodeType":"1151","messageId":"1152","endLine":1,"endColumn":19},{"ruleId":"1149","severity":1,"message":"1259","line":2,"column":10,"nodeType":"1151","messageId":"1152","endLine":2,"endColumn":13},{"ruleId":"1149","severity":1,"message":"1260","line":2,"column":15,"nodeType":"1151","messageId":"1152","endLine":2,"endColumn":18},{"ruleId":"1169","severity":1,"message":"1229","line":15,"column":11,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":15},{"ruleId":"1169","severity":1,"message":"1231","line":15,"column":17,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":28},{"ruleId":"1169","severity":1,"message":"1232","line":15,"column":30,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":41},{"ruleId":"1169","severity":1,"message":"1261","line":15,"column":43,"nodeType":"1230","messageId":"1171","endLine":15,"endColumn":54},{"ruleId":"1149","severity":1,"message":"1262","line":16,"column":10,"nodeType":"1151","messageId":"1152","endLine":16,"endColumn":14},{"ruleId":"1149","severity":1,"message":"1263","line":16,"column":16,"nodeType":"1151","messageId":"1152","endLine":16,"endColumn":23},{"ruleId":"1149","severity":1,"message":"1264","line":102,"column":27,"nodeType":"1151","messageId":"1152","endLine":102,"endColumn":32},{"ruleId":"1149","severity":1,"message":"1227","line":34,"column":10,"nodeType":"1151","messageId":"1152","endLine":34,"endColumn":14},{"ruleId":"1149","severity":1,"message":"1265","line":38,"column":9,"nodeType":"1151","messageId":"1152","endLine":38,"endColumn":17},{"ruleId":"1149","severity":1,"message":"1266","line":4,"column":10,"nodeType":"1151","messageId":"1152","endLine":4,"endColumn":14},{"ruleId":"1149","severity":1,"message":"1267","line":4,"column":39,"nodeType":"1151","messageId":"1152","endLine":4,"endColumn":46},{"ruleId":"1149","severity":1,"message":"1150","line":4,"column":48,"nodeType":"1151","messageId":"1152","endLine":4,"endColumn":53},{"ruleId":"1149","severity":1,"message":"1153","line":4,"column":55,"nodeType":"1151","messageId":"1152","endLine":4,"endColumn":61},{"ruleId":"1149","severity":1,"message":"1154","line":9,"column":8,"nodeType":"1151","messageId":"1152","endLine":9,"endColumn":15},{"ruleId":"1149","severity":1,"message":"1265","line":25,"column":11,"nodeType":"1151","messageId":"1152","endLine":25,"endColumn":19},{"ruleId":"1149","severity":1,"message":"1268","line":11,"column":3,"nodeType":"1151","messageId":"1152","endLine":11,"endColumn":22},{"ruleId":"1149","severity":1,"message":"1269","line":13,"column":3,"nodeType":"1151","messageId":"1152","endLine":13,"endColumn":22},{"ruleId":"1149","severity":1,"message":"1163","line":7,"column":10,"nodeType":"1151","messageId":"1152","endLine":7,"endColumn":21},"lines-around-directive",["1270"],"no-new-object",["1271"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-return-await",[],"no-unused-vars","'Stack' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Iconify' is defined but never used.","'sentenceCase' is defined but never used.","'handleOpenMenu' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'hdNgay'. Either include it or remove the dependency array.","ArrayExpression",["1272"],"'setLoading' is assigned a value but never used.","'listData' is assigned a value but never used.","'ProductSort' is defined but never used.","'setImage' is assigned a value but never used.","'ModelUpdateGiamGia' is defined but never used.","'generateNewCode' is assigned a value but never used.","'getIdHttp' is defined but never used.","'formattedDate' is assigned a value but never used.","react/prop-types","'data' is missing in props validation","missingPropType","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getAllSp'. Either include it or remove the dependency array.",["1273"],"'todayAtNoon' is assigned a value but never used.","'parsedStartDate' is assigned a value but never used.","react/button-has-type","Missing an explicit type attribute for button","JSXElement","missingType","'props' is defined but never used.","react/jsx-key","Missing \"key\" prop for element in array","missingArrayKey","'setMaTaiKhoan' is assigned a value but never used.","'setTrangThai' is assigned a value but never used.","'result' is assigned a value but never used.","'Navigate' is defined but never used.","'lastGeneratedNumber' is assigned a value but never used.","'setLastGeneratedNumber' is assigned a value but never used.","'emptyRows' is assigned a value but never used.","'isNotFound' is assigned a value but never used.","'handlePageClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchQuanHuyenAndPhuongXa'. Either include it or remove the dependency array.",["1274"],["1275"],"'getPhuongXa' is defined but never used.","'getQuanHuyen' is defined but never used.","'getTinhThanhPho' is defined but never used.","'FormHelperText' is defined but never used.","'setDiachiCuThe' is assigned a value but never used.","Assignments to the 'selectedProvinceName' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","LogicalExpression","Assignments to the 'selectedDistrictName' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'selectedWardName' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'generateRandomCode'. Either include it or remove the dependency array.",["1276"],"'randomCode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOne'. Either include it or remove the dependency array.",["1277"],"react-hooks/rules-of-hooks","React Hook \"useMediaQuery\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.",["1278"],"arrow-body-style","Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","ArrowFunctionExpression","unexpectedSingleBlock",{"range":"1279","text":"1280"},{"range":"1281","text":"1282"},{"range":"1283","text":"1284"},{"range":"1285","text":"1286"},{"range":"1287","text":"1288"},{"range":"1289","text":"1290"},{"range":"1291","text":"1292"},{"range":"1293","text":"1294"},"'moTa' is assigned a value but never used.","'useNavigate' is defined but never used.","'open' is missing in props validation","Property","'handleClose' is missing in props validation","'information' is missing in props validation","'information.idGgct' is missing in props validation","'information.trangThai' is missing in props validation","'page' is defined but never used.",{"range":"1295","text":"1296"},{"range":"1297","text":"1298"},{"range":"1299","text":"1300"},{"range":"1301","text":"1302"},{"range":"1303","text":"1304"},{"range":"1305","text":"1306"},"'children' is missing in props validation",{"range":"1307","text":"1308"},{"range":"1309","text":"1310"},{"range":"1311","text":"1312"},{"range":"1313","text":"1314"},{"range":"1315","text":"1316"},{"range":"1317","text":"1318"},{"range":"1319","text":"1320"},"'idTaiKhoan' is assigned a value but never used.","'information.idTaiKhoan' is missing in props validation","'information.maTaiKhoan' is missing in props validation","'information.idCoupon' is missing in props validation","'Checkbox' is defined but never used.","React Hook useEffect has missing dependencies: 'onCloseNav' and 'openNav'. Either include them or remove the dependency array. If 'onCloseNav' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1321"],["1322"],"'useEffect' is defined but never used.","'set' is defined but never used.","'sub' is defined but never used.","'getDetailHD' is missing in props validation","'idHD' is assigned a value but never used.","'setIdhd' is assigned a value but never used.","'index' is defined but never used.","'navigate' is assigned a value but never used.","'Link' is defined but never used.","'Divider' is defined but never used.","'deleteProductOnCart' is defined but never used.","'upadteProductOnCart' is defined but never used.","padding-line-between-statements","no-object-constructor",{"desc":"1323","fix":"1324"},{"desc":"1325","fix":"1326"},{"desc":"1327","fix":"1328"},{"kind":"1329","justification":"1330"},{"desc":"1331","fix":"1332"},{"desc":"1333","fix":"1334"},{"kind":"1329","justification":"1330"},[69,139],"\r\n   custom.get(`/san-pham/view-all?p=${page}`) // Call API\r\n",[177,251],"\r\n   custom.get(`/san-pham/getSpWithImg?p=${page}`) // Call API\r\n",[278,336],"\r\n   custom.get(`/san-pham/listSP`) // Call API\r\n",[368,434],"\r\n   custom.get(`/san-pham/detail/${idSp}`) // Call API\r\n",[546,733],"custom.post('/san-pham/add', {\r\n    maSp,\r\n    tenSp,\r\n    idCl,\r\n    idMs,\r\n    idLsp,\r\n    idXx,\r\n    idCoAo,\r\n    idTayAo,\r\n    moTa,\r\n    giaBan,\r\n    trangThai,\r\n  })",[766,821],"custom.delete(`/san-pham/delete/${id}`)",[941,1141],"custom.put(`/san-pham/update`, {\r\n    idSp,\r\n    maSp,\r\n    tenSp,\r\n    idCl,\r\n    idMs,\r\n    idLsp,\r\n    idXx,\r\n    idCoAo,\r\n    idTayAo,\r\n    moTa,\r\n    giaBan,\r\n    trangThai,\r\n  })",[1174,1278],"\r\n   custom.get('/san-pham/top-sp-trend') // Thay đổi URL dựa trên định nghĩa URL API của bạn\r\n",[67,129],"\r\n   custom.get(`/tai-khoan/view-alls`) // Call API\r\n",[171,265],"\r\n   custom.get(`/tai-khoan/view-all?p=${page}&trangThai=${trangThai}`) // Call API\r\n",[371,543],"custom.post('/tai-khoan/add', {\r\n    maTaiKhoan,\r\n    idChucVu,\r\n    ho,\r\n    ten,\r\n    sdt,\r\n    email,\r\n    soCanCuoc,\r\n    matKhau,\r\n    trangThai,\r\n  })",[655,835],"custom.put(`/tai-khoan/update/${id}`, {\r\n    maTaiKhoan,\r\n    idChucVu,\r\n    ho,\r\n    ten,\r\n    sdt,\r\n    email,\r\n    matKhau,\r\n    soCanCuoc,\r\n    trangThai,\r\n  })",[869,924],"custom.patch(`/tai-khoan/delete/${id}`)",[958,1011],"custom.get(`/tai-khoan/detail/${id}`)",[61,120],"\r\n   custom.get(`/chuc-vu/view-all`) // Call API\r\n",[145,208],"\r\n   custom.get(`/chuc-vu/list-chuc-vu`) // Call API\r\n",[243,328],"\r\n   custom.get(`/tai-khoan/view-alls?trangThai=${trangThai}`) // Call API\r\n",[390,469],"custom.post(\"/chuc-vu/add\", { maCv, tenCv, ngayTao ,trangThai})",[501,555],"custom.delete(`/chuc-vu/delete/${id}`)",[581,632],"custom.get(`/chuc-vu/detail/${id}`)",[666,726],"custom.get(`/chuc-vu/detailTen`, { params })",{"desc":"1335","fix":"1336"},{"kind":"1329","justification":"1330"},"Update the dependencies array to be: [hdNgay]",{"range":"1337","text":"1338"},"Update the dependencies array to be: [getAllSp]",{"range":"1339","text":"1340"},"Update the dependencies array to be: [fetchQuanHuyenAndPhuongXa, listData]",{"range":"1341","text":"1342"},"directive","","Update the dependencies array to be: [generateRandomCode]",{"range":"1343","text":"1344"},"Update the dependencies array to be: [getOne]",{"range":"1345","text":"1346"},"Update the dependencies array to be: [onCloseNav, openNav, pathname]",{"range":"1347","text":"1348"},[2090,2092],"[hdNgay]",[3831,3833],"[getAllSp]",[2039,2049],"[fetchQuanHuyenAndPhuongXa, listData]",[3749,3751],"[generateRandomCode]",[3941,3943],"[getOne]",[1419,1429],"[onCloseNav, openNav, pathname]"]
=======
[{"E:\\Du_an_5F\\fullstack-fontend\\src\\index.js":"1","E:\\Du_an_5F\\fullstack-fontend\\src\\App.js":"2","E:\\Du_an_5F\\fullstack-fontend\\src\\reportWebVitals.js":"3","E:\\Du_an_5F\\fullstack-fontend\\src\\serviceWorker.js":"4","E:\\Du_an_5F\\fullstack-fontend\\src\\routes.js":"5","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\index.js":"6","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\chart\\index.js":"7","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\scroll-to-top\\index.js":"8","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\LoginPage.js":"9","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\DashboardAppPage.js":"10","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\BlogPage.js":"11","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\UserPage.js":"12","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Cart-Bill-ADM.js":"13","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Page404.js":"14","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\OrderManagement.js":"15","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\OrderManagement-Timeline.js":"16","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\DirectSale-ADM.js":"17","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\ProductsPage.js":"18","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Contact.js":"19","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Home.js":"20","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\SignUp.js":"21","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Cart.js":"22","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Payment-Page.js":"23","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Detail-product.js":"24","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\discounts\\DiscountPage.js":"25","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\discounts\\ModalsUpdateGiamGia.js":"26","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\discounts\\ModalsAddNewGiamGia.js":"27","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Staff\\Modal-Update-Staff.js":"28","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Staff\\Modal-User-Staff.js":"29","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Staff\\Modal-Add-Staff.js":"30","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\ClientsPage.js":"31","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\AddClients.js":"32","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\SanPham\\SanPhamMain.js":"33","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\SanPham\\ModelUpdate.js":"34","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\UpdateClients.js":"35","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\SanPham\\ModelAdd.js":"36","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\diaChi\\AllAddress.js":"37","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\diaChi\\UpdateAddress.js":"38","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\diaChi\\AddressByClient.js":"39","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\diaChi\\AddAddress.js":"40","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\index.js":"41","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout-Client.js":"42","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\palette.js":"43","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\shadows.js":"44","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\globalStyles.js":"45","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\typography.js":"46","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\customShadows.js":"47","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\simple\\index.js":"48","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\chart\\styles.js":"49","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\scroll-to-top\\ScrollToTop.js":"50","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\chart\\useChart.js":"51","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\index.js":"52","E:\\Du_an_5F\\fullstack-fontend\\src\\hooks\\useResponsive.js":"53","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\bill-service.js":"54","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\taiKhoanKhachHangSevice.js":"55","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\san-pham-service.js":"56","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\OrderManagementTimeLine.js":"57","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\OderManagementSevice.js":"58","E:\\Du_an_5F\\fullstack-fontend\\src\\_mock\\user.js":"59","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\BillSevice.js":"60","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Delete-DirectSale.js":"61","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Create-Online.js":"62","E:\\Du_an_5F\\fullstack-fontend\\src\\_mock\\blog.js":"63","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modals-AddProduct.js":"64","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Delete-All-Product.js":"65","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modals-Update-Product-Cart.js":"66","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modals-AddKhachHang.js":"67","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Payment-Confirm.js":"68","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\SanPhamService.js":"69","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Delete-Product.js":"70","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Update-Status.js":"71","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modals-SelectHistoryBill.js":"72","E:\\Du_an_5F\\fullstack-fontend\\src\\MappingTimeLine\\Timeline.jsx":"73","E:\\Du_an_5F\\fullstack-fontend\\src\\MappingTimeLine\\TimelineEvent.jsx":"74","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\logo\\index.js":"75","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\iconify\\index.js":"76","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\scrollbar\\index.js":"77","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\giamGiaService.js":"78","E:\\Du_an_5F\\fullstack-fontend\\src\\utils\\formatNumber.js":"79","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\client\\Detail-Product.js":"80","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\discounts\\Modal-Delete-Discount.js":"81","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\chucVuService.js":"82","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\taiKhoanNhanVienService.js":"83","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\client\\Detail-Cart.js":"84","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Staff\\Modal-Delete-Staff.js":"85","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\auth\\login\\index.js":"86","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\index.js":"87","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\index.js":"88","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\user\\index.js":"89","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\AlertContext.js":"90","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\index.js":"91","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\AnhService.js":"92","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\ChiTietSPService.js":"93","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\CloudinaryService.js":"94","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\XuatXuService.js":"95","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\ChatLieuService.js":"96","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\LoaiCoAoService.js":"97","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\MauSacService.js":"98","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\LoaiSPService.js":"99","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\OngTayAoService.js":"100","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\label\\index.js":"101","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\color-utils\\index.js":"102","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\SizeService.js":"103","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\apiDiaChi.js":"104","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\diaChiSevice.js":"105","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\AlertSnackbar.js":"106","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\simple\\SimpleLayout.js":"107","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout.js":"108","E:\\Du_an_5F\\fullstack-fontend\\src\\utils\\cssStyles.js":"109","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\client\\Footer.js":"110","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\client\\Header.js":"111","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\custom-axios.js":"112","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Paper.js":"113","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Tooltip.js":"114","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Backdrop.js":"115","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Table.js":"116","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Card.js":"117","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Typography.js":"118","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Autocomplete.js":"119","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Input.js":"120","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Button.js":"121","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\DirectSaleSevice.js":"122","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\iconify\\Iconify.js":"123","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\logo\\Logo.js":"124","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\scrollbar\\Scrollbar.js":"125","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentVisits.js":"126","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\auth\\login\\LoginForm.js":"127","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTasks.js":"128","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppOrderTimeline.js":"129","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppNewsUpdate.js":"130","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTrafficBySite.js":"131","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWebsiteVisits.js":"132","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWidgetSummary.js":"133","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppConversionRates.js":"134","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostCard.js":"135","E:\\Du_an_5F\\fullstack-fontend\\src\\MappingTimeLine\\Placeholder.jsx":"136","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostsSort.js":"137","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentSubject.js":"138","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostsSearch.js":"139","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead.js":"140","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList.js":"141","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar-NoFilter.js":"142","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead-NoCheckbox.js":"143","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCard.js":"144","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar.js":"145","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-ADM.js":"146","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-Client.js":"147","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCartWidget.js":"148","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductListAll.js":"149","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSidebar.js":"150","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCardAll.js":"151","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSB.js":"152","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductSort.js":"153","E:\\Du_an_5F\\fullstack-fontend\\src\\_mock\\account.js":"154","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\color-utils\\ColorPreview.js":"155","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\label\\Label.js":"156","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\color-utils\\ColorMultiPicker.js":"157","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\color-utils\\ColorSinglePicker.js":"158","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\header\\index.js":"159","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\index.js":"160","E:\\Du_an_5F\\fullstack-fontend\\src\\utils\\formatTime.js":"161","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\scrollbar\\styles.js":"162","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Detail-SanPham.js":"163","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\svg-color\\index.js":"164","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\color-utils\\Icon.js":"165","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\label\\styles.js":"166","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\nav-section\\index.js":"167","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\header\\LanguagePopover.js":"168","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\header\\Searchbar.js":"169","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\header\\AccountPopover.js":"170","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\header\\NotificationsPopover.js":"171","E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\config.js":"172","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\svg-color\\SvgColor.js":"173","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\nav-section\\NavSection.js":"174","E:\\Du_an_5F\\fullstack-fontend\\src\\components\\nav-section\\styles.js":"175","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\OrderClient-Timeline.js":"176","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\SelectAllBill.js":"177","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Payment-Page1.js":"178","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\client\\SelectBill.js":"179","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modals-Add-Address.js":"180","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\client\\Payment.js":"181","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\client\\Modals-ReturnItem.js":"182","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\client\\Modals-DetailReturnItem.js":"183"},{"size":714,"mtime":1700536288050,"results":"184","hashOfConfig":"185"},{"size":972,"mtime":1700536288012,"results":"186","hashOfConfig":"185"},{"size":377,"mtime":1700536288106,"results":"187","hashOfConfig":"185"},{"size":5175,"mtime":1700536288166,"results":"188","hashOfConfig":"185"},{"size":5833,"mtime":1701850359000,"results":"189","hashOfConfig":"185"},{"size":1214,"mtime":1700536288169,"results":"190","hashOfConfig":"185"},{"size":248,"mtime":1700536288022,"results":"191","hashOfConfig":"185"},{"size":42,"mtime":1700536288032,"results":"192","hashOfConfig":"185"},{"size":2586,"mtime":1701703604160,"results":"193","hashOfConfig":"185"},{"size":8723,"mtime":1701850632909,"results":"194","hashOfConfig":"185"},{"size":1568,"mtime":1700536288065,"results":"195","hashOfConfig":"185"},{"size":8747,"mtime":1700536288085,"results":"196","hashOfConfig":"185"},{"size":35652,"mtime":1701850358989,"results":"197","hashOfConfig":"185"},{"size":1591,"mtime":1700536288073,"results":"198","hashOfConfig":"185"},{"size":15033,"mtime":1701850358992,"results":"199","hashOfConfig":"185"},{"size":21624,"mtime":1701850358992,"results":"200","hashOfConfig":"185"},{"size":13232,"mtime":1701850358991,"results":"201","hashOfConfig":"185"},{"size":2165,"mtime":1700536288091,"results":"202","hashOfConfig":"185"},{"size":1710,"mtime":1700536288087,"results":"203","hashOfConfig":"185"},{"size":8885,"mtime":1700536288089,"results":"204","hashOfConfig":"185"},{"size":7349,"mtime":1701703604163,"results":"205","hashOfConfig":"185"},{"size":21513,"mtime":1701850358993,"results":"206","hashOfConfig":"185"},{"size":14424,"mtime":1700536288090,"results":"207","hashOfConfig":"185"},{"size":24668,"mtime":1701850358994,"results":"208","hashOfConfig":"185"},{"size":14338,"mtime":1700536288097,"results":"209","hashOfConfig":"185"},{"size":23901,"mtime":1700536288101,"results":"210","hashOfConfig":"185"},{"size":23974,"mtime":1701850358999,"results":"211","hashOfConfig":"185"},{"size":8406,"mtime":1701712087882,"results":"212","hashOfConfig":"185"},{"size":11608,"mtime":1702116689695,"results":"213","hashOfConfig":"185"},{"size":7172,"mtime":1701690187589,"results":"214","hashOfConfig":"185"},{"size":10633,"mtime":1702098420743,"results":"215","hashOfConfig":"185"},{"size":4913,"mtime":1700536288102,"results":"216","hashOfConfig":"185"},{"size":13570,"mtime":1700536288079,"results":"217","hashOfConfig":"185"},{"size":30261,"mtime":1700536288077,"results":"218","hashOfConfig":"185"},{"size":8737,"mtime":1700536288105,"results":"219","hashOfConfig":"185"},{"size":9532,"mtime":1700536288076,"results":"220","hashOfConfig":"185"},{"size":10354,"mtime":1701850358998,"results":"221","hashOfConfig":"185"},{"size":13746,"mtime":1700536288095,"results":"222","hashOfConfig":"185"},{"size":14321,"mtime":1700536288094,"results":"223","hashOfConfig":"185"},{"size":12478,"mtime":1700536288093,"results":"224","hashOfConfig":"185"},{"size":46,"mtime":1700536288061,"results":"225","hashOfConfig":"185"},{"size":516,"mtime":1700536288057,"results":"226","hashOfConfig":"185"},{"size":2040,"mtime":1700536288182,"results":"227","hashOfConfig":"185"},{"size":3000,"mtime":1700536288183,"results":"228","hashOfConfig":"185"},{"size":1306,"mtime":1700536288168,"results":"229","hashOfConfig":"185"},{"size":2435,"mtime":1700536288183,"results":"230","hashOfConfig":"185"},{"size":1261,"mtime":1700536288168,"results":"231","hashOfConfig":"185"},{"size":43,"mtime":1700536288065,"results":"232","hashOfConfig":"185"},{"size":2070,"mtime":1700536288023,"results":"233","hashOfConfig":"185"},{"size":335,"mtime":1700536288031,"results":"234","hashOfConfig":"185"},{"size":4415,"mtime":1700536288023,"results":"235","hashOfConfig":"185"},{"size":662,"mtime":1700536288181,"results":"236","hashOfConfig":"185"},{"size":1221,"mtime":1700536288049,"results":"237","hashOfConfig":"185"},{"size":2191,"mtime":1700536288158,"results":"238","hashOfConfig":"185"},{"size":1119,"mtime":1701850853065,"results":"239","hashOfConfig":"185"},{"size":1345,"mtime":1700536288164,"results":"240","hashOfConfig":"185"},{"size":1640,"mtime":1701850359002,"results":"241","hashOfConfig":"185"},{"size":263,"mtime":1700536288155,"results":"242","hashOfConfig":"185"},{"size":736,"mtime":1700536288017,"results":"243","hashOfConfig":"185"},{"size":2108,"mtime":1701850359001,"results":"244","hashOfConfig":"185"},{"size":3069,"mtime":1700536288038,"results":"245","hashOfConfig":"185"},{"size":4254,"mtime":1700536288035,"results":"246","hashOfConfig":"185"},{"size":1943,"mtime":1700536288017,"results":"247","hashOfConfig":"185"},{"size":3838,"mtime":1700536288046,"results":"248","hashOfConfig":"185"},{"size":3098,"mtime":1700536288037,"results":"249","hashOfConfig":"185"},{"size":12357,"mtime":1701850358986,"results":"250","hashOfConfig":"185"},{"size":11045,"mtime":1700536288045,"results":"251","hashOfConfig":"185"},{"size":9009,"mtime":1701850358983,"results":"252","hashOfConfig":"185"},{"size":1178,"mtime":1700536288157,"results":"253","hashOfConfig":"185"},{"size":3204,"mtime":1701850358982,"results":"254","hashOfConfig":"185"},{"size":3783,"mtime":1701850358984,"results":"255","hashOfConfig":"185"},{"size":10390,"mtime":1701850358985,"results":"256","hashOfConfig":"185"},{"size":4266,"mtime":1700536288014,"results":"257","hashOfConfig":"185"},{"size":6647,"mtime":1700536288015,"results":"258","hashOfConfig":"185"},{"size":35,"mtime":1700536288028,"results":"259","hashOfConfig":"185"},{"size":38,"mtime":1700536288026,"results":"260","hashOfConfig":"185"},{"size":40,"mtime":1700536288032,"results":"261","hashOfConfig":"185"},{"size":2068,"mtime":1700536288163,"results":"262","hashOfConfig":"185"},{"size":912,"mtime":1700536288185,"results":"263","hashOfConfig":"185"},{"size":126,"mtime":1700536288162,"results":"264","hashOfConfig":"185"},{"size":2829,"mtime":1700536288098,"results":"265","hashOfConfig":"185"},{"size":723,"mtime":1701712213530,"results":"266","hashOfConfig":"185"},{"size":934,"mtime":1701706803423,"results":"267","hashOfConfig":"185"},{"size":990,"mtime":1701850359002,"results":"268","hashOfConfig":"185"},{"size":3137,"mtime":1700536288082,"results":"269","hashOfConfig":"185"},{"size":53,"mtime":1700536288149,"results":"270","hashOfConfig":"185"},{"size":587,"mtime":1700536288132,"results":"271","hashOfConfig":"185"},{"size":185,"mtime":1700536288134,"results":"272","hashOfConfig":"185"},{"size":286,"mtime":1700536288144,"results":"273","hashOfConfig":"185"},{"size":655,"mtime":1700536288053,"results":"274","hashOfConfig":"185"},{"size":670,"mtime":1700536288141,"results":"275","hashOfConfig":"185"},{"size":327,"mtime":1700536288150,"results":"276","hashOfConfig":"185"},{"size":1364,"mtime":1700536288152,"results":"277","hashOfConfig":"185"},{"size":257,"mtime":1700536288152,"results":"278","hashOfConfig":"185"},{"size":684,"mtime":1700536288158,"results":"279","hashOfConfig":"185"},{"size":700,"mtime":1700536288151,"results":"280","hashOfConfig":"185"},{"size":775,"mtime":1700536288154,"results":"281","hashOfConfig":"185"},{"size":676,"mtime":1700536288155,"results":"282","hashOfConfig":"185"},{"size":701,"mtime":1700536288154,"results":"283","hashOfConfig":"185"},{"size":794,"mtime":1700536288156,"results":"284","hashOfConfig":"185"},{"size":36,"mtime":1700536288027,"results":"285","hashOfConfig":"185"},{"size":195,"mtime":1700536288025,"results":"286","hashOfConfig":"185"},{"size":684,"mtime":1700536288157,"results":"287","hashOfConfig":"185"},{"size":422,"mtime":1700536288158,"results":"288","hashOfConfig":"185"},{"size":1123,"mtime":1700536288163,"results":"289","hashOfConfig":"185"},{"size":691,"mtime":1700536288056,"results":"290","hashOfConfig":"185"},{"size":742,"mtime":1700536288064,"results":"291","hashOfConfig":"185"},{"size":1402,"mtime":1700536288058,"results":"292","hashOfConfig":"185"},{"size":2593,"mtime":1700536288184,"results":"293","hashOfConfig":"185"},{"size":3113,"mtime":1700536288051,"results":"294","hashOfConfig":"185"},{"size":8598,"mtime":1701850358988,"results":"295","hashOfConfig":"185"},{"size":447,"mtime":1700536288162,"results":"296","hashOfConfig":"185"},{"size":314,"mtime":1700536288174,"results":"297","hashOfConfig":"185"},{"size":360,"mtime":1700536288180,"results":"298","hashOfConfig":"185"},{"size":419,"mtime":1700536288170,"results":"299","hashOfConfig":"185"},{"size":341,"mtime":1700536288177,"results":"300","hashOfConfig":"185"},{"size":852,"mtime":1700536288172,"results":"301","hashOfConfig":"185"},{"size":365,"mtime":1700536288181,"results":"302","hashOfConfig":"185"},{"size":289,"mtime":1700536288170,"results":"303","hashOfConfig":"185"},{"size":1776,"mtime":1700536288172,"results":"304","hashOfConfig":"185"},{"size":1156,"mtime":1700536288171,"results":"305","hashOfConfig":"185"},{"size":741,"mtime":1700536288153,"results":"306","hashOfConfig":"185"},{"size":647,"mtime":1700536288026,"results":"307","hashOfConfig":"185"},{"size":3413,"mtime":1700536288028,"results":"308","hashOfConfig":"185"},{"size":966,"mtime":1700536288032,"results":"309","hashOfConfig":"185"},{"size":2366,"mtime":1700536288127,"results":"310","hashOfConfig":"185"},{"size":5644,"mtime":1701703604167,"results":"311","hashOfConfig":"185"},{"size":4207,"mtime":1700536288130,"results":"312","hashOfConfig":"185"},{"size":2128,"mtime":1700536288128,"results":"313","hashOfConfig":"185"},{"size":2210,"mtime":1700536288128,"results":"314","hashOfConfig":"185"},{"size":1278,"mtime":1700536288130,"results":"315","hashOfConfig":"185"},{"size":1335,"mtime":1700536288131,"results":"316","hashOfConfig":"185"},{"size":1884,"mtime":1701685738634,"results":"317","hashOfConfig":"185"},{"size":1377,"mtime":1700536288127,"results":"318","hashOfConfig":"185"},{"size":5065,"mtime":1700536288133,"results":"319","hashOfConfig":"185"},{"size":3060,"mtime":1700536288013,"results":"320","hashOfConfig":"185"},{"size":593,"mtime":1700536288134,"results":"321","hashOfConfig":"185"},{"size":1981,"mtime":1700536288127,"results":"322","hashOfConfig":"185"},{"size":1413,"mtime":1700536288133,"results":"323","hashOfConfig":"185"},{"size":2087,"mtime":1700536288142,"results":"324","hashOfConfig":"185"},{"size":599,"mtime":1700536288139,"results":"325","hashOfConfig":"185"},{"size":2407,"mtime":1700536288143,"results":"326","hashOfConfig":"185"},{"size":1658,"mtime":1700536288142,"results":"327","hashOfConfig":"185"},{"size":2214,"mtime":1700536288135,"results":"328","hashOfConfig":"185"},{"size":2404,"mtime":1700536288144,"results":"329","hashOfConfig":"185"},{"size":1614,"mtime":1700536288138,"results":"330","hashOfConfig":"185"},{"size":1715,"mtime":1700536288139,"results":"331","hashOfConfig":"185"},{"size":1251,"mtime":1700536288136,"results":"332","hashOfConfig":"185"},{"size":604,"mtime":1700536288140,"results":"333","hashOfConfig":"185"},{"size":5531,"mtime":1700536288137,"results":"334","hashOfConfig":"185"},{"size":2743,"mtime":1700536288135,"results":"335","hashOfConfig":"185"},{"size":10884,"mtime":1700536288136,"results":"336","hashOfConfig":"185"},{"size":1697,"mtime":1700536288140,"results":"337","hashOfConfig":"185"},{"size":476,"mtime":1701850358902,"results":"338","hashOfConfig":"185"},{"size":1214,"mtime":1700536288024,"results":"339","hashOfConfig":"185"},{"size":1395,"mtime":1700536288026,"results":"340","hashOfConfig":"185"},{"size":1211,"mtime":1700536288024,"results":"341","hashOfConfig":"185"},{"size":1002,"mtime":1700536288024,"results":"342","hashOfConfig":"185"},{"size":1982,"mtime":1700536288061,"results":"343","hashOfConfig":"185"},{"size":3556,"mtime":1700536288063,"results":"344","hashOfConfig":"185"},{"size":663,"mtime":1700536288186,"results":"345","hashOfConfig":"185"},{"size":811,"mtime":1700536288033,"results":"346","hashOfConfig":"185"},{"size":12853,"mtime":1700536288041,"results":"347","hashOfConfig":"185"},{"size":39,"mtime":1700536288034,"results":"348","hashOfConfig":"185"},{"size":1781,"mtime":1700536288025,"results":"349","hashOfConfig":"185"},{"size":2269,"mtime":1700536288027,"results":"350","hashOfConfig":"185"},{"size":41,"mtime":1700536288030,"results":"351","hashOfConfig":"185"},{"size":2214,"mtime":1700536288059,"results":"352","hashOfConfig":"185"},{"size":2187,"mtime":1700536288060,"results":"353","hashOfConfig":"185"},{"size":2989,"mtime":1700536288059,"results":"354","hashOfConfig":"185"},{"size":7760,"mtime":1700536288060,"results":"355","hashOfConfig":"185"},{"size":1211,"mtime":1700536288062,"results":"356","hashOfConfig":"185"},{"size":721,"mtime":1700536288033,"results":"357","hashOfConfig":"185"},{"size":1284,"mtime":1700536288029,"results":"358","hashOfConfig":"185"},{"size":690,"mtime":1700536288030,"results":"359","hashOfConfig":"185"},{"size":21546,"mtime":1701850358995,"results":"360","hashOfConfig":"185"},{"size":13627,"mtime":1701850358997,"results":"361","hashOfConfig":"185"},{"size":15268,"mtime":1701850358996,"results":"362","hashOfConfig":"185"},{"size":178,"mtime":1701850359004,"results":"363","hashOfConfig":"185"},{"size":9164,"mtime":1701850358984,"results":"364","hashOfConfig":"185"},{"size":348,"mtime":1701850359003,"results":"365","hashOfConfig":"185"},{"size":5666,"mtime":1701850358987,"results":"366","hashOfConfig":"185"},{"size":4835,"mtime":1701850358986,"results":"367","hashOfConfig":"185"},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},"1so8po6",{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"371"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"371"},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"371"},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"371"},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"415","messages":"416","suppressedMessages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"371"},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443"},{"filePath":"444","messages":"445","suppressedMessages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"447","messages":"448","suppressedMessages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"371"},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"371"},{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"371"},{"filePath":"459","messages":"460","suppressedMessages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"371"},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"371"},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"476","messages":"477","suppressedMessages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"479","messages":"480","suppressedMessages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"371"},{"filePath":"483","messages":"484","suppressedMessages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"486","messages":"487","suppressedMessages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"489","messages":"490","suppressedMessages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"371"},{"filePath":"493","messages":"494","suppressedMessages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"496","messages":"497","suppressedMessages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"371"},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"503","messages":"504","suppressedMessages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"506","messages":"507","suppressedMessages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"509","messages":"510","suppressedMessages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"512","messages":"513","suppressedMessages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"521","messages":"522","suppressedMessages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"524","messages":"525","suppressedMessages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"530","messages":"531","suppressedMessages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"533","messages":"534","suppressedMessages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"536","messages":"537","suppressedMessages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"542","messages":"543","suppressedMessages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587","usedDeprecatedRules":"371"},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"591","messages":"592","suppressedMessages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"594","messages":"595","suppressedMessages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"597","messages":"598","suppressedMessages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"600","messages":"601","suppressedMessages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"371"},{"filePath":"628","messages":"629","suppressedMessages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"631","messages":"632","suppressedMessages":"633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"634","messages":"635","suppressedMessages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"637","messages":"638","suppressedMessages":"639","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"371"},{"filePath":"641","messages":"642","suppressedMessages":"643","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"644","messages":"645","suppressedMessages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"647","messages":"648","suppressedMessages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","suppressedMessages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"656","usedDeprecatedRules":"371"},{"filePath":"657","messages":"658","suppressedMessages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"660","messages":"661","suppressedMessages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"663","messages":"664","suppressedMessages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"666","messages":"667","suppressedMessages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"669","messages":"670","suppressedMessages":"671","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"672","messages":"673","suppressedMessages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"675","messages":"676","suppressedMessages":"677","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"678","messages":"679","suppressedMessages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"681","messages":"682","suppressedMessages":"683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"684","messages":"685","suppressedMessages":"686","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"687","messages":"688","suppressedMessages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"690","messages":"691","suppressedMessages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"693","messages":"694","suppressedMessages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"696","messages":"697","suppressedMessages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"699","messages":"700","suppressedMessages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"702","messages":"703","suppressedMessages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"705","messages":"706","suppressedMessages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"708","messages":"709","suppressedMessages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"711","messages":"712","suppressedMessages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"714","messages":"715","suppressedMessages":"716","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"717","messages":"718","suppressedMessages":"719","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"720","usedDeprecatedRules":"371"},{"filePath":"721","messages":"722","suppressedMessages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"724","messages":"725","suppressedMessages":"726","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"727","messages":"728","suppressedMessages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"730","messages":"731","suppressedMessages":"732","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"733","messages":"734","suppressedMessages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"736","messages":"737","suppressedMessages":"738","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"739","messages":"740","suppressedMessages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"742","messages":"743","suppressedMessages":"744","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"745","messages":"746","suppressedMessages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"748","messages":"749","suppressedMessages":"750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"751","messages":"752","suppressedMessages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"754","messages":"755","suppressedMessages":"756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"757","messages":"758","suppressedMessages":"759","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"760","messages":"761","suppressedMessages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"763","messages":"764","suppressedMessages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"766","messages":"767","suppressedMessages":"768","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"769","usedDeprecatedRules":"371"},{"filePath":"770","messages":"771","suppressedMessages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"773","messages":"774","suppressedMessages":"775","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"776","messages":"777","suppressedMessages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"779","messages":"780","suppressedMessages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"782","messages":"783","suppressedMessages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"785","messages":"786","suppressedMessages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"788","messages":"789","suppressedMessages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"791","messages":"792","suppressedMessages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"794","messages":"795","suppressedMessages":"796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"797","messages":"798","suppressedMessages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"800","messages":"801","suppressedMessages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"803","messages":"804","suppressedMessages":"805","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"806","messages":"807","suppressedMessages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"809","messages":"810","suppressedMessages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"812","messages":"813","suppressedMessages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"815","messages":"816","suppressedMessages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"818","messages":"819","suppressedMessages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"821","messages":"822","suppressedMessages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"824","messages":"825","suppressedMessages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"827","messages":"828","suppressedMessages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"830","messages":"831","suppressedMessages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"833","messages":"834","suppressedMessages":"835","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"836","messages":"837","suppressedMessages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"839","messages":"840","suppressedMessages":"841","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"842","messages":"843","suppressedMessages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845","usedDeprecatedRules":"371"},{"filePath":"846","messages":"847","suppressedMessages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"849","messages":"850","suppressedMessages":"851","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"852","messages":"853","suppressedMessages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"855","messages":"856","suppressedMessages":"857","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"858","messages":"859","suppressedMessages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"861","messages":"862","suppressedMessages":"863","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"864","messages":"865","suppressedMessages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"867","messages":"868","suppressedMessages":"869","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"870","usedDeprecatedRules":"371"},{"filePath":"871","messages":"872","suppressedMessages":"873","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"874","messages":"875","suppressedMessages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"877","messages":"878","suppressedMessages":"879","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"880","messages":"881","suppressedMessages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"883","messages":"884","suppressedMessages":"885","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"886","messages":"887","suppressedMessages":"888","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"889","messages":"890","suppressedMessages":"891","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"892","messages":"893","suppressedMessages":"894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"895","messages":"896","suppressedMessages":"897","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"898","messages":"899","suppressedMessages":"900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"901","messages":"902","suppressedMessages":"903","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"904","messages":"905","suppressedMessages":"906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"907","messages":"908","suppressedMessages":"909","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"910","messages":"911","suppressedMessages":"912","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"913","messages":"914","suppressedMessages":"915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"916","messages":"917","suppressedMessages":"918","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"919","messages":"920","suppressedMessages":"921","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"922","usedDeprecatedRules":"371"},{"filePath":"923","messages":"924","suppressedMessages":"925","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"926","messages":"927","suppressedMessages":"928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"929","messages":"930","suppressedMessages":"931","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"932","messages":"933","suppressedMessages":"934","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},{"filePath":"935","messages":"936","suppressedMessages":"937","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"938","usedDeprecatedRules":"371"},{"filePath":"939","messages":"940","suppressedMessages":"941","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"371"},"E:\\Du_an_5F\\fullstack-fontend\\src\\index.js",[],[],["942","943","944","945","946","947","948"],"E:\\Du_an_5F\\fullstack-fontend\\src\\App.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\reportWebVitals.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\serviceWorker.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\routes.js",["949","950"],[],"import { Navigate, useRoutes } from 'react-router-dom';\r\n\r\n// layouts\r\nimport DashboardLayout from './layouts/dashboard';\r\nimport SimpleLayout from './layouts/simple';\r\n\r\n//\r\nimport UserPage from './pages/UserPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport Page404 from './pages/Page404';\r\nimport ProductsPage from './pages/client/ProductsPage';\r\nimport DashboardAppPage from './pages/DashboardAppPage';\r\nimport Sales from './pages/DirectSale-ADM';\r\nimport CartBillADM from './pages/Cart-Bill-ADM';\r\nimport OrderManagement from './pages/OrderManagement';\r\nimport OrderManagementTimeline from './pages/OrderManagement-Timeline';\r\nimport Home from './pages/client/Home';\r\nimport DashboardLayoutClient from './layouts/dashboard/DashboardLayout-Client';\r\nimport DiscountPage from './pages/discounts/DiscountPage';\r\nimport ModelAddNewGiamGia from './pages/discounts/ModalsAddNewGiamGia';\r\nimport ModelUpdateGiamGia from './pages/discounts/ModalsUpdateGiamGia';\r\nimport DetailProduct from './pages/client/Detail-product';\r\nimport Cart from './pages/client/Cart';\r\nimport UserStaff from './pages/Staff/Modal-User-Staff';\r\nimport AddTKNV from './pages/Staff/Modal-Add-Staff';\r\nimport UpdateTkNV from './pages/Staff/Modal-Update-Staff';\r\nimport Contact from './pages/client/Contact';\r\nimport PaymentPage1 from './pages/client/Payment-Page1';\r\n\r\n// san pham\r\nimport ProductMain from './pages/SanPham/SanPhamMain';\r\nimport ProductAdd from './pages/SanPham/ModelAdd';\r\nimport ProductUpdate from './pages/SanPham/ModelUpdate';\r\n\r\nimport ClientsPage from './pages/taiKhoanKhachHang/ClientsPage';\r\nimport AddClients from './pages/taiKhoanKhachHang/AddClients';\r\nimport UpdateClients from './pages/taiKhoanKhachHang/UpdateClients';\r\nimport AllAddress from './pages/diaChi/AllAddress';\r\nimport AddressByClient from './pages/diaChi/AddressByClient';\r\nimport AddAddress from './pages/diaChi/AddAddress';\r\nimport UpdateAddress from './pages/diaChi/UpdateAddress';\r\nimport SignUp from './pages/client/SignUp';\r\nimport OrderClientTimeline from './pages/client/OrderClient-Timeline';\r\nimport SelectAllBillOfClient from './pages/client/SelectAllBill';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Router() {\r\n  const getLocalStore = localStorage.getItem('userFormToken');\r\n  const authorities = getLocalStore && JSON.parse(getLocalStore).authorities[0].authority;\r\n\r\n  const layoutElement =\r\n    authorities === 'ROLE_ADMIN' || authorities === 'ROLE_STAFF' ? <DashboardLayout /> : <DashboardLayoutClient />;\r\n\r\n  const routes = useRoutes([\r\n    {\r\n      path: authorities === 'ROLE_ADMIN' || authorities === 'ROLE_STAFF' ? '/dashboard' : '/client',\r\n      element: layoutElement,\r\n      children:\r\n        authorities === 'ROLE_ADMIN' || authorities === 'ROLE_STAFF'\r\n          ? [\r\n              { element: <Navigate to=\"/dashboard/app\" />, index: true },\r\n              { path: 'app', element: <DashboardAppPage /> },\r\n              { path: 'bills', element: <OrderManagement /> },\r\n              { path: 'bills/time-line/:id', element: <OrderManagementTimeline /> },\r\n              { path: 'sales', element: <Sales /> },\r\n              { path: 'sales/card-bill/:id', element: <CartBillADM /> },\r\n              { path: 'staff', element: <UserStaff /> },\r\n              { path: 'addNewTKNV', element: <AddTKNV /> },\r\n              { path: 'detail/:id', element: <UpdateTkNV /> },\r\n              { path: 'staff', element: <UserPage /> },\r\n              { path: 'discounts', element: <DiscountPage /> },\r\n              { path: 'discount/add', element: <ModelAddNewGiamGia /> },\r\n              { path: 'discount/update/:id', element: <ModelUpdateGiamGia /> },\r\n              { path: 'clients', element: <ClientsPage /> },\r\n              { path: 'clients/add', element: <AddClients /> },\r\n              { path: 'clients/detail/:id', element: <UpdateClients /> },\r\n              { path: 'address', element: <AllAddress /> },\r\n              { path: 'address/:id', element: <AddressByClient /> },\r\n              { path: 'address/add/:id', element: <AddAddress /> },\r\n              { path: 'address/detail/:id', element: <UpdateAddress /> },\r\n              { path: 'products', element: <ProductMain /> },\r\n              { path: 'products/add', element: <ProductAdd /> },\r\n              { path: 'products/update/:id', element: <ProductUpdate /> },\r\n            ]\r\n          : [\r\n              { element: <Navigate to=\"/client/home\" />, index: true },\r\n              { path: 'home', element: <Home /> },\r\n              { path: 'detail/:id', element: <DetailProduct /> },\r\n              { path: 'cart', element: <Cart /> },\r\n              { path: 'payment/:id', element: <PaymentPage1 /> },\r\n              { path: 'contact', element: <Contact /> },\r\n              { path: 'products', element: <ProductsPage /> },\r\n              { path: 'client-timeline/:id', element: <OrderClientTimeline /> },\r\n              { path: 'select-bill-client/:idKH', element: <SelectAllBillOfClient /> },\r\n              // { path: 'select-bill-client', element: <SelectAllBillOfClient /> },\r\n            ],\r\n    },\r\n    {\r\n      path: 'login',\r\n      element: <LoginPage />,\r\n    },\r\n    {\r\n      path: 'signUp',\r\n      element: <SignUp />,\r\n    },\r\n    {\r\n      element: <SimpleLayout />,\r\n      children: [\r\n        {\r\n          element:\r\n            authorities === 'ROLE_ADMIN' || authorities === 'ROLE_STAFF' ? (\r\n              <Navigate to=\"/dashboard/app\" />\r\n            ) : (\r\n              <Navigate to=\"/client/home\" />\r\n            ),\r\n          index: true,\r\n        },\r\n        { path: '404', element: <Page404 /> },\r\n        { path: '*', element: <Navigate to=\"/404\" /> },\r\n      ],\r\n    },\r\n    {\r\n      path: '*',\r\n      element: <Navigate to=\"/404\" replace />,\r\n    },\r\n  ]);\r\n\r\n  return routes;\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\chart\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\scroll-to-top\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\LoginPage.js",["951","952","953"],[],"import { Helmet } from 'react-helmet-async';\r\n// @mui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Link, Container, Typography, Divider, Stack, Button } from '@mui/material';\r\n// hooks\r\nimport useResponsive from '../hooks/useResponsive';\r\n// components\r\nimport Logo from '../components/logo';\r\nimport Iconify from '../components/iconify';\r\n// sections\r\nimport { LoginForm } from '../sections/auth/login';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst StyledRoot = styled('div')(({ theme }) => ({\r\n  [theme.breakpoints.up('md')]: {\r\n    display: 'flex',\r\n  },\r\n}));\r\n\r\nconst StyledSection = styled('div')(({ theme }) => ({\r\n  width: '100%',\r\n  maxWidth: 480,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  boxShadow: theme.customShadows.card,\r\n  backgroundColor: theme.palette.background.default,\r\n}));\r\n\r\nconst StyledContent = styled('div')(({ theme }) => ({\r\n  maxWidth: 480,\r\n  margin: 'auto',\r\n  minHeight: '100vh',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  flexDirection: 'column',\r\n  padding: theme.spacing(12, 0),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginPage() {\r\n  const mdUp = useResponsive('up', 'md');\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Login | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <StyledRoot>\r\n        <Logo\r\n          sx={{\r\n            position: 'fixed',\r\n            top: { xs: 16, sm: 24, md: 40 },\r\n            left: { xs: 16, sm: 24, md: 40 },\r\n          }}\r\n        />\r\n\r\n        {mdUp && (\r\n          <StyledSection>\r\n            <Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\r\n              Hi, Welcome Back\r\n            </Typography>\r\n            <img src=\"/assets/illustrations/illustration_login.png\" alt=\"login\" />\r\n          </StyledSection>\r\n        )}\r\n\r\n        <Container maxWidth=\"sm\">\r\n          <StyledContent>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Đăng Nhập 5F Store\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\" sx={{ mb: 1 }}>\r\n              Chưa có tài khoản? {''}\r\n              <Link variant=\"subtitle2\" href=\"/signUp\" >Đăng Ký</Link>\r\n            </Typography>\r\n\r\n\r\n            <Divider sx={{ my: 1 }}>\r\n              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                OR\r\n              </Typography>\r\n            </Divider>\r\n\r\n            <LoginForm />\r\n          </StyledContent>\r\n        </Container>\r\n      </StyledRoot>\r\n    </>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\DashboardAppPage.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\BlogPage.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\UserPage.js",["954","955"],[],"import { Helmet } from 'react-helmet-async';\r\n// import { filter } from 'lodash';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useEffect, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Button,\r\n  Popover,\r\n  Checkbox,\r\n  TableRow,\r\n  MenuItem,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  TableContainer,\r\n  TablePagination,\r\n} from '@mui/material';\r\n// components\r\nimport Iconify from '../components/iconify';\r\nimport Scrollbar from '../components/scrollbar';\r\n// sections\r\nimport { UserListHead, UserListToolbar } from '../sections/@dashboard/user';\r\n// mock\r\nimport USERLIST from '../_mock/user';\r\nimport { fetchAllTKKH } from '../service/taiKhoanKhachHangSevice';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Name', alignRight: false },\r\n  { id: 'company', label: 'Company', alignRight: false },\r\n  { id: 'role', label: 'Role', alignRight: false },\r\n  { id: 'isVerified', label: 'Verified', alignRight: false },\r\n  { id: 'status', label: 'Status', alignRight: false },\r\n  { id: '' },\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// function descendingComparator(a, b, orderBy) {\r\n//   if (b[orderBy] < a[orderBy]) {\r\n//     return -1;\r\n//   }\r\n//   if (b[orderBy] > a[orderBy]) {\r\n//     return 1;\r\n//   }\r\n//   return 0;\r\n// }\r\n\r\n// function getComparator(order, orderBy) {\r\n//   return order === 'desc'\r\n//     ? (a, b) => descendingComparator(a, b, orderBy)\r\n//     : (a, b) => -descendingComparator(a, b, orderBy);\r\n// }\r\n\r\n// function applySortFilter(array, comparator, query) {\r\n//   const stabilizedThis = array.map((el, index) => [el, index]);\r\n//   stabilizedThis.sort((a, b) => {\r\n//     const order = comparator(a[0], b[0]);\r\n//     if (order !== 0) return order;\r\n//     return a[1] - b[1];\r\n//   });\r\n//   if (query) {\r\n//     return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n//   }\r\n//   return stabilizedThis.map((el) => el[0]);\r\n// }\r\n\r\nexport default function UserPage() {\r\n  // Select list of users\r\n\r\n  const [listData, setListData] = useState([]);\r\n\r\n  const getListData = async (page, query) => {\r\n    try {\r\n      const res = await fetchAllTKKH(page, query);\r\n      console.log('Check res: ', res);\r\n      setListData(res.content);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getListData(0);\r\n  }, []);\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const [orderBy, setOrderBy] = useState('name');\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = USERLIST.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setPage(0);\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  // const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - USERLIST.length) : 0;\r\n\r\n  // const filteredUsers = applySortFilter(USERLIST, getComparator(order, orderBy), filterName);\r\n\r\n  // const isNotFound = !filteredUsers.length && !!filterName;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> User | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            User\r\n          </Typography>\r\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n            New User\r\n          </Button>\r\n        </Stack>\r\n\r\n        <Card>\r\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              {/* <h1>{listData.data.content.length}</h1> */}\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={listData.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {listData.map((row) => (\r\n                    <TableRow key={row.idTaiKhoan}>\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={selected.indexOf(row.id) !== -1}\r\n                          onChange={(event) => handleClick(event, row.id)}\r\n                        />\r\n                      </TableCell>\r\n                      {/* <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                        <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                          <Avatar alt={row.name} src={row.avatarUrl} />\r\n                          <Typography variant=\"subtitle2\" noWrap>\r\n                            {row.name}\r\n                          </Typography>\r\n                        </Stack>\r\n                      </TableCell> */}\r\n                      {/* <TableCell align=\"left\">{row.company}</TableCell> */}\r\n                      <TableCell align=\"left\">{row.ho}</TableCell>\r\n                      {/* <TableCell align=\"left\">{row.isVerified ? 'Yes' : 'No'}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Label color={(row.status === 'banned' && 'error') || 'success'}>\r\n                          {sentenceCase(row.status)}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <IconButton size=\"large\" color=\"inherit\" onClick={handleOpenMenu}>\r\n                          <Iconify icon={'eva:more-vertical-fill'} />\r\n                        </IconButton>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={USERLIST.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 140,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem>\r\n          <Iconify icon={'eva:edit-fill'} sx={{ mr: 2 }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem sx={{ color: 'error.main' }}>\r\n          <Iconify icon={'eva:trash-2-outline'} sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Cart-Bill-ADM.js",["956","957"],[],"import '../scss/Car-Bill-ADM.scss';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n  Button,\r\n  Chip,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Snackbar,\r\n  Stack,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\r\nimport axios from 'axios';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\r\nimport DeleteSweepOutlinedIcon from '@mui/icons-material/DeleteSweepOutlined';\r\nimport { pink } from '@mui/material/colors';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { Alert, Image } from 'react-bootstrap';\r\nimport { styled } from '@mui/material/styles';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport ModalDeleteDirectSale from '../forms/Modal-Delete-DirectSale';\r\nimport ModalCreateBillOnline from '../forms/Modal-Create-Online';\r\nimport { updateTongTien } from '../service/OrderManagementTimeLine';\r\nimport ModalAddKhachHang from '../forms/Modals-AddKhachHang';\r\nimport { detailBill, finByProductOnCart, findById, postAddBill, selectAllInvoiceWaiting } from '../service/BillSevice';\r\nimport ModalAddProduct from '../forms/Modals-AddProduct';\r\nimport ModalUpdateProductOnCart from '../forms/Modals-Update-Product-Cart';\r\nimport ModalDeleteProductOnCart from '../forms/Modal-Delete-Product';\r\nimport ModalDeleteAllProductOnCart from '../forms/Modal-Delete-All-Product';\r\nimport ModalPaymentComfirm from '../forms/Modal-Payment-Confirm';\r\nimport Iconify from '../components/iconify';\r\n\r\n// Dislay invoice waiting\r\nconst AntTabs = styled(Tabs)({\r\n  borderBottom: '1px solid #e8e8e8',\r\n  '& .MuiTabs-indicator': {\r\n    backgroundColor: '#1890ff',\r\n  },\r\n});\r\n\r\nconst AntTab = styled((props) => <Tab disableRipple {...props} />)(({ theme }) => ({\r\n  textTransform: 'none',\r\n  minWidth: 0,\r\n  [theme.breakpoints.up('sm')]: {\r\n    minWidth: 0,\r\n  },\r\n  fontWeight: theme.typography.fontWeightRegular,\r\n  marginRight: theme.spacing(1),\r\n  color: 'rgba(0, 0, 0, 0.85)',\r\n  fontFamily: [\r\n    '-apple-system',\r\n    'BlinkMacSystemFont',\r\n    '\"Segoe UI\"',\r\n    'Roboto',\r\n    '\"Helvetica Neue\"',\r\n    'Arial',\r\n    'sans-serif',\r\n    '\"Apple Color Emoji\"',\r\n    '\"Segoe UI Emoji\"',\r\n    '\"Segoe UI Symbol\"',\r\n  ].join(','),\r\n  '&:hover': {\r\n    color: '#40a9ff',\r\n    opacity: 1,\r\n  },\r\n  '&.Mui-selected': {\r\n    color: '#1890ff',\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n  },\r\n  '&.Mui-focusVisible': {\r\n    backgroundColor: '#d1eaff',\r\n  },\r\n}));\r\n\r\nconst CartBillADM = () => {\r\n  // Get IdHd on http\r\n  const param = useParams();\r\n  const idHdParam = param.id;\r\n\r\n  // Detail Hd\r\n  const [listHD, setlistHD] = useState([]);\r\n\r\n  const getDetailHD = useCallback(async () => {\r\n    try {\r\n      const getData = await detailBill(idHdParam);\r\n      console.log('getData: ', getData);\r\n      setlistHD(getData);\r\n    } catch (error) {\r\n      console.error('Error: ', error);\r\n    }\r\n  }, [idHdParam]);\r\n  useEffect(() => {\r\n    getDetailHD();\r\n  }, [getDetailHD]);\r\n  // Select invoice waiting.\r\n  const [tabs, setTabs] = useState([]);\r\n  const [value, setValue] = useState(0);\r\n\r\n  const getListData = useCallback(async () => {\r\n    try {\r\n      const res = await selectAllInvoiceWaiting();\r\n      setTabs(res);\r\n      const idHdParamNumber = parseInt(idHdParam, 10);\r\n      const checkIndexTab = res.findIndex((item) => item.idHd === idHdParamNumber);\r\n      console.log('checkIndexTab: ', checkIndexTab);\r\n\r\n      setValue(checkIndexTab);\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  }, [idHdParam]);\r\n\r\n  useEffect(() => {\r\n    getListData();\r\n  }, [getListData]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    console.log('newValue', newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChange1 = (tabLabel) => {\r\n    navigate(`/dashboard/sales/card-bill/${tabLabel.idHd}`);\r\n  };\r\n\r\n  // Create a new Detail Direct\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const handleAddTab = async () => {\r\n    if (tabs.length >= 5) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Đã Tồn Tại 5 Hóa Đơn Chờ. Vui Lòng Thanh Toán!!!',\r\n      });\r\n    } else {\r\n      const res = await postAddBill(1, 8);\r\n      getListData();\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Tạo thành công hóa đơn',\r\n      });\r\n\r\n      // Update the tabs state to include the new tab\r\n      const nextTabNumber = tabs.length + 1;\r\n      const newTab = { maHd: `Tab ${nextTabNumber}` };\r\n      console.log('Check newTab: ', newTab);\r\n      const newTabs = [...tabs, newTab];\r\n      console.log('Check newTabs: ', newTabs);\r\n      setTabs(newTabs);\r\n\r\n      // Set the value state to the index of the newly added tab\r\n      setValue(newTabs.length - 1);\r\n\r\n      const getIdHttp = res.idHd;\r\n      navigate(`/dashboard/sales/card-bill/${getIdHttp}`);\r\n    }\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [information, setInformation] = useState();\r\n  const handleCloseTab = (index) => {\r\n    setOpen(true);\r\n    setInformation(index);\r\n  };\r\n  const handleCloseDeleteInvoice = () => {\r\n    setOpen(false);\r\n    getListData();\r\n    setValue(0);\r\n    const newTab = { maHd: `Tab ${1}` };\r\n    const newTabs = [...tabs, newTab];\r\n    setTabs(newTabs);\r\n    navigate(`/dashboard/sales/card-bill/${newTabs[0].idHd}`);\r\n  };\r\n\r\n  // Select Product On Cart\r\n  const [DataCart, setDataCart] = useState([]);\r\n  // const [numberPages, setNumberPages] = useState(0);\r\n  // const [currentPage, setCurrentPage] = useState(0);\r\n\r\n  const selectDataCart = useCallback(async () => {\r\n    try {\r\n      const res = await finByProductOnCart(idHdParam);\r\n      if (res) {\r\n        setDataCart(res);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [idHdParam]);\r\n  useEffect(() => {\r\n    selectDataCart();\r\n  }, [selectDataCart]);\r\n\r\n  // const handlePageClick = (page) => {\r\n  //   selectDataCart(page);\r\n  //   setCurrentPage(page);\r\n  // };\r\n  // Add Product\r\n  const [showModalsAdd, setShowModalAdd] = useState(false);\r\n  const handleAddProduct = () => {\r\n    setShowModalAdd(true);\r\n  };\r\n  const handleClose = () => {\r\n    setShowModalAdd(false);\r\n  };\r\n\r\n  // Delete product on cart\r\n  const [showModalsDelete, setShowModalDelete] = useState(false);\r\n  const [itemDelete, setIntemDelete] = useState();\r\n  const handleDelete = (item) => {\r\n    console.log('Check item', item);\r\n    setShowModalDelete(true);\r\n    setIntemDelete(item);\r\n  };\r\n  const handleCloseModalDelelte = () => {\r\n    setShowModalDelete(false);\r\n  };\r\n  // Delete all products\r\n  const [showModalsDeleteAll, setShowModalDeleteAll] = useState(false);\r\n  const handDeleteAll = () => {\r\n    setShowModalDeleteAll(true);\r\n  };\r\n  const handCloseDeleteAll = () => {\r\n    setShowModalDeleteAll(false);\r\n  };\r\n  // Update classify on the cart\r\n  const [showModalsUpdate, setShowModalsUpdate] = useState(false);\r\n  const [itemUpdateClassify, setItemUpdateClassify] = useState({});\r\n  const [itemUpdate, setItemUpdate] = useState({});\r\n\r\n  const handleUpdateClassify = async (item) => {\r\n    setShowModalsUpdate(true);\r\n    try {\r\n      const getOneSP = await findById(item[3]);\r\n      setItemUpdateClassify(getOneSP);\r\n      setItemUpdate(item);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleCloseUpdateClassify = () => {\r\n    setShowModalsUpdate(false);\r\n  };\r\n  // Show  payment information\r\n  const [isDeliveryChecked, setIsDeliveryChecked] = useState(false);\r\n\r\n  const handleDeliveryChange = (event) => {\r\n    setIsDeliveryChecked(event.target.checked);\r\n  };\r\n\r\n  // Fetch list of provinces on component mount\r\n  const [diachiCuThe, setDiachiCuThe] = useState('');\r\n  useEffect(() => {\r\n    fetchProvinces();\r\n  }, []);\r\n\r\n  // Get API Provinces\r\n  // const host = 'https://online-gateway.ghn.vn/shiip/public-api/master-data/province';\r\n\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [selectedProvince, setSelectedProvince] = useState('');\r\n  const [districts, setDistricts] = useState([]);\r\n  const [selectedDistrict, setSelectedDistrict] = useState('');\r\n  const [wards, setWards] = useState([]);\r\n  const [selectedWard, setSelectedWard] = useState('');\r\n\r\n  const [result, setResult] = useState('');\r\n\r\n  const fetchProvinces = async () => {\r\n    try {\r\n      const response = await axios.get('https://online-gateway.ghn.vn/shiip/public-api/master-data/province', {\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      console.log('response: ', response.data.data);\r\n      setProvinces(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching provinces:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchProvinces();\r\n  }, []);\r\n\r\n  const callApiDistrict = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/master-data/district`, {\r\n        params: { province_id: selectedProvince },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      console.log('Quận/Huyện: ', response.data);\r\n      setDistricts(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching districts:', error);\r\n    }\r\n  }, [selectedProvince]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProvince) {\r\n      console.log('selectedProvince: ', selectedProvince);\r\n      callApiDistrict();\r\n    }\r\n  }, [selectedProvince, callApiDistrict]);\r\n\r\n  const callApiWard = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/master-data/ward`, {\r\n        params: { district_id: selectedDistrict },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      setWards(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching wards:', error);\r\n    }\r\n  }, [selectedDistrict]);\r\n\r\n  // API gets service pack information\r\n  const [tienShip, getTienShip] = useState(0);\r\n\r\n  const getSevice = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee`, {\r\n        params: {\r\n          service_type_id: 2,\r\n          insurance_value: 500000,\r\n          coupon: null,\r\n          from_district_id: 1542,\r\n          to_district_id: selectedDistrict,\r\n          height: 15,\r\n          length: 15,\r\n          weight: 1000,\r\n          width: 15,\r\n        },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n          shop_id: 4699724,\r\n        },\r\n      });\r\n      const totalShip = response.data?.data?.total || 0;\r\n      console.log('getSevice: ', response);\r\n      getTienShip(totalShip);\r\n    } catch (error) {\r\n      console.error('Error get service:', error);\r\n    }\r\n  }, [selectedDistrict]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDistrict) {\r\n      console.log('selectedProvince: ', selectedDistrict);\r\n      callApiWard();\r\n      getSevice();\r\n    }\r\n  }, [getSevice, selectedDistrict, callApiWard]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDistrict && selectedProvince && selectedWard) {\r\n      const selectedProvinceName =\r\n        provinces.find((province) => province.ProvinceID === selectedProvince)?.ProvinceName || '';\r\n\r\n      const selectedDistrictName =\r\n        districts.find((district) => district.DistrictID === selectedDistrict)?.DistrictName || '';\r\n\r\n      const selectedWardName = wards.find((ward) => ward.WardCode === selectedWard)?.WardName || '';\r\n\r\n      setResult(`${selectedProvinceName}, ${selectedDistrictName}, ${selectedWardName}, ${diachiCuThe}`);\r\n    }\r\n  }, [selectedDistrict, selectedProvince, selectedWard, districts, provinces, wards, diachiCuThe]);\r\n\r\n  // Show thanhTien\r\n  const [thanhTien, setThanhTien] = useState(0);\r\n  const [tongTien, setTongTien] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const calculateTotalPrice = async () => {\r\n      // let total = 0;\r\n      const total = DataCart.reduce((accumulator, item) => accumulator + item[9], 0);\r\n      // Set Tong Tien\r\n      setTongTien(total);\r\n      // Set Tien Ship\r\n      console.log('getDataShip: ', listHD.tienShip);\r\n      const totalShip = tienShip === 0 && listHD && listHD.tienShip ? listHD.tienShip : tienShip;\r\n      // Set Thanh Tien\r\n      setThanhTien(total + totalShip);\r\n      await updateTongTien(idHdParam, total, totalShip, thanhTien);\r\n    };\r\n\r\n    calculateTotalPrice();\r\n  }, [DataCart, idHdParam, tienShip, listHD, thanhTien]);\r\n\r\n  // Modal add KH\r\n  const [showModalsKH, setShowModalKH] = useState(false);\r\n  const handleAddKH = () => {\r\n    setShowModalKH(true);\r\n  };\r\n  const handleCloseAddKH = () => {\r\n    setShowModalKH(false);\r\n  };\r\n\r\n  // Handle Save\r\n  const navigate = useNavigate();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [tenKhTT, getTenKHTT] = useState('');\r\n  const [sdtKHTT, getSdtKHTT] = useState('');\r\n  const [tenKhShip, getTenKHShip] = useState('');\r\n  const [sdtKHShip, getSdtKHShip] = useState('');\r\n\r\n  const [openPayment, setOpenPayment] = useState(false);\r\n  const [openCreateOnline, setCreateOnline] = useState(false);\r\n  // const [information, setInformation] = useState();\r\n  const handleClick = async () => {\r\n    console.log('handleClick');\r\n    // const currentDate = new Date();\r\n    // const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n    if (isDeliveryChecked === false) {\r\n      setOpenPayment(true);\r\n    } else if (!tenKhShip.trim() || !sdtKHShip.trim()) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Hãy Thông Tin Người Nhận Hàng!!!',\r\n      });\r\n    } else {\r\n      setCreateOnline(true);\r\n    }\r\n  };\r\n  const handlePaymentClose = () => {\r\n    setOpenPayment(false);\r\n  };\r\n  const handleCloseCreateOnline = () => {\r\n    setCreateOnline(false);\r\n  };\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n  // Format thanhTien\r\n  const formatCurrency = (amount) => amount.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ width: '100%' }}>\r\n        <Box sx={{ bgcolor: '#fff' }}>\r\n          <Box sx={{ p: 3 }}>\r\n            <Button variant=\"contained\" onClick={handleAddTab}>\r\n              Thêm Hóa Đơn Chờ\r\n            </Button>\r\n          </Box>\r\n          <AntTabs value={value} onChange={handleChange} aria-label=\"ant example\">\r\n            {tabs.map((tabLabel, index) => (\r\n              <AntTab\r\n                key={index}\r\n                onClick={() => handleChange1(tabLabel)}\r\n                label={\r\n                  <span>\r\n                    {tabLabel.maHd}\r\n                    <CloseIcon\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        handleCloseTab(tabLabel);\r\n                      }}\r\n                    />\r\n                  </span>\r\n                }\r\n              />\r\n            ))}\r\n          </AntTabs>\r\n\r\n          <Box sx={{ p: 3 }}>\r\n            {/* <p>Content: {tabContent[value]}</p> */}\r\n            <div>\r\n              <p>Bill Code: {listHD.maHd}</p>\r\n              <div className=\"class-add-product\">\r\n                <Button onClick={() => handleAddProduct()} variant=\"outlined\">\r\n                  <FontAwesomeIcon icon={faCartPlus} size=\"lg\" />\r\n                  Thêm Sản Phẩm\r\n                </Button>{' '}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row cart-information\">\r\n              <div className=\"row\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Giỏ Hàng{' '}\r\n                  </Typography>\r\n                </Stack>\r\n              </div>\r\n              <TableContainer sx={{ marginTop: 2, marginBottom: 2 }} component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Ảnh</TableCell>\r\n                      <TableCell>Mã Sản Phẩm</TableCell>\r\n                      <TableCell align=\"right\">Sản Phẩm</TableCell>\r\n                      <TableCell align=\"right\">Thuộc tính</TableCell>\r\n                      <TableCell align=\"right\">Giá</TableCell>\r\n                      <TableCell align=\"right\">Số Lượng</TableCell>\r\n                      <TableCell align=\"right\">Tổng</TableCell>\r\n                      <TableCell align=\"right\">Thao Tác</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {DataCart && DataCart.length > 0 ? (\r\n                      DataCart.map((item, index) => {\r\n                        const imagesArray = item[2].split(','); // Tách chuỗi thành mảng\r\n                        const firstImage = imagesArray[0];\r\n                        return (\r\n                          <TableRow\r\n                            key={index}\r\n                            sx={{\r\n                              '&:last-child td, &:last-child th': { border: 0 },\r\n                            }}\r\n                          >\r\n                            <TableCell>\r\n                              <Image rounded style={{ width: '150px', height: 'auto' }} src={firstImage} />\r\n                            </TableCell>\r\n                            <TableCell>{item[4]}</TableCell>\r\n                            <TableCell align=\"right\">{item[5]}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <Button onClick={() => handleUpdateClassify(item)} size=\"small\" variant=\"outlined\">\r\n                                Size: {item[6]}\r\n                                <br />\r\n                                Màu: {item[11]}\r\n                              </Button>\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{item[7]}</TableCell>\r\n                            <TableCell align=\"right\">{item[8]}</TableCell>\r\n                            <TableCell align=\"right\">{item[9]}</TableCell>\r\n                            <TableCell align=\"right\">\r\n                              <IconButton aria-label=\"delete\" size=\"large\" onClick={() => handleDelete(item)}>\r\n                                <DeleteSweepOutlinedIcon sx={{ color: pink[500] }} />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })\r\n                    ) : (\r\n                      <TableRow>\r\n                        <TableCell align=\"right\" colSpan={8}>\r\n                          KHÔNG CÓ DỮ LIỆU\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n\r\n              <div className=\"col-2\">\r\n                <Button sx={{ marginBottom: 3 }} onClick={handDeleteAll} variant=\"outlined\" startIcon={<DeleteIcon />}>\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n              <div className=\"col-2\">\r\n                {/* <Stack direction=\"row\" spacing={2} justify=\"center\" alignItems=\"center\">\r\n                  <Pagination\r\n                    onChange={(event, page) => handlePageClick(page - 1)}\r\n                    count={numberPages}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Stack> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"row customer-information\">\r\n              <div className=\"row\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thông Tin Khách Hàng{' '}\r\n                  </Typography>\r\n                  <Button onClick={() => handleAddKH()} variant=\"outlined\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                    Khách Hàng{' '}\r\n                  </Button>\r\n                </Stack>\r\n              </div>\r\n\r\n              <div className=\"text-information\">\r\n                {listHD.idKH ? (\r\n                  <>\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Mã Tài Khoản \"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={listHD.idKH.maTaiKhoan}\r\n                      // value={listHD.idKH.maTaiKhoan}\r\n                      fullWidth\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Tên Khách Hàng\"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={`${listHD.idKH.ho} ${listHD.idKH.ten}`}\r\n                      // value={selectedCustomerName}\r\n                      fullWidth\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                    <TextField\r\n                      id=\"standard-multiline-flexible\"\r\n                      label=\"Số Điện Thoại\"\r\n                      multiline\r\n                      maxRows={4}\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      defaultValue={listHD.idKH.sdt}\r\n                      fullWidth\r\n                      // value={selectedCustomerEmail}\r\n                      sx={{ marginTop: 2 }}\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <Chip label=\"Khách Lẻ\" color=\"primary\" />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <div className=\"row information-payment\">\r\n              <div className=\"row header-information\">\r\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                  <Typography variant=\"h5\" gutterBottom>\r\n                    Thông Tin Thanh Toán{' '}\r\n                  </Typography>\r\n                  <Button onClick={() => handleAddKH()} variant=\"outlined\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n                    Primary{' '}\r\n                  </Button>\r\n                </Stack>\r\n                {/* <div className=\"col-6\">\r\n\r\n                  <h6>Thông Tin Thanh Toán</h6>\r\n                </div>\r\n                <div className=\"col-6 button-list\">\r\n                  <Button size=\"small\" variant=\"outlined\">\r\n                    Primary\r\n                  </Button>\r\n                </div> */}\r\n              </div>\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6} md={7}>\r\n                  {isDeliveryChecked ? (\r\n                    <div className=\"text-information\">\r\n                      <div>\r\n                        <h5>\r\n                          {' '}\r\n                          <AccountBoxIcon />\r\n                          Thông Tin Người Nhận\r\n                        </h5>\r\n                      </div>\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Tên Người Nhận\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        onChange={(e) => getTenKHShip(e.target.value)}\r\n                        sx={{ marginTop: 2 }}\r\n                      />\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Số Điện Thoại\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getSdtKHShip(e.target.value)}\r\n                      />\r\n                      <div className=\"address\">\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 165, marginRight: 3, marginTop: 2 }}>\r\n                          <InputLabel id=\"province-label\">Tỉnh/Thành Phố</InputLabel>\r\n                          <Select\r\n                            labelId=\"province-label\"\r\n                            id=\"province-select\"\r\n                            value={selectedProvince}\r\n                            onChange={(e) => setSelectedProvince(e.target.value)}\r\n                            label=\"Tỉnh/Thành Phố\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Tỉnh/Thành Phố</em>\r\n                            </MenuItem>\r\n                            {provinces.map((province) => (\r\n                              <MenuItem key={province.ProvinceID} value={province.ProvinceID}>\r\n                                {province.ProvinceName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 165, marginRight: 3, marginTop: 2 }}>\r\n                          <InputLabel id=\"district-label\">Quận/Huyện</InputLabel>\r\n                          <Select\r\n                            labelId=\"district-label\"\r\n                            id=\"district-select\"\r\n                            value={selectedDistrict}\r\n                            onChange={(e) => setSelectedDistrict(e.target.value)}\r\n                            label=\"Quận/Huyện\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Quận/Huyện</em>\r\n                            </MenuItem>\r\n                            {districts.map((district) => (\r\n                              <MenuItem key={district.DistrictID} value={district.DistrictID}>\r\n                                {district.DistrictName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <FormControl size=\"small\" sx={{ m: 0, minWidth: 170, marginTop: 2 }}>\r\n                          <InputLabel id=\"ward-label\">Phường/Xã</InputLabel>\r\n                          <Select\r\n                            labelId=\"ward-label\"\r\n                            id=\"ward-select\"\r\n                            value={selectedWard}\r\n                            onChange={(e) => setSelectedWard(e.target.value)}\r\n                            label=\"Phường/Xã\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>Chọn Phường/Xã</em>\r\n                            </MenuItem>\r\n                            {wards.map((ward) => (\r\n                              <MenuItem key={ward.WardCode} value={ward.WardCode}>\r\n                                {ward.WardName}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                        <div id=\"result\">{result}</div>\r\n                      </div>\r\n\r\n                      <div>\r\n                        <TextField\r\n                          id=\"standard-multiline-flexible\"\r\n                          label=\"Địa Chỉ Cụ Thể\"\r\n                          multiline\r\n                          maxRows={4}\r\n                          variant=\"outlined\"\r\n                          size=\"small\"\r\n                          fullWidth\r\n                          sx={{ marginTop: 2 }}\r\n                          value={diachiCuThe}\r\n                          onChange={(e) => setDiachiCuThe(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"text-information\">\r\n                      <div>\r\n                        <h5>\r\n                          <AccountBoxIcon />\r\n                          Thông Tin Khách Hàng\r\n                        </h5>\r\n                      </div>\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Người Thanh Toán\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getTenKHTT(e.target.value)}\r\n                      />\r\n                      <TextField\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Số Điện Thoại\"\r\n                        multiline\r\n                        maxRows={4}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                        sx={{ marginTop: 2 }}\r\n                        onChange={(e) => getSdtKHTT(e.target.value)}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </Grid>\r\n                <Grid item xs={12} md={6} lg={4}>\r\n                  <h5>\r\n                    <AccountBalanceWalletIcon />\r\n                    THÔNG TIN THANH TOÁN\r\n                  </h5>\r\n                  <FormControlLabel control={<Switch />} onChange={handleDeliveryChange} label=\"Giao Hàng\" />\r\n                  <br />\r\n                  <div className=\"row\">\r\n                    <Stack\r\n                      sx={{ marginTop: 5 }}\r\n                      direction=\"row\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"space-between\"\r\n                      mb={3}\r\n                    >\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Tiền Hàng{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {formatCurrency(tongTien)}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Tiền Ship{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {tienShip === 0 ? listHD.tienShip : tienShip}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                    <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        Thành Tiền{' '}\r\n                      </Typography>\r\n                      <Typography variant=\"h6\" gutterBottom>\r\n                        {formatCurrency(thanhTien)}{' '}\r\n                      </Typography>\r\n                    </Stack>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n\r\n            <div className=\"class-checkout\">\r\n              <LoadingButton\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n                onClick={handleClick}\r\n                loading={loading}\r\n                loadingPosition=\"start\"\r\n                startIcon={<SaveIcon />}\r\n                variant=\"contained\"\r\n              >\r\n                <span>Save</span>\r\n              </LoadingButton>\r\n            </div>\r\n\r\n            {/* Add Modals */}\r\n            <ModalAddProduct\r\n              show={showModalsAdd}\r\n              selectDataCart={selectDataCart}\r\n              handleClose={handleClose}\r\n              DataCart={DataCart}\r\n            />\r\n            {/* Modal Update Product */}\r\n            <ModalUpdateProductOnCart\r\n              show={showModalsUpdate}\r\n              handleClose={handleCloseUpdateClassify}\r\n              itemUpdateClassify={itemUpdateClassify}\r\n              selectDataCart={selectDataCart}\r\n              itemUpdate={itemUpdate}\r\n            />\r\n            {/* Modal Delete Product  */}\r\n            {itemDelete !== undefined && (\r\n              <ModalDeleteProductOnCart\r\n                open={showModalsDelete}\r\n                handleClose={handleCloseModalDelelte}\r\n                itemDelete={itemDelete}\r\n                selectDataCart={selectDataCart}\r\n              />\r\n            )}\r\n            {/* Modal Delete Product  */}\r\n            <ModalDeleteAllProductOnCart\r\n              open={showModalsDeleteAll}\r\n              handleClose={handCloseDeleteAll}\r\n              selectDataCart={selectDataCart}\r\n              DataCart={DataCart}\r\n            />\r\n            {/* Modal Add Customer */}\r\n            <ModalAddKhachHang\r\n              open={showModalsKH}\r\n              handleClose={handleCloseAddKH}\r\n              // setSelectedCustomerName={setSelectedCustomerName}\r\n              // setSelectedMaTk={setSelectedMaTk}\r\n              // setSelectedCustomerEmail={setSelectedCustomerEmail}\r\n            />\r\n            {/* ModalDeleteDirectSale */}\r\n            <ModalDeleteDirectSale open={open} handleClose={handleCloseDeleteInvoice} information={information} />\r\n            {DataCart.length > 0 && (\r\n              <>\r\n                <ModalPaymentComfirm\r\n                  show={openPayment}\r\n                  handleClose={handlePaymentClose}\r\n                  thanhTien={thanhTien}\r\n                  listHD={listHD}\r\n                  tenKhTT={tenKhTT}\r\n                  sdtKHTT={sdtKHTT}\r\n                />\r\n\r\n                <ModalCreateBillOnline\r\n                  open={openCreateOnline}\r\n                  handleClose={handleCloseCreateOnline}\r\n                  thanhTien={thanhTien}\r\n                  listHD={listHD}\r\n                  tenKhShip={tenKhShip}\r\n                  sdtKHShip={sdtKHShip}\r\n                  result={result}\r\n                />\r\n              </>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CartBillADM;\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Page404.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\OrderManagement.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\OrderManagement-Timeline.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\DirectSale-ADM.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\ProductsPage.js",["958","959","960"],[],"import { Helmet } from 'react-helmet-async';\r\nimport { useState, useEffect, useMemo } from 'react';\r\n// @mui\r\nimport { Container, Stack, Typography } from '@mui/material';\r\n// components\r\nimport { ProductSort, ProductListAll, ProductfilterSB } from '../../sections/@dashboard/products';\r\n// mock\r\n\r\n//\r\nimport { fetchSpForClient } from '../../service/SanPhamService';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProductsPage() {\r\n  const [listSP, setListSP] = useState([]);\r\n\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  const handleOpenFilter = () => {\r\n    setOpenFilter(true);\r\n  };\r\n\r\n  const handleCloseFilter = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  const getListData = async () => {\r\n    try {\r\n      const res = await fetchSpForClient();\r\n      console.log('Check res: ', res);\r\n      setListSP(res);\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getListData();\r\n  }, []);\r\n\r\n  // filter\r\n  // const listLoc = listSP.filter((sp) => sp.chatLieus.includes('12'));\r\n\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Dashboard: Products | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n          Products\r\n        </Typography>\r\n\r\n        <Stack direction=\"row\" flexWrap=\"wrap-reverse\" alignItems=\"center\" justifyContent=\"flex-end\" sx={{ mb: 5 }}>\r\n          <Stack direction=\"row\" spacing={1} flexShrink={0} sx={{ my: 1 }}>\r\n            <ProductfilterSB\r\n              openFilter={openFilter}\r\n              onOpenFilter={handleOpenFilter}\r\n              onCloseFilter={handleCloseFilter}\r\n              listSP={listSP}\r\n              // onFilter={(filteredList) => {\r\n              //   // Lấy kết quả đã lọc từ ProductFilterSB\r\n              //   setFilteredList(filteredList);\r\n              // }}\r\n            />\r\n            <ProductSort />\r\n          </Stack>\r\n        </Stack>\r\n\r\n        <ProductListAll products={listSP} />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Contact.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Home.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\SignUp.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Cart.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Payment-Page.js",["961"],[],"import {\r\n  Button,\r\n  ButtonGroup,\r\n  Container,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport axios from 'axios';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport ButtonBase from '@mui/material/ButtonBase';\r\n\r\nconst ImageButton = styled(ButtonBase)(({ theme }) => ({\r\n  position: 'relative',\r\n  height: 200,\r\n  [theme.breakpoints.down('sm')]: {\r\n    width: '100% !important', // Overrides inline-style\r\n    height: 100,\r\n  },\r\n  '&:hover, &.Mui-focusVisible': {\r\n    zIndex: 1,\r\n    '& .MuiImageBackdrop-root': {\r\n      opacity: 0.15,\r\n    },\r\n    '& .MuiImageMarked-root': {\r\n      opacity: 0,\r\n    },\r\n    '& .MuiTypography-root': {\r\n      border: '4px solid currentColor',\r\n    },\r\n  },\r\n}));\r\n\r\nconst ImageSrc = styled('span')({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center 40%',\r\n});\r\n\r\nconst Image = styled('span')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.common.white,\r\n}));\r\n\r\nconst ImageBackdrop = styled('span')(({ theme }) => ({\r\n  position: 'absolute',\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n  backgroundColor: theme.palette.common.black,\r\n  opacity: 0.4,\r\n  transition: theme.transitions.create('opacity'),\r\n}));\r\nconst ImageMarked = styled('span')(({ theme }) => ({\r\n  height: 3,\r\n  width: 18,\r\n  backgroundColor: theme.palette.common.white,\r\n  position: 'absolute',\r\n  bottom: -2,\r\n  left: 'calc(50% - 9px)',\r\n  transition: theme.transitions.create('opacity'),\r\n}));\r\nexport default function PaymentPage() {\r\n  // Find all addresses\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [selectedProvince, setSelectedProvince] = useState('');\r\n  const [districts, setDistricts] = useState([]);\r\n  const [selectedDistrict, setSelectedDistrict] = useState('');\r\n  const [wards, setWards] = useState([]);\r\n  const [selectedWard, setSelectedWard] = useState('');\r\n  const [diachiCuThe, setDiachiCuThe] = useState('');\r\n\r\n  const [result, setResult] = useState('');\r\n\r\n  const fetchProvinces = async () => {\r\n    try {\r\n      const response = await axios.get('https://online-gateway.ghn.vn/shiip/public-api/master-data/province', {\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      console.log('response: ', response.data.data);\r\n      setProvinces(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching provinces:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchProvinces();\r\n  }, []);\r\n\r\n  const callApiDistrict = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/master-data/district`, {\r\n        params: { province_id: selectedProvince },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      console.log('Quận/Huyện: ', response.data);\r\n      setDistricts(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching districts:', error);\r\n    }\r\n  }, [selectedProvince]);\r\n\r\n  useEffect(() => {\r\n    if (selectedProvince) {\r\n      console.log('selectedProvince: ', selectedProvince);\r\n      callApiDistrict();\r\n    }\r\n  }, [selectedProvince, callApiDistrict]);\r\n\r\n  const callApiWard = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/master-data/ward`, {\r\n        params: { district_id: selectedDistrict },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n        },\r\n      });\r\n      setWards(response.data.data);\r\n    } catch (error) {\r\n      console.error('Error fetching wards:', error);\r\n    }\r\n  }, [selectedDistrict]);\r\n\r\n  // API gets service pack information\r\n  const [tienShip, getTienShip] = useState(0);\r\n\r\n  const getSevice = useCallback(async () => {\r\n    try {\r\n      const response = await axios.get(`https://online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee`, {\r\n        params: {\r\n          service_type_id: 2,\r\n          insurance_value: 500000,\r\n          coupon: null,\r\n          from_district_id: 1542,\r\n          to_district_id: selectedDistrict,\r\n          height: 15,\r\n          length: 15,\r\n          weight: 1000,\r\n          width: 15,\r\n        },\r\n        headers: {\r\n          token: '5937fcfb-839a-11ee-96dc-de6f804954c9',\r\n          shop_id: 4699724,\r\n        },\r\n      });\r\n      const totalShip = response.data?.data?.total || 0;\r\n      console.log('getSevice: ', response);\r\n      getTienShip(totalShip);\r\n    } catch (error) {\r\n      console.error('Error get service:', error);\r\n    }\r\n  }, [selectedDistrict]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDistrict) {\r\n      console.log('selectedProvince: ', selectedDistrict);\r\n      callApiWard();\r\n      getSevice();\r\n    }\r\n  }, [getSevice, selectedDistrict, callApiWard]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDistrict && selectedProvince && selectedWard) {\r\n      const selectedProvinceName =\r\n        provinces.find((province) => province.ProvinceID === selectedProvince)?.ProvinceName || '';\r\n\r\n      const selectedDistrictName =\r\n        districts.find((district) => district.DistrictID === selectedDistrict)?.DistrictName || '';\r\n\r\n      const selectedWardName = wards.find((ward) => ward.WardCode === selectedWard)?.WardName || '';\r\n\r\n      setResult(`${selectedProvinceName}, ${selectedDistrictName}, ${selectedWardName}, ${diachiCuThe}`);\r\n    }\r\n  }, [selectedDistrict, selectedProvince, selectedWard, districts, provinces, wards, diachiCuThe]);\r\n\r\n  // Payment\r\n  // Show  payment information\r\n  const [isDeliveryChecked, setIsDeliveryChecked] = useState(false);\r\n\r\n  const handleDeliveryChange = (event) => {\r\n    setIsDeliveryChecked(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Typography variant=\"h5\" sx={{ marginTop: 3, mb: 3 }}>\r\n          Hi, Bạn Có Muốn Thanh Toán Hóa Đơn Của Bạn?\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <Button variant=\"outlined\" disabled>\r\n              Giao Hàng\r\n            </Button>\r\n            <Typography variant=\"h6\" sx={{ marginTop: 3 }}>\r\n              Hãy Nhập Thông Tin Của Bạn\r\n            </Typography>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"Họ\"\r\n              multiline\r\n              maxRows={4}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              sx={{ marginTop: 2 }}\r\n            />\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"Tên\"\r\n              multiline\r\n              maxRows={4}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              sx={{ marginTop: 2 }}\r\n            />\r\n            <div className=\"address\">\r\n              <FormControl size=\"small\" sx={{ m: 0, minWidth: 165, marginRight: 3, marginTop: 2 }}>\r\n                <InputLabel id=\"province-label\">Tỉnh/Thành Phố</InputLabel>\r\n                <Select\r\n                  labelId=\"province-label\"\r\n                  id=\"province-select\"\r\n                  value={selectedProvince}\r\n                  onChange={(e) => setSelectedProvince(e.target.value)}\r\n                  label=\"Tỉnh/Thành Phố\"\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Chọn Tỉnh/Thành Phố</em>\r\n                  </MenuItem>\r\n                  {provinces.map((province) => (\r\n                    <MenuItem key={province.ProvinceID} value={province.ProvinceID}>\r\n                      {province.ProvinceName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl size=\"small\" sx={{ m: 0, minWidth: 165, marginRight: 3, marginTop: 2 }}>\r\n                <InputLabel id=\"district-label\">Quận/Huyện</InputLabel>\r\n                <Select\r\n                  labelId=\"district-label\"\r\n                  id=\"district-select\"\r\n                  value={selectedDistrict}\r\n                  onChange={(e) => setSelectedDistrict(e.target.value)}\r\n                  label=\"Quận/Huyện\"\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Chọn Quận/Huyện</em>\r\n                  </MenuItem>\r\n                  {districts.map((district) => (\r\n                    <MenuItem key={district.DistrictID} value={district.DistrictID}>\r\n                      {district.DistrictName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <FormControl size=\"small\" sx={{ m: 0, minWidth: 170, marginTop: 2 }}>\r\n                <InputLabel id=\"ward-label\">Phường/Xã</InputLabel>\r\n                <Select\r\n                  labelId=\"ward-label\"\r\n                  id=\"ward-select\"\r\n                  value={selectedWard}\r\n                  onChange={(e) => setSelectedWard(e.target.value)}\r\n                  label=\"Phường/Xã\"\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>Chọn Phường/Xã</em>\r\n                  </MenuItem>\r\n                  {wards.map((ward) => (\r\n                    <MenuItem key={ward.WardCode} value={ward.WardCode}>\r\n                      {ward.WardName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Địa Chỉ Cụ Thể\"\r\n                multiline\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                fullWidth\r\n                sx={{ marginTop: 2 }}\r\n                value={diachiCuThe}\r\n                onChange={(e) => setDiachiCuThe(e.target.value)}\r\n              />\r\n              <div id=\"result\">{result}</div>\r\n            </div>\r\n            <Typography variant=\"h6\" sx={{ marginTop: 3 }}>\r\n              Làm Sao Để Chúng Tôi Liên Hệ Với Bạn\r\n            </Typography>\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"Số Điện Thoại\"\r\n              multiline\r\n              maxRows={4}\r\n              sx={{ marginTop: 2 }}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"standard-multiline-flexible\"\r\n              label=\"Email\"\r\n              multiline\r\n              maxRows={4}\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              fullWidth\r\n              sx={{ marginTop: 2 }}\r\n            />\r\n            <Typography variant=\"h6\" sx={{ marginTop: 3 }} gutterBottom>\r\n              Phương Thức Thanh Toán{' '}\r\n              <FormControlLabel control={<Switch />} onChange={handleDeliveryChange} label=\"Thanh Toán Bằng Thẻ\" />\r\n            </Typography>\r\n            {isDeliveryChecked === true ? (\r\n              <>\r\n                <ImageButton\r\n                  sx={{ marginBottom: 3 }}\r\n                  focusRipple\r\n                  style={{\r\n                    width: '50%',\r\n                  }}\r\n                >\r\n                  <ImageSrc\r\n                    style={{\r\n                      backgroundImage: `url('https://assets.topdev.vn/images/2020/08/25/VNPAY-Logo-yGapP.png')`,\r\n                      backgroundSize: '50%',\r\n                      width: 380,\r\n                    }}\r\n                  />\r\n\r\n                  <ImageBackdrop className=\"MuiImageBackdrop-root\" />\r\n                  <Image>\r\n                    <Typography\r\n                      component=\"span\"\r\n                      variant=\"subtitle1\"\r\n                      color=\"inherit\"\r\n                      sx={{\r\n                        position: 'relative',\r\n                        p: 4,\r\n                        pt: 2,\r\n                        pb: (theme) => `calc(${theme.spacing(1)} + 6px)`,\r\n                      }}\r\n                    >\r\n                      VNPAY\r\n                      <ImageMarked className=\"MuiImageMarked-root\" />\r\n                    </Typography>\r\n                  </Image>\r\n                </ImageButton>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Typography variant=\"button\" sx={{ marginBottom: 3, marginTop: 2 }} display=\"block\" gutterBottom>\r\n                  Thanh Toán Khi Nhập Hàng. Bên Vận Chuyển Sẽ Giao Hàng Tới Cho Bạn{' '}\r\n                </Typography>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <Typography variant=\"h6\" sx={{ marginTop: 8 }}>\r\n              Sản Phẩm Trong Đơn Hàng\r\n            </Typography>\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Tổng Tiền{' '}\r\n              </Typography>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                {tienShip}{' '}\r\n              </Typography>\r\n            </Stack>\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Tiền Ship{' '}\r\n              </Typography>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                {tienShip}{' '}\r\n              </Typography>\r\n            </Stack>\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={3}>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                Thành Tiền{' '}\r\n              </Typography>\r\n              <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n                {tienShip}{' '}\r\n              </Typography>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Detail-product.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\discounts\\DiscountPage.js",["962","963","964","965"],[],"import { Helmet } from 'react-helmet-async';\r\nimport { filter } from 'lodash';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { format } from 'date-fns';\r\n// @mui\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Paper,\r\n  Button,\r\n  Popover,\r\n  Checkbox,\r\n  TableRow,\r\n  MenuItem,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  IconButton,\r\n  TableContainer,\r\n  TablePagination,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\n// components\r\nimport Iconify from '../../components/iconify';\r\nimport Scrollbar from '../../components/scrollbar';\r\n// sections\r\nimport { UserListHead, UserListToolbar } from '../../sections/@dashboard/user';\r\nimport ModalDeleteDiscount from './Modal-Delete-Discount';\r\n// mock\r\n// import USERLIST from '../_mock/user';\r\n// import { useEffect } from 'react';\r\nimport { getSanPhamDetails } from '../../service/giamGiaService';\r\nimport ModelUpdateGiamGia from './ModalsUpdateGiamGia';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'stt', label: 'STT', alignRight: false },\r\n  { id: 'anh', label: 'Ảnh', alignRight: false },\r\n  { id: 'tenchuongtrinh', label: 'Chương Trình', alignRight: false },\r\n  { id: 'tensanpham', label: 'Tên sản phẩm', alignRight: false },\r\n  { id: 'mucgiam', label: 'Mức giảm', alignRight: false },\r\n  { id: 'thoigian', label: 'Thời gian', alignRight: false },\r\n  { id: 'dongia', label: 'Đơn giá', alignRight: false },\r\n  { id: 'sotienconlai', label: 'Số tiền còn lại', alignRight: false },\r\n  { id: 'trangthai', label: 'Trạng Thái', alignRight: false },\r\n  { id: 'thaotac', label: 'Thao Tác', alignRight: false }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(array, comparator, query) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function DiscountPage() {\r\n  // Select list of users\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const [order, setOrder] = useState('asc');\r\n\r\n  const [selected, setSelected] = useState([]);\r\n\r\n  const [orderBy, setOrderBy] = useState('tenChuongTrinh');\r\n\r\n  const [filterName, setFilterName] = useState('');\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const [listData, setListData] = useState([]);\r\n\r\n  // Show Data On Tables\r\n  // const [numberPages, setNumberPages] = useState(0);\r\n  const getListData = async () => {\r\n    try {\r\n      const res = await getSanPhamDetails();\r\n      console.log('Check res: ', res);\r\n      setListData(res);\r\n\r\n      // setNumberPages(Math.ceil(res.totalPages));\r\n    } catch (error) {\r\n      console.error('Error in list bill: ', error);\r\n    }\r\n  };\r\n  // const [currentPage, setCurrentPage] = useState(0);\r\n  useEffect(() => {\r\n    getListData();\r\n  }, []);\r\n\r\n  // Open and Close menu\r\n  const [object, getObject] = useState([]);\r\n  const handleOpenMenu = (event, row) => {\r\n    console.log('Check event: ', event);\r\n    console.log('Check row: ', row);\r\n    getObject(row);\r\n\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = listData.map((n) => n.idGgct);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n  // Next Page\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleFilterByName = (event) => {\r\n    setPage(0);\r\n    setFilterName(event.target.value);\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - listData.length) : 0;\r\n\r\n  const filteredUsers =\r\n    listData && listData ? applySortFilter(listData, getComparator(order, orderBy), filterName) : [];\r\n  const isNotFound = !filteredUsers.length && !!filterName;\r\n\r\n  // Set status of trangThai\r\n  function mapTrangThaiToStatus(trangThai) {\r\n    return trangThai === 0 ? 'Hoạt động' : trangThai === 10 ? 'Ngưng hoạt động' : 'Không xác định';\r\n  }\r\n  const navigate = useNavigate();\r\n\r\n  // Create a new Detail Direct\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  const [lastGeneratedNumber, setLastGeneratedNumber] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Đọc số lớn nhất từ cơ sở dữ liệu (localStorage) khi ứng dụng khởi động\r\n    const savedNumber = localStorage.getItem('lastGeneratedNumber');\r\n    if (savedNumber) {\r\n      setLastGeneratedNumber(Number(savedNumber));\r\n    }\r\n  }, []);\r\n  const generateNewCode = () => {\r\n    const newNumber = lastGeneratedNumber + 1;\r\n    setLastGeneratedNumber(newNumber);\r\n\r\n    // Lưu số mới vào cơ sở dữ liệu (localStorage)\r\n    localStorage.setItem('lastGeneratedNumber', newNumber.toString());\r\n\r\n    return `HD${newNumber.toString().padStart(5, '0')}`;\r\n  };\r\n\r\n  let getIdHttp;\r\n\r\n  const currentDate = new Date();\r\n  const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  // Handle delete\r\n  const [openDelete, setOpenDelete] = useState(false);\r\n  const [information, setInformation] = useState();\r\n  const handleDelete = () => {\r\n    setInformation(object);\r\n    setOpenDelete(true);\r\n    setOpen(null);\r\n  };\r\n  const handleClose = () => {\r\n    setOpenDelete(false);\r\n    getListData();\r\n  };\r\n\r\n  // Handle edit\r\n  const handleEdit = () => {\r\n    console.log(\"abc\");\r\n    navigate(`/dashboard/discount/update/${object.idGgct}`);\r\n  };\r\n\r\n  function formatCurrency(price) {\r\n    if (!price) return \"0\";\r\n\r\n    const formatter = new Intl.NumberFormat(\"vi-VN\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n  \r\n    const dateTime = new Date(dateString);\r\n    const formattedEndDate = format(dateTime, 'HH:mm dd/MM/yyyy');\r\n  \r\n    return formattedEndDate;\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Discount | 5F Store </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Giảm giá\r\n          </Typography>\r\n          <Link to={'/dashboard/discount/add'}>\r\n          <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\" />}>\r\n            Thêm Giảm Giá\r\n          </Button>\r\n          </Link>\r\n        </Stack>\r\n\r\n        <Card>\r\n          <UserListToolbar numSelected={selected.length} filterName={filterName} onFilterName={handleFilterByName} />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={listData.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                  onSelectAllClick={handleSelectAllClick}\r\n                />\r\n                <TableBody>\r\n                  {filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n                    const { idGgct, urlImage, tenChuongTrinh, tenSp, mucGiamPhanTram, mucGiamTienMat, ngayBatDau, ngayKetThuc, giaBanMin, giaBanMax, giaThucTeMin, giaThucTeMax, trangThai } = row;\r\n                    const selectedUser = selected.indexOf(idGgct) !== -1;\r\n\r\n                    return (\r\n                      <TableRow hover key={idGgct} tabIndex={-1} role=\"checkbox\" selected={selectedUser}>\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox checked={selectedUser} onChange={(event) => handleClick(event, idGgct)} />\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{index + 1}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <img src={urlImage} alt=\"Mô tả ảnh\" width=\"100\" height=\"100\" />\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{tenChuongTrinh}</TableCell>\r\n                        <TableCell align=\"left\">{tenSp}</TableCell>\r\n                        <TableCell align=\"left\">{mucGiamTienMat === null ? `${mucGiamPhanTram} %` : formatCurrency(mucGiamTienMat)}</TableCell>\r\n                        <TableCell align=\"left\">{`${formatDate(ngayBatDau)} - ${formatDate(ngayKetThuc)}`}</TableCell>\r\n                        <TableCell align=\"left\">{giaBanMin === giaBanMax ? formatCurrency(giaBanMin) : `${formatCurrency(giaBanMin)} - ${formatCurrency(giaBanMax)}`}</TableCell>\r\n                        <TableCell align=\"left\">{giaThucTeMin === giaThucTeMax ? formatCurrency(giaThucTeMin) : `${formatCurrency(giaThucTeMin)} - ${formatCurrency(giaThucTeMax)}`}</TableCell>\r\n                        <TableCell align=\"left\">{mapTrangThaiToStatus(trangThai)}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <IconButton size=\"large\" color=\"inherit\" onClick={(event) => handleOpenMenu(event, row)}>\r\n                            <Iconify icon={'eva:more-vertical-fill'} />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={3} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n\r\n                {isNotFound && (\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                        <Paper\r\n                          sx={{\r\n                            textAlign: 'center',\r\n                          }}\r\n                        >\r\n                          <Typography variant=\"h6\" paragraph>\r\n                            Not found\r\n                          </Typography>\r\n\r\n                          <Typography variant=\"body2\">\r\n                            No results found for &nbsp;\r\n                            <strong>&quot;{filterName}&quot;</strong>.\r\n                            <br /> Try checking for typos or using complete words.\r\n                          </Typography>\r\n                        </Paper>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={listData && listData.length ? listData.length : 0}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n\r\n      <Popover\r\n        open={Boolean(open)}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: {\r\n            p: 1,\r\n            width: 140,\r\n            '& .MuiMenuItem-root': {\r\n              px: 1,\r\n              typography: 'body2',\r\n              borderRadius: 0.75,\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        <MenuItem onClick={() => handleEdit()}>\r\n          <Iconify icon={'eva:edit-fill'} sx={{ mr: 2 }} />\r\n          Edit\r\n        </MenuItem>\r\n\r\n        <MenuItem onClick={() => handleDelete()} sx={{ color: 'error.main' }}>\r\n          <Iconify icon={'eva:trash-2-outline'} sx={{ mr: 2 }} />\r\n          Delete\r\n        </MenuItem>\r\n      </Popover>\r\n      {/* Dialog xác nhận xóa */}\r\n      <ModalDeleteDiscount open={openDelete} handleClose={handleClose} information={information} />\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\discounts\\ModalsUpdateGiamGia.js",["966","967","968","969","970","971","972","973"],[],"import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { DateTimePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport dayjs from 'dayjs';\r\nimport { DemoContainer, DemoItem } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { Alert, Button, Checkbox, Chip, Grid, Paper, Snackbar, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, TextField } from '@mui/material';\r\nimport { Col, Image, Table } from 'react-bootstrap';\r\nimport { detail, getAllSanPham, update } from \"../../service/giamGiaService\";\r\nimport \"../../scss/GiamGiaClient.scss\";\r\nimport \"../../scss/GiamGiaAdd.scss\";\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nconst ModelUpdateGiamGia = (props) => {\r\n\r\n  console.log(\"Data: \", props.data);\r\n\r\n  const { id } = useParams();\r\n\r\n  // const { show, handleClose, isDataGiamGia, getGiamGia } = props;\r\n  // console.log(dataSanPham)\r\n  const navigate = useNavigate();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([]);\r\n  const [right, setRight] = React.useState([]);\r\n  const [leftPage, setLeftPage] = React.useState(0);\r\n  const [leftRowsPerPage, setLeftRowsPerPage] = React.useState(5);\r\n  const [rightPage, setRightPage] = React.useState(0);\r\n  const [rightRowsPerPage, setRightRowsPerPage] = React.useState(5);\r\n  const [chiTietList, setchiTietList] = React.useState([]);\r\n  const [image, setImage] = useState([]);\r\n  const [images, setImages] = useState({});\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n\r\n\r\n  const [giamGia, setGiamGia] = useState({\r\n    maGiamGia: '',\r\n    tenChuongTrinh: '',\r\n    ngayBatDau: '',\r\n    ngayKetThuc: '',\r\n    mucGiamPhanTram: '',\r\n    mucGiamTienMat: '',\r\n    trangThai: 0,\r\n  });\r\n\r\n  const [selected, setSelected] = useState(\"\");\r\n  const getAllSp = async () => {\r\n    try {\r\n      const res = await getAllSanPham();\r\n      const resDetail = await detail(id);\r\n      console.log(\"data: \", res);\r\n      console.log(\"resDetail: \", resDetail.data.idGiamGia);\r\n      if (resDetail.data.idGiamGia.mucGiamPhanTram !== null) {\r\n        setSelected(\"phanTram\");\r\n      } else if (resDetail.data.idGiamGia.mucGiamTienMat !== null) {\r\n        setSelected(\"mucGiam\");\r\n      }\r\n      setGiamGia(resDetail.data.idGiamGia);\r\n      setLeft(res);\r\n\r\n    } catch (error) {\r\n      console.error('Error loading images:', error);\r\n    }\r\n  }\r\n\r\n\r\n  console.log(\"Img: \", image)\r\n\r\n  React.useEffect(() => {\r\n    getAllSp();\r\n  }, [])\r\n\r\n  const leftChecked = intersection(checked, left);\r\n\r\n  const handleToggle = (value, isLeft) => () => {\r\n    if (isLeft) {\r\n      const currentIndex = checked.indexOf(value);\r\n      const newChecked = [...checked];\r\n\r\n      if (currentIndex === -1) {\r\n        newChecked.push(value);\r\n      } else {\r\n        newChecked.splice(currentIndex, 1);\r\n      }\r\n\r\n      setChecked(newChecked);\r\n    } else {\r\n      const currentIndex = chiTietList.indexOf(value);\r\n      const newchiTietList = [...chiTietList];\r\n\r\n      if (currentIndex === -1) {\r\n        newchiTietList.push(value);\r\n      } else {\r\n        newchiTietList.splice(currentIndex, 1);\r\n      }\r\n      setchiTietList(newchiTietList);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    const newRight = right.concat(leftChecked);\r\n    const newLeft = not(left, leftChecked);\r\n\r\n    const sortedRight = leftChecked.concat(newRight.filter((value) => leftChecked.indexOf(value) === -1));\r\n\r\n    setRight(sortedRight);\r\n    setLeft(newLeft);\r\n    setChecked(not(checked, leftChecked));\r\n\r\n    setchiTietList([...chiTietList, ...leftChecked]);\r\n    console.log([...chiTietList, ...leftChecked])\r\n  };\r\n\r\n\r\n  const handleCheckedLeft = () => {\r\n    const newLeft = left.concat(chiTietList); // Sửa từ rightChecked sang chiTietList\r\n    const newRight = not(right, chiTietList); // Sửa từ rightChecked sang chiTietList\r\n\r\n    // Move the selected items to the top of the newLeft array\r\n    const sortedLeft = chiTietList.concat(newLeft.filter((value) => chiTietList.indexOf(value) === -1)); // Sửa từ rightChecked sang chiTietList\r\n\r\n    setLeft(sortedLeft);\r\n    setRight(newRight);\r\n    setchiTietList([]); // Xóa các phần tử đã chọn khỏi chiTietList\r\n    setChecked([]); // Xóa các phần tử đã chọn\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleLeftPageChange = (event, newPage) => {\r\n    setLeftPage(newPage);\r\n  };\r\n\r\n  const handleLeftRowsPerPageChange = (event) => {\r\n    setLeftRowsPerPage(parseInt(event.target.value, 10));\r\n    setLeftPage(0);\r\n  };\r\n\r\n  const handleRightPageChange = (event, newPage) => {\r\n    setRightPage(newPage);\r\n  };\r\n\r\n  const handleRightRowsPerPageChange = (event) => {\r\n    setRightRowsPerPage(parseInt(event.target.value, 10));\r\n    setRightPage(0);\r\n  };\r\n\r\n  const isMoveLeftDisabled = chiTietList.length === 0;\r\n\r\n  function formatCurrency(price) {\r\n    if (!price) return \"0\";\r\n\r\n    const formatter = new Intl.NumberFormat(\"vi-VN\", {\r\n      style: \"currency\",\r\n      currency: \"VND\",\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  console.log(chiTietList)\r\n\r\n  const { maGiamGia, tenChuongTrinh, ngayBatDau, ngayKetThuc, mucGiamPhanTram, mucGiamTienMat } = giamGia;\r\n\r\n  const onChangeNbd = (newDate) => {\r\n    // Lấy ngày giờ mới từ newDate\r\n    const newDatetime = newDate;\r\n    setGiamGia({\r\n      ...giamGia,\r\n      ngayBatDau: newDatetime\r\n    })\r\n  }\r\n\r\n  const onChangeNkt = (newDate) => {\r\n    // Lấy ngày giờ mới từ newDate\r\n    const newDatetime = newDate;\r\n    setGiamGia({\r\n      ...giamGia,\r\n      ngayKetThuc: newDatetime\r\n    })\r\n  }\r\n\r\n  const onInputChange = (e) => {\r\n    console.log(\"e: \", e);\r\n    setGiamGia({ ...giamGia, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  console.log(giamGia);\r\n\r\n  const changeHandler = e => {\r\n    setSelected(e.target.value);\r\n    // Clear the values based on the selected radio button\r\n    if (e.target.value === 'phanTram') {\r\n      setGiamGia({\r\n        ...giamGia,\r\n        mucGiamTienMat: null\r\n      });\r\n    } else if (e.target.value === 'mucGiam') {\r\n      setGiamGia({\r\n        ...giamGia,\r\n        mucGiamPhanTram: null\r\n      });\r\n    }\r\n  };\r\n  console.log(selected);\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    if (!maGiamGia.trim() || !tenChuongTrinh.trim() || !ngayBatDau || !ngayKetThuc) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập đầy đủ thông tin chương trình giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!selected) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng chọn loại giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selected === 'phanTram' && (!mucGiamPhanTram || Number.isNaN(mucGiamPhanTram) || mucGiamPhanTram < 1 || mucGiamPhanTram > 50)) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập mức giảm phần trăm hợp lệ (1-50)!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selected === 'mucGiam' && (!mucGiamTienMat || Number.isNaN(mucGiamTienMat))) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập mức giảm tiền mặt hợp lệ!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (chiTietList.length === 0) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng chọn ít nhất một sản phẩm để áp dụng giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const checkDateValidity = () => {\r\n      const startDate = dayjs(ngayBatDau);\r\n      const endDate = dayjs(ngayKetThuc);\r\n\r\n      return endDate.isAfter(startDate);\r\n    }\r\n\r\n    if (!checkDateValidity()) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Ngày kết thúc phải sau ngày bắt đầu!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    // try {\r\n    const selectedDate = dayjs(ngayBatDau);\r\n\r\n    // Format ngày bắt đầu\r\n    const formattedStartDate = selectedDate.format('YYYY-MM-DDTHH:mm:ss');\r\n\r\n    const selectedDateEnd = dayjs(ngayKetThuc);\r\n\r\n    // Format ngày kết thúc \r\n    const formattedEndDate = selectedDateEnd.format('YYYY-MM-DDTHH:mm:ss');\r\n\r\n    const giaGiaAa = {\r\n      maGiamGia: giamGia.maGiamGia,\r\n      tenChuongTrinh: giamGia.tenChuongTrinh,\r\n      ngayBatDau: formattedStartDate,\r\n      ngayKetThuc: formattedEndDate,\r\n      mucGiamPhanTram: giamGia.mucGiamPhanTram,\r\n      mucGiamTienMat: giamGia.mucGiamTienMat,\r\n      trangThai: 0,\r\n    }\r\n\r\n    console.log(\"giaGiaAa: \", giaGiaAa)\r\n\r\n\r\n    // Trích xuất danh sách idSp từ chiTietList\r\n    const idSpList = chiTietList.map(item => item.sanPham.idSp);\r\n\r\n    // Cập nhật state listIdSp\r\n    const giamGiaChiTietOk = {\r\n      giamGia: giaGiaAa,\r\n      idSp: idSpList\r\n    }\r\n    console.log(\"giamGiaChiTietOk\", giamGiaChiTietOk);\r\n\r\n    const response = await update(giamGiaChiTietOk, id);\r\n\r\n    if (response.status === 'Ok!') {\r\n      navigate('/dashboard/discounts');\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Cập nhật thành công!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Cập nhật không thành công!',\r\n      });\r\n    }\r\n    // } catch (error) {\r\n    //   setAlertContent({\r\n    //     type: 'error',\r\n    //     message: 'Đã xảy ra lỗi khi cập nhật giảm giá!',\r\n    //   });\r\n    // }\r\n\r\n  };\r\n  // if (!giamGiaData) {\r\n  //   return <div>Loading...</div>;\r\n  // }\r\n  const todayAtNoon = dayjs().set('hour', 12).startOf('hour');\r\n  const todayAt9AM = dayjs().set('hour', 9).startOf('hour');\r\n\r\n  const ngayBatDauFromApi = giamGia.ngayBatDau;\r\n  const parsedStartDate = dayjs(ngayBatDauFromApi);\r\n\r\n  // const [ngayBatDau, setNgayBatDau] = useState(giamGia.ngayBatDau);\r\n  // console.log(ngayBatDau);\r\n  // const [ngayKetThuc, setNgayKetThuc] = useState();\r\n  return (\r\n    <>\r\n      <Modal.Header>\r\n        <Modal.Title className='text-center m-25 w-100 text-uppercase'>Chỉnh sửa chương trình giảm giá</Modal.Title>\r\n      </Modal.Header>\r\n      <div className=\"d-flex justify-content-around\">\r\n        <div className=\"content-left\">\r\n          <p className='text-center info-discount'>Thông tin giảm giá</p>\r\n          <Modal.Body>\r\n            <div className=\"body-add-new\">\r\n              <form>\r\n                <div className=\"mb-3\">\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    name='maGiamGia'\r\n                    label=\"Mã chương trình\"\r\n                    value={maGiamGia}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Tên chương trình\"\r\n                    name='tenChuongTrinh'\r\n                    value={tenChuongTrinh}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Mức Giảm</p>\r\n                  <div>\r\n                    <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" onChange={(e) => changeHandler(e)} type=\"radio\" name=\"flexRadioDefault\" id=\"form-check-label\" value={\"mucGiam\"} checked={selected === \"mucGiam\"} />\r\n                      <p className=\"form-check-label\">\r\n                        Tiền Mặt\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input className=\"form-check-input\" onChange={(e) => changeHandler(e)} type=\"radio\" name=\"flexRadioDefault\" id=\"form-check-label1\" value={\"phanTram\"} checked={selected === \"phanTram\"} />\r\n                      <p className=\"form-check-label1\">\r\n                        Phần Trăm\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" aria-hidden={selected !== \"phanTram\"}>\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Mức giảm %\"\r\n                    name='mucGiamPhanTram'\r\n                    value={mucGiamPhanTram}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\" aria-hidden={selected !== \"mucGiam\"}>\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Mức giảm tiền mặt\"\r\n                    name='mucGiamTienMat'\r\n                    value={mucGiamTienMat}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Ngày bắt đầu</p>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={['DateTimePicker']}>\r\n                      <DemoItem>\r\n                        <DateTimePicker\r\n                          defaultValue={ngayBatDau}\r\n                          name='ngayBatDau'\r\n                          value={dayjs(ngayBatDau)}\r\n                          onChange={(e) => onChangeNbd(e)}\r\n                        />\r\n                      </DemoItem>\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Ngày kết thúc</p>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={['DateTimePicker']}>\r\n                      <DemoItem>\r\n                        <DateTimePicker\r\n                          minDateTime={todayAt9AM}\r\n                          name='ngayKetThuc'\r\n                          value={dayjs(ngayKetThuc)}\r\n                          onChange={(e) => onChangeNkt(e)}\r\n                        />\r\n                      </DemoItem>\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </div>\r\n\r\n                {/* <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Ngày kết thúc</label>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DateTimePicker\r\n                      renderInput={(props) => <TextField {...props} />}\r\n                      name='ngayKetThuc'\r\n                      value={ngayKetThuc}\r\n                      onChange={(newDate) => onInputChange(newDate)}\r\n                    />\r\n                  </LocalizationProvider>\r\n                </div> */}\r\n\r\n                <button onClick={(e) => handleSave(e)} className=\"btn bg-primary text-light d-flex align-items-end\">Thêm</button>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </div>\r\n\r\n        <div className=\"content-right\">\r\n          <p className='text-center info-discount'>Chọn sản phẩm cần giảm giá</p>\r\n          <div>\r\n            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n              <Grid item>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            onClick={handleToggleAll(left)}\r\n                            checked={numberOfChecked(left) === left.length && left.length !== 0}\r\n                            indeterminate={numberOfChecked(left) !== left.length && numberOfChecked(left) !== 0}\r\n                            disabled={left.length === 0}\r\n                            inputProps={{\r\n                              'aria-label': 'all items selected',\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>STT</TableCell>\r\n                        <TableCell>Mã</TableCell>\r\n                        <TableCell>Tên sản phẩm</TableCell>\r\n                        <TableCell>Trạng thái</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {left.slice(leftPage * leftRowsPerPage, leftPage * leftRowsPerPage + leftRowsPerPage).map((value, index) =>\r\n                      (\r\n                        <TableRow key={`left_${value.sanPham.idSp}`} onClick={handleToggle(value, true)}>\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              value={value.sanPham.idSp}\r\n                              checked={checked.indexOf(value) !== -1}\r\n\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{index + 1}</TableCell>\r\n                          <TableCell>{value.sanPham.maSp}</TableCell>\r\n                          <TableCell>{value.sanPham.tenSp}</TableCell>\r\n                          <TableCell>{value.sanPham.trangThai === 0 ? <Chip label=\"Hoạt động\" className=\"bg-success text-light\" /> : <Chip label=\"Ngưng hoạt động\" className=\"bg-danger text-light\" />}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={left.length}\r\n                  rowsPerPage={leftRowsPerPage}\r\n                  page={leftPage}\r\n                  onPageChange={handleLeftPageChange}\r\n                  onRowsPerPageChange={handleLeftRowsPerPageChange}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    sx={{ my: 0.5 }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCheckedRight}\r\n                    disabled={leftChecked.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    &gt;\r\n                  </Button>\r\n                  <Button\r\n                    sx={{ my: 0.5 }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCheckedLeft}\r\n                    disabled={isMoveLeftDisabled}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    &lt;\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>STT</TableCell>\r\n                        <TableCell>Ảnh sản phẩm</TableCell>\r\n                        <TableCell>Mã sản phẩm</TableCell>\r\n                        <TableCell>Tên sản phẩm</TableCell>\r\n                        <TableCell>Giá sản phẩm</TableCell>\r\n                        <TableCell>Trạng thái</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {right.slice(rightPage * rightRowsPerPage, rightPage * rightRowsPerPage + rightRowsPerPage).map((value, index) => (\r\n                        <TableRow key={`right_${value.sanPham.idSp}`}>\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox\r\n                              value={value.sanPham.idSp}\r\n                              checked={chiTietList.indexOf(value) !== -1} // Sử dụng chiTietList thay vì checked\r\n                              onClick={handleToggle(value, false)} // Đặt isLeft là false để xác định là bảng phải\r\n                            // onChange={handleChange}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell>{index + 1}</TableCell>\r\n                          <TableCell>\r\n                            <Col xs={6} md={4}>\r\n                              <Image\r\n                                rounded\r\n                                style={{ width: \"150px\", height: \"auto\" }}\r\n                                src={value.url_image}\r\n                                alt={`Ảnh sản phẩm ${value.maSp}`}\r\n                              />\r\n                            </Col>\r\n                          </TableCell>\r\n                          <TableCell>{value.sanPham.maSp}</TableCell>\r\n                          <TableCell>{value.sanPham.tenSp}</TableCell>\r\n                          <TableCell>{formatCurrency(value.sanPham.giaBan)}</TableCell>\r\n                          <TableCell>{value.sanPham.trangThai === 0 ? <Chip label=\"Hoạt động\" className=\"bg-success text-light\" /> : <Chip label=\"Ngưng hoạt động\" className=\"bg-danger text-light\" />}</TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={right.length}\r\n                  rowsPerPage={rightRowsPerPage}\r\n                  page={rightPage}\r\n                  onPageChange={handleRightPageChange}\r\n                  onRowsPerPageChange={handleRightRowsPerPageChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/* <ModelAddNewGiamGia dataSanPham={chiTietList}/> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelUpdateGiamGia;","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\discounts\\ModalsAddNewGiamGia.js",["974"],[],"import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { vi } from 'date-fns/locale'; // Import locale cho tiếng Việt\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Checkbox,\r\n  Chip,\r\n  Grid,\r\n  Paper,\r\n  Snackbar,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { Col, Image, Table } from 'react-bootstrap';\r\nimport { DateTimePicker, LocalizationProvider } from '@mui/x-date-pickers';\r\nimport dayjs from 'dayjs';\r\nimport { DemoContainer, DemoItem } from '@mui/x-date-pickers/internals/demo';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { add, getAllSanPham } from '../../service/giamGiaService';\r\nimport '../../scss/GiamGiaClient.scss';\r\nimport '../../scss/GiamGiaAdd.scss';\r\n\r\nfunction not(a, b) {\r\n  return a.filter((value) => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n  return a.filter((value) => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n  return [...a, ...not(b, a)];\r\n}\r\n\r\nconst ModelAddNewGiamGia = () => {\r\n  // const { show, handleClose, isDataGiamGia, getGiamGia } = props;\r\n  // console.log(dataSanPham)\r\n  const navigate = useNavigate();\r\n  const [checked, setChecked] = React.useState([]);\r\n  const [left, setLeft] = React.useState([]);\r\n  const [right, setRight] = React.useState([]);\r\n  const [leftPage, setLeftPage] = React.useState(0);\r\n  const [leftRowsPerPage, setLeftRowsPerPage] = React.useState(5);\r\n  const [rightPage, setRightPage] = React.useState(0);\r\n  const [rightRowsPerPage, setRightRowsPerPage] = React.useState(5);\r\n  const [chiTietList, setchiTietList] = React.useState([]);\r\n  const [image, setImage] = useState([]);\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const getAllSp = async () => {\r\n    try {\r\n      const res = await getAllSanPham();\r\n      console.log('data: ', res);\r\n      setLeft(res);\r\n    } catch (error) {\r\n      console.error('Error loading images:', error);\r\n    }\r\n  };\r\n\r\n  console.log('Img: ', image);\r\n\r\n  React.useEffect(() => {\r\n    getAllSp();\r\n  }, []);\r\n\r\n  const leftChecked = intersection(checked, left);\r\n\r\n  const handleToggle = (value, isLeft) => () => {\r\n    if (isLeft) {\r\n      const currentIndex = checked.indexOf(value);\r\n      const newChecked = [...checked];\r\n\r\n      if (currentIndex === -1) {\r\n        newChecked.push(value);\r\n      } else {\r\n        newChecked.splice(currentIndex, 1);\r\n      }\r\n\r\n      setChecked(newChecked);\r\n    } else {\r\n      const currentIndex = chiTietList.indexOf(value);\r\n      const newchiTietList = [...chiTietList];\r\n\r\n      if (currentIndex === -1) {\r\n        newchiTietList.push(value);\r\n      } else {\r\n        newchiTietList.splice(currentIndex, 1);\r\n      }\r\n      setchiTietList(newchiTietList);\r\n    }\r\n  };\r\n\r\n  const numberOfChecked = (items) => intersection(checked, items).length;\r\n\r\n  const handleToggleAll = (items) => () => {\r\n    if (numberOfChecked(items) === items.length) {\r\n      setChecked(not(checked, items));\r\n    } else {\r\n      setChecked(union(checked, items));\r\n    }\r\n  };\r\n\r\n  const handleCheckedRight = () => {\r\n    const newRight = right.concat(leftChecked);\r\n    const newLeft = not(left, leftChecked);\r\n\r\n    const sortedRight = leftChecked.concat(newRight.filter((value) => leftChecked.indexOf(value) === -1));\r\n\r\n    setRight(sortedRight);\r\n    setLeft(newLeft);\r\n    setChecked(not(checked, leftChecked));\r\n\r\n    setchiTietList([...chiTietList, ...leftChecked]);\r\n    console.log([...chiTietList, ...leftChecked]);\r\n  };\r\n\r\n  const handleCheckedLeft = () => {\r\n    const newLeft = left.concat(chiTietList); // Sửa từ rightChecked sang chiTietList\r\n    const newRight = not(right, chiTietList); // Sửa từ rightChecked sang chiTietList\r\n\r\n    // Move the selected items to the top of the newLeft array\r\n    const sortedLeft = chiTietList.concat(newLeft.filter((value) => chiTietList.indexOf(value) === -1)); // Sửa từ rightChecked sang chiTietList\r\n\r\n    setLeft(sortedLeft);\r\n    setRight(newRight);\r\n    setchiTietList([]); // Xóa các phần tử đã chọn khỏi chiTietList\r\n    setChecked([]); // Xóa các phần tử đã chọn\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  const handleLeftPageChange = (event, newPage) => {\r\n    setLeftPage(newPage);\r\n  };\r\n\r\n  const handleLeftRowsPerPageChange = (event) => {\r\n    setLeftRowsPerPage(parseInt(event.target.value, 10));\r\n    setLeftPage(0);\r\n  };\r\n\r\n  const handleRightPageChange = (event, newPage) => {\r\n    setRightPage(newPage);\r\n  };\r\n\r\n  const handleRightRowsPerPageChange = (event) => {\r\n    setRightRowsPerPage(parseInt(event.target.value, 10));\r\n    setRightPage(0);\r\n  };\r\n\r\n  const isMoveLeftDisabled = chiTietList.length === 0;\r\n\r\n  function formatCurrency(price) {\r\n    if (!price) return '0';\r\n\r\n    const formatter = new Intl.NumberFormat('vi-VN', {\r\n      style: 'currency',\r\n      currency: 'VND',\r\n      minimumFractionDigits: 0,\r\n    });\r\n\r\n    return formatter.format(price);\r\n  }\r\n\r\n  const [giamGia, setGiamGia] = useState({\r\n    maGiamGia: '',\r\n    tenChuongTrinh: '',\r\n    ngayBatDau: '',\r\n    ngayKetThuc: '',\r\n    mucGiamPhanTram: '',\r\n    mucGiamTienMat: '',\r\n    trangThai: 0,\r\n  });\r\n\r\n  console.log(chiTietList);\r\n\r\n  const { maGiamGia, tenChuongTrinh, mucGiamPhanTram, mucGiamTienMat } = giamGia;\r\n\r\n  const onInputChange = (e) => {\r\n    setGiamGia({ ...giamGia, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  console.log(giamGia);\r\n\r\n  const [selected, setSelected] = useState('');\r\n  const changeHandler = (e) => {\r\n    setSelected(e.target.value);\r\n  };\r\n\r\n  const handleSave = async (e) => {\r\n    e.preventDefault();\r\n    if (!maGiamGia.trim() || !tenChuongTrinh.trim() || !ngayBatDau || !ngayKetThuc) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập đầy đủ thông tin chương trình giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!selected) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng chọn loại giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (\r\n      selected === 'phanTram' &&\r\n      (!mucGiamPhanTram || Number.isNaN(mucGiamPhanTram) || mucGiamPhanTram < 1 || mucGiamPhanTram > 50)\r\n    ) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập mức giảm phần trăm hợp lệ (1-50)!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (selected === 'mucGiam' && (!mucGiamTienMat || Number.isNaN(mucGiamTienMat))) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng nhập mức giảm tiền mặt hợp lệ!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (chiTietList.length === 0) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Vui lòng chọn ít nhất một sản phẩm để áp dụng giảm giá!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    const checkDateValidity = () => ngayKetThuc.isAfter(ngayBatDau);\r\n\r\n    if (!checkDateValidity()) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Ngày kết thúc phải sau ngày bắt đầu!',\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Định dạng ngày và giờ theo múi giờ Việt Nam\r\n\r\n      const selectedDate = dayjs(ngayBatDau);\r\n      const ngay = selectedDate.format('YYYY-MM-DDTHH:mm:ss', { locale: vi });\r\n      const selectedDatekt = dayjs(ngayKetThuc);\r\n      const ngaykt = selectedDatekt.format('YYYY-MM-DDTHH:mm:ss', { locale: vi });\r\n\r\n      // const formattedDateFirst = format(ngay, 'dd/MM/yyyy HH:mm:ss', { locale: vi });\r\n      // const formattedDateLast = format(ngaykt, 'dd/MM/yyyy HH:mm:ss', { locale: vi });\r\n\r\n      console.log('ngay', ngay);\r\n\r\n      const giaGiaAa = {\r\n        maGiamGia: giamGia.maGiamGia,\r\n        tenChuongTrinh: giamGia.tenChuongTrinh,\r\n        ngayBatDau: ngay,\r\n        ngayKetThuc: ngaykt,\r\n        mucGiamPhanTram: giamGia.mucGiamPhanTram,\r\n        mucGiamTienMat: giamGia.mucGiamTienMat,\r\n        trangThai: 0,\r\n      };\r\n\r\n      console.log('giaGiaAa', giaGiaAa);\r\n\r\n      // Trích xuất danh sách idSp từ chiTietList\r\n      const idSpList = chiTietList.map((item) => item.sanPham.idSp);\r\n\r\n      // Cập nhật state listIdSp\r\n      const giamGiaChiTietOk = {\r\n        giamGia: giaGiaAa,\r\n        idSp: idSpList,\r\n      };\r\n      console.log('giamGiaChiTietOk', giamGiaChiTietOk);\r\n\r\n      const response = await add(giamGiaChiTietOk);\r\n\r\n      if (response.status === 'Ok!') {\r\n        navigate('/dashboard/discounts');\r\n        setAlertContent({\r\n          type: 'success',\r\n          message: 'Thêm thành công!',\r\n        });\r\n      } else {\r\n        setAlertContent({\r\n          type: 'success',\r\n          message: 'Thêm không thành công!',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Đã xảy ra lỗi khi thêm giảm giá!',\r\n      });\r\n    }\r\n  };\r\n  // if (!giamGiaData) {\r\n  //   return <div>Loading...</div>;\r\n  // }\r\n  const todayAtNoon = dayjs().set('hour', 12).startOf('hour');\r\n  const todayAt9AM = dayjs().set('hour', 9).startOf('hour');\r\n  const [ngayBatDau, setNgayBatDau] = useState(dayjs().set('hour', 12).startOf('hour'));\r\n  const [ngayKetThuc, setNgayKetThuc] = useState(dayjs().set('hour', 12).startOf('hour'));\r\n  return (\r\n    <>\r\n      <Modal.Header>\r\n        <Modal.Title className=\"text-center m-25 w-100 text-uppercase\">Tạo chương trình giảm giá</Modal.Title>\r\n      </Modal.Header>\r\n      <div className=\"d-flex justify-content-around\">\r\n        <div className=\"content-left\">\r\n          <p className=\"text-center info-discount\">Thông tin giảm giá</p>\r\n          <Modal.Body>\r\n            <div className=\"body-add-new\">\r\n              <form>\r\n                <div className=\"mb-3\">\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    name=\"maGiamGia\"\r\n                    label=\"Mã chương trình\"\r\n                    value={maGiamGia}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Tên chương trình\"\r\n                    name=\"tenChuongTrinh\"\r\n                    value={tenChuongTrinh}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Mức Giảm</p>\r\n                  <div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        onChange={(e) => changeHandler(e)}\r\n                        type=\"radio\"\r\n                        name=\"flexRadioDefault\"\r\n                        id=\"form-check-label\"\r\n                        value={'mucGiam'}\r\n                        checked={selected === 'mucGiam'}\r\n                      />\r\n                      <p className=\"form-check-label\">Tiền Mặt</p>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                      <input\r\n                        className=\"form-check-input\"\r\n                        onChange={(e) => changeHandler(e)}\r\n                        type=\"radio\"\r\n                        name=\"flexRadioDefault\"\r\n                        id=\"form-check-label1\"\r\n                        value={'phanTram'}\r\n                        checked={selected === 'phanTram'}\r\n                      />\r\n                      <p className=\"form-check-label1\">Phần Trăm</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\" aria-hidden={selected !== 'phanTram'}>\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Mức giảm %\"\r\n                    name=\"mucGiamPhanTram\"\r\n                    value={mucGiamPhanTram}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\" aria-hidden={selected !== 'mucGiam'}>\r\n                  <TextField\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2 }}\r\n                    label=\"Mức giảm tiền mặt\"\r\n                    name=\"mucGiamTienMat\"\r\n                    value={mucGiamTienMat}\r\n                    onChange={(e) => onInputChange(e)}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Ngày bắt đầu</p>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={['DateTimePicker']}>\r\n                      <DemoItem>\r\n                        <DateTimePicker\r\n                          defaultValue={todayAtNoon}\r\n                          minDateTime={todayAt9AM}\r\n                          name=\"ngayBatDau\"\r\n                          value={ngayBatDau}\r\n                          onChange={(newDate) => setNgayBatDau(newDate)}\r\n                        />\r\n                      </DemoItem>\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <p className=\"form-label\">Ngày kết thúc</p>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DemoContainer components={['DateTimePicker']}>\r\n                      <DemoItem>\r\n                        <DateTimePicker\r\n                          defaultValue={todayAtNoon}\r\n                          minDateTime={todayAt9AM}\r\n                          name=\"ngayKetThuc\"\r\n                          value={ngayKetThuc}\r\n                          onChange={(newDate) => setNgayKetThuc(newDate)}\r\n                        />\r\n                      </DemoItem>\r\n                    </DemoContainer>\r\n                  </LocalizationProvider>\r\n                </div>\r\n\r\n                {/* <div className=\"mb-3\">\r\n                  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label\">Ngày kết thúc</label>\r\n                  <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                    <DateTimePicker\r\n                      renderInput={(props) => <TextField {...props} />}\r\n                      name='ngayKetThuc'\r\n                      value={ngayKetThuc}\r\n                      onChange={(newDate) => onInputChange(newDate)}\r\n                    />\r\n                  </LocalizationProvider>\r\n                </div> */}\r\n\r\n                <Button onClick={(e) => handleSave(e)} className=\"btn bg-primary text-light d-flex align-items-end\">\r\n                  Thêm\r\n                </Button>\r\n              </form>\r\n            </div>\r\n          </Modal.Body>\r\n        </div>\r\n\r\n        <div className=\"content-right\">\r\n          <p className=\"text-center info-discount\">Chọn sản phẩm cần giảm giá</p>\r\n          <div>\r\n            <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n              <Grid item>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            onClick={handleToggleAll(left)}\r\n                            checked={numberOfChecked(left) === left.length && left.length !== 0}\r\n                            indeterminate={numberOfChecked(left) !== left.length && numberOfChecked(left) !== 0}\r\n                            disabled={left.length === 0}\r\n                            inputProps={{\r\n                              'aria-label': 'all items selected',\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>STT</TableCell>\r\n                        <TableCell>Mã</TableCell>\r\n                        <TableCell>Tên sản phẩm</TableCell>\r\n                        <TableCell>Trạng thái</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {left\r\n                        .slice(leftPage * leftRowsPerPage, leftPage * leftRowsPerPage + leftRowsPerPage)\r\n                        .map((value, index) => (\r\n                          <TableRow key={`left_${value.sanPham.idSp}`} onClick={handleToggle(value, true)}>\r\n                            <TableCell padding=\"checkbox\">\r\n                              <Checkbox value={value.sanPham.idSp} checked={checked.indexOf(value) !== -1} />\r\n                            </TableCell>\r\n                            <TableCell>{index + 1}</TableCell>\r\n                            <TableCell>{value.sanPham.maSp}</TableCell>\r\n                            <TableCell>{value.sanPham.tenSp}</TableCell>\r\n                            <TableCell>\r\n                              {value.sanPham.trangThai === 0 ? (\r\n                                <Chip label=\"Hoạt động\" className=\"bg-success text-light\" />\r\n                              ) : (\r\n                                <Chip label=\"Ngưng hoạt động\" className=\"bg-danger text-light\" />\r\n                              )}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={left.length}\r\n                  rowsPerPage={leftRowsPerPage}\r\n                  page={leftPage}\r\n                  onPageChange={handleLeftPageChange}\r\n                  onRowsPerPageChange={handleLeftRowsPerPageChange}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" alignItems=\"center\">\r\n                  <Button\r\n                    sx={{ my: 0.5 }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCheckedRight}\r\n                    disabled={leftChecked.length === 0}\r\n                    aria-label=\"move selected right\"\r\n                  >\r\n                    &gt;\r\n                  </Button>\r\n                  <Button\r\n                    sx={{ my: 0.5 }}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={handleCheckedLeft}\r\n                    disabled={isMoveLeftDisabled}\r\n                    aria-label=\"move selected left\"\r\n                  >\r\n                    &lt;\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell> </TableCell>\r\n                        <TableCell>STT</TableCell>\r\n                        <TableCell>Ảnh sản phẩm</TableCell>\r\n                        <TableCell>Mã sản phẩm</TableCell>\r\n                        <TableCell>Tên sản phẩm</TableCell>\r\n                        <TableCell>Giá sản phẩm</TableCell>\r\n                        <TableCell>Trạng thái</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {right\r\n                        .slice(rightPage * rightRowsPerPage, rightPage * rightRowsPerPage + rightRowsPerPage)\r\n                        .map((value, index) => (\r\n                          <TableRow key={`right_${value.sanPham.idSp}`}>\r\n                            <TableCell padding=\"checkbox\">\r\n                              <Checkbox\r\n                                value={value.sanPham.idSp}\r\n                                checked={chiTietList.indexOf(value) !== -1} // Sử dụng chiTietList thay vì checked\r\n                                onClick={handleToggle(value, false)} // Đặt isLeft là false để xác định là bảng phải\r\n                                // onChange={handleChange}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>{index + 1}</TableCell>\r\n                            <TableCell>\r\n                              <Col xs={6} md={4}>\r\n                                <Image\r\n                                  rounded\r\n                                  style={{ width: '150px', height: 'auto' }}\r\n                                  src={value.url_image}\r\n                                  alt={`Ảnh sản phẩm ${value.maSp}`}\r\n                                />\r\n                              </Col>\r\n                            </TableCell>\r\n                            <TableCell>{value.sanPham.maSp}</TableCell>\r\n                            <TableCell>{value.sanPham.tenSp}</TableCell>\r\n                            <TableCell>\r\n                              {value.sanPham.giaSmall === value.sanPham.giaBig\r\n                                ? formatCurrency(value.sanPham.giaSmall)\r\n                                : `${formatCurrency(value.sanPham.giaSmall)} - ${formatCurrency(value.sanPham.giaBig)}`}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {value.sanPham.trangThai === 0 ? (\r\n                                <Chip label=\"Hoạt động\" className=\"bg-success text-light\" />\r\n                              ) : (\r\n                                <Chip label=\"Ngưng hoạt động\" className=\"bg-danger text-light\" />\r\n                              )}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[5, 10, 25]}\r\n                  component=\"div\"\r\n                  count={right.length}\r\n                  rowsPerPage={rightRowsPerPage}\r\n                  page={rightPage}\r\n                  onPageChange={handleRightPageChange}\r\n                  onRowsPerPageChange={handleRightRowsPerPageChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/* <ModelAddNewGiamGia dataSanPham={chiTietList}/> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModelAddNewGiamGia;\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Staff\\Modal-Update-Staff.js",["975","976"],[],"import { useCallback, useEffect, useState } from \"react\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { detailTaiKhoan, postUpdateTaiKhoan, } from \"../../service/taiKhoanNhanVienService\";\r\nimport { chucVu3, detailTen } from \"../../service/chucVuService\";\r\n\r\n\r\n\r\nconst UpdateTkNV = (props) => {\r\n  const param = useParams();\r\n  const idNV = param.id;\r\n  const [Data, setData] = useState([]);\r\n  const [chucVu, setChucVu] = useState(\"\");\r\n  const [ho, setHo] = useState(\"\");\r\n  const [ten, setTen] = useState(\"\");\r\n  const [sdt, setSdt] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [matKhau, setMatKhau] = useState(\"\");\r\n  const [soCanCuoc, setSoCanCuoc] = useState(\"\");\r\n  const [trangThai, setTrangThai] = useState(\"0\");\r\n  const [myChucVu, setMyChucVu] = useState([]);\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [validationErrors, setValidationErrors] = useState(\"\");\r\n\r\n  const getAllChucVu = async () => {\r\n    const rs = await chucVu3(0);\r\n    setMyChucVu(rs);\r\n  };\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    getAllChucVu();\r\n  }, []);\r\n\r\n  // chuyen trang\r\n  const navigate = useNavigate();\r\n  const getListData = useCallback(async () => {\r\n    try {\r\n      const res = await detailTaiKhoan(idNV);\r\n      setData(res);\r\n      setChucVu(res.idChucVu.tenCv);\r\n      setHo(res.ho);\r\n      setTen(res.ten);\r\n      setEmail(res.email);\r\n      setSdt(res.sdt);\r\n      setMatKhau(res.matKhau);\r\n      setSoCanCuoc(res.soCanCuoc);\r\n      setTrangThai(res.trangThai);\r\n      console.log(\"check res: \", res);\r\n    } catch (error) {\r\n      console.log(\"error: \", error);\r\n    }\r\n  }, [idNV]);\r\n  useEffect(() => {\r\n    getListData();\r\n  }, [getListData]);\r\n\r\n  const handleSave = async () => {\r\n    let res;\r\n    let tenCvObject;\r\n    try {\r\n\r\n      tenCvObject = await detailTen(chucVu);\r\n      console.log(\"chuc vu\", tenCvObject);\r\n\r\n      res = await postUpdateTaiKhoan(\r\n        Data.idTaiKhoan,\r\n        Data.maTaiKhoan,\r\n        tenCvObject,\r\n        ho,\r\n        ten,\r\n        sdt,\r\n        email,\r\n        matKhau,\r\n        soCanCuoc,\r\n        trangThai\r\n      );\r\n      console.log(\"Check res: \", res);\r\n    } catch (error) {\r\n      if (error.response && error.response.data) {\r\n        console.log(error.response.data);\r\n        setValidationErrors(error.response.data);\r\n      } else {\r\n        console.error(\"Error:\", error);\r\n      }\r\n      return;\r\n    }\r\n\r\n    console.log(\"Check res: \", res);\r\n    if (res && res.idTaiKhoan) {\r\n      const successMessage = {\r\n        type: 'success',\r\n        message: 'Cập nhập Nhân Viên Thành Công!',\r\n      };\r\n      localStorage.setItem('successMessage', JSON.stringify(successMessage));\r\n      navigate('/dashboard/staff');\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Cập Nhập tài khoản thất bại!',\r\n      });\r\n\r\n    }\r\n  };\r\n\r\n  const goback = () => {\r\n    window.history.back();\r\n  }\r\n\r\n  return (\r\n    <>\r\n\r\n      <div className=\"row row-order-management\">\r\n        <div style={{ textAlign: \"left\", margin: \"20px 0\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={goback}\r\n            startIcon={<ArrowBackIcon />}\r\n          >\r\n            Back\r\n          </Button>\r\n        </div>\r\n        <div\r\n          className=\"title\"\r\n          style={{ textAlign: \"center\", margin: \"20px 0\" }}\r\n        >\r\n          <h4>Cập Nhập Tài Khoản</h4>\r\n          <h5>Mã tài khoản: {Data.maTaiKhoan}</h5>\r\n        </div>\r\n\r\n        <Box\r\n          component=\"form\"\r\n          sx={{\r\n            \"& .MuiTextField-root\": { m: 1, width: \"120\" },\r\n          }}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          alignItems={\"center\"}\r\n        >\r\n          <FormControl fullWidth margin=\"dense\">\r\n            <InputLabel>Chức Vụ</InputLabel>\r\n            <Select\r\n              value={chucVu}\r\n              onChange={(event) => setChucVu(event.target.value)}\r\n            >\r\n              {myChucVu\r\n                .filter((item) => item.idCv === 1 || item.idCv === 8) // Lọc theo idCv\r\n                .map((item, index) => (\r\n                  <MenuItem\r\n                    key={index}\r\n                    value={item.tenCv}\r\n                  >\r\n                    {item.tenCv}\r\n                  </MenuItem>\r\n                ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n           error={!!validationErrors.ho}\r\n           helperText={validationErrors.ho}\r\n            fullWidth\r\n            label=\"Họ\"\r\n            id=\"ho\"\r\n            value={ho}\r\n            onChange={(event) => setHo(event.target.value)}\r\n          />\r\n          <TextField\r\n           error={!!validationErrors.ten}\r\n           helperText={validationErrors.ten}\r\n            fullWidth\r\n            label=\"Tên\"\r\n            id=\"ten\"\r\n            value={ten}\r\n            onChange={(event) => setTen(event.target.value)}\r\n          />\r\n          <TextField\r\n           error={!!validationErrors.email}\r\n           helperText={validationErrors.email}\r\n            fullWidth\r\n            label=\"Email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          <TextField\r\n           error={!!validationErrors.sdt}\r\n           helperText={validationErrors.sdt}\r\n            fullWidth\r\n            label=\"Số Điện Thoại\"\r\n            id=\"sdt\"\r\n            value={sdt}\r\n            onChange={(event) => setSdt(event.target.value)}\r\n          />\r\n          <TextField\r\n           error={!!validationErrors.matKhau}\r\n           helperText={validationErrors.matKhau}\r\n            fullWidth\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            id=\"matKhau\"\r\n            label=\"Mật Khẩu\"\r\n            value={matKhau}\r\n            onChange={(event) => setMatKhau(event.target.value)}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={() => setShowPassword(!showPassword)} // Khi nhấn vào nút, đảo ngược trạng thái\r\n                    onMouseDown={(event) => event.preventDefault()}\r\n                  >\r\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <TextField\r\n           error={!!validationErrors.soCanCuoc}\r\n           helperText={validationErrors.soCanCuoc}\r\n            fullWidth\r\n            id=\"soCanCuoc\"\r\n            label=\"Số Căn Cước\"\r\n            value={soCanCuoc}\r\n            onChange={(event) => setSoCanCuoc(event.target.value)}\r\n          />\r\n          <FormControl style={{ marginLeft: \"10px\" }}>\r\n            <FormLabel id=\"demo-radio-buttons-group-label\">\r\n              Trạng thái\r\n            </FormLabel>\r\n            <RadioGroup\r\n              row\r\n              aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n              name=\"row-radio-buttons-group\"\r\n              value={trangThai}\r\n              onChange={(event) => setTrangThai(event.target.value)}\r\n            >\r\n              <FormControlLabel\r\n                value=\"0\"\r\n                control={<Radio />}\r\n                label=\"Đang Hoạt Động\"\r\n              />\r\n              <FormControlLabel\r\n                value=\"10\"\r\n                control={<Radio />}\r\n                label=\"Dừng Hoạt Động\"\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Box>\r\n\r\n        <div style={{ textAlign: \"center\", margin: \"20px 0\" }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => handleSave()}\r\n          >\r\n            Cập Nhập Tài Khoản Nhân Viên\r\n          </Button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n};\r\nexport default UpdateTkNV;\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Staff\\Modal-User-Staff.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Staff\\Modal-Add-Staff.js",["977","978","979"],[],"import React, { useEffect, useState } from 'react';\r\nimport QrReader from 'react-qr-scanner';\r\nimport QrCodeScannerIcon from '@mui/icons-material/QrCodeScanner';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport { Box, Button, TextField, FormControl, InputLabel, Select, MenuItem, Snackbar, Alert } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { chucVu } from '../../service/chucVuService';\r\nimport { postAddTaiKhoan } from '../../service/taiKhoanNhanVienService';\r\n\r\n\r\nconst AddTKNV = () => {\r\n  const [maTaiKhoan, setMaTaiKhoan] = useState(null);\r\n  const [ho, setHo] = useState('');\r\n  const [ten, setTen] = useState('');\r\n  const [chucVuId, setChucVuId] = useState('');\r\n  const [sdt, setSdt] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [soCanCuoc, setSoCanCuoc] = useState('');\r\n  const [matKhau, setMatKhau] = useState('');\r\n  const [trangThai, setTrangThai] = useState(0);\r\n  const [alertContent, setAlertContent] = useState(null);\r\n  const [scanning, setScanning] = useState(false);\r\n  const [result, setResult] = useState('No result');\r\n  const [validation, setValidation] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  let res;\r\n\r\n\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      res = await postAddTaiKhoan(\r\n        maTaiKhoan,\r\n        chucVuId,\r\n        ho,\r\n        ten,\r\n        sdt,\r\n        email,\r\n        soCanCuoc,\r\n        matKhau,\r\n        trangThai);\r\n    } catch (error) {\r\n      if (error.response && error.response.data) {\r\n        console.log(error.response.data);\r\n        setValidation(error.response.data);\r\n      }\r\n    }\r\n\r\n    if (res && res.idTaiKhoan) {\r\n      const successMessage = {\r\n        type: 'success',\r\n        message: 'Thêm Nhân Viên Thành Công!',\r\n      };\r\n      localStorage.setItem('successMessage', JSON.stringify(successMessage));\r\n      navigate('/dashboard/staff');\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Thêm tài khoản thất bại!',\r\n      });\r\n    }\r\n  };\r\n\r\n  const [myChucVu, setMyChucVu] = useState([]);\r\n\r\n  const getAllChucVu = async () => {\r\n    const rs = await chucVu(0);\r\n    setMyChucVu(rs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllChucVu();\r\n  }, []);\r\n\r\n  const handleScan = (data) => {\r\n    if (data) {\r\n      setResult(data);\r\n      try {\r\n        const qrData = data.text;\r\n        const dataParts = qrData.split('|');\r\n        const cleanedData = dataParts.map((part) => part.replace(/\\|/g, ''));\r\n        if (cleanedData.length >= 2) {\r\n          const hoTenParts = cleanedData[2].split(' ');\r\n          const ho = hoTenParts[0] || '';\r\n          const ten = hoTenParts.slice(1).join(' ') || '';\r\n          setHo(ho);\r\n          setTen(ten);\r\n          setSoCanCuoc(cleanedData[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error processing QR Code data:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n  };\r\n\r\n  const handleStartScan = () => {\r\n    setScanning(true);\r\n  };\r\n\r\n  const handleStopScan = () => {\r\n    setScanning(false);\r\n  };\r\n\r\n  const goback = () => {\r\n    window.history.back();\r\n  }\r\n\r\n  return (\r\n    <div className=\"row row-order-management\">\r\n      <div style={{ textAlign: \"left\", margin: \"20px 0\" }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={goback}\r\n          startIcon={<ArrowBackIcon />}\r\n        >\r\n          Back\r\n        </Button>\r\n      </div>\r\n      <div\r\n        className=\"title\"\r\n        style={{ textAlign: \"center\", margin: \"20px 0\" }}\r\n      >\r\n        <h4>Thêm Tài Khoản</h4>\r\n      </div>\r\n\r\n      <div>\r\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n          {scanning ? (\r\n            <>\r\n              <QrReader delay={100} style={{ height: 240, width: 320 }} onError={handleError} onScan={handleScan} />\r\n              <Button size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleStopScan} style={{ marginTop: '10px' }}>\r\n                Stop Scanning\r\n              </Button>\r\n              <p>Scanned Tên: {ten}</p>\r\n              <p>Scanned Số Căn Cước: {soCanCuoc}</p>\r\n            </>\r\n          ) : (\r\n            <Button size=\"medium\" variant=\"contained\" color=\"primary\" onClick={handleStartScan} style={{ marginTop: '10px' }}>\r\n              <QrCodeScannerIcon />\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n        }}\r\n        noValidate\r\n        autoComplete=\"off\"\r\n      >\r\n        <FormControl fullWidth margin=\"dense\">\r\n          <InputLabel>Chức Vụ</InputLabel>\r\n          <Select value={chucVuId} onChange={(event) => setChucVuId(event.target.value)}>\r\n            {myChucVu\r\n              .filter((item) => item.idCv === 1 || item.idCv === 8)\r\n              .map((item, index) => (\r\n                <MenuItem key={index} value={item}>\r\n                  {item.tenCv}\r\n                </MenuItem>\r\n              ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <TextField error={!!validation.ho} helperText={validation.ho} fullWidth margin=\"dense\" label=\"Họ\" value={ho} onChange={(event) => setHo(event.target.value)} />\r\n        <TextField error={!!validation.ten} helperText={validation.ten} fullWidth margin=\"dense\" label=\"Tên\" value={ten} onChange={(event) => setTen(event.target.value)} />\r\n        <TextField error={!!validation.matKhau} helperText={validation.matKhau} fullWidth margin=\"dense\" label=\"Mật Khẩu\" value={matKhau} onChange={(event) => setMatKhau(event.target.value)} />\r\n        <TextField error={!!validation.email} helperText={validation.email} fullWidth margin=\"dense\" label=\"Email\" value={email} onChange={(event) => setEmail(event.target.value)} />\r\n        <TextField error={!!validation.sdt} helperText={validation.sdt} fullWidth margin=\"dense\" label=\"Số Điện Thoại\" value={sdt} onChange={(event) => setSdt(event.target.value)} />\r\n        <TextField error={!!validation.soCanCuoc} helperText={validation.soCanCuoc} fullWidth margin=\"dense\" label=\"Số Căn Cước\" value={soCanCuoc} onChange={(event) => setSoCanCuoc(event.target.value)} />\r\n        <Button size=\"large\" variant=\"contained\" color=\"success\" onClick={handleSave} style={{ marginTop: '20px' }}>\r\n          Thêm Tài Khoản Nhân Viên\r\n        </Button>\r\n      </Box>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTKNV;\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\ClientsPage.js",["980","981","982"],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\AddClients.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\SanPham\\SanPhamMain.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\SanPham\\ModelUpdate.js",["983","984"],[],"import { Helmet } from 'react-helmet-async';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { pink } from '@mui/material/colors';\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport { CardGroup } from 'react-bootstrap';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport {\r\n  Card,\r\n  Stack,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Grid,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Snackbar,\r\n  Alert,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Paper,\r\n  TableHead,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Box,\r\n  IconButton,\r\n  FormLabel,\r\n  Backdrop,\r\n  Chip,\r\n} from '@mui/material';\r\nimport Iconify from '../../components/iconify';\r\nimport { putUpdateSanPham, detailSP } from '../../service/SanPhamService';\r\nimport { findCtspById, addColorAndSize, updateNumber, detailCTSP } from '../../service/ChiTietSPService';\r\nimport { deleteAnh, fetchAnh } from '../../service/AnhService';\r\nimport { postAddCloud, deleteCloud } from '../../service/CloudinaryService';\r\n\r\nimport { fetchXX, detailXX } from '../../service/XuatXuService';\r\nimport { fetchCL, detailCL } from '../../service/ChatLieuService';\r\nimport { fetchCoAo, detailCoAo } from '../../service/LoaiCoAoService';\r\nimport { fetchLSP, detailLSP } from '../../service/LoaiSPService';\r\nimport { fetchTayAo, detailTayAo } from '../../service/OngTayAoService';\r\nimport { fetchMS } from '../../service/MauSacService';\r\nimport { fetchSize } from '../../service/SizeService';\r\nimport '../../scss/UpdateSp.scss';\r\n\r\nfunction renderTrangThai(trangThai) {\r\n  let badgeVariant;\r\n  let statusText;\r\n\r\n  switch (trangThai) {\r\n    case 0:\r\n      badgeVariant = 'success';\r\n      statusText = 'Còn bán';\r\n      break;\r\n    case 1:\r\n      badgeVariant = 'warning';\r\n      statusText = 'Đang cập nhật';\r\n      break;\r\n    case 10:\r\n      badgeVariant = 'error';\r\n      statusText = 'Ngừng kinh doanh';\r\n      break;\r\n    default:\r\n      badgeVariant = 'default';\r\n      statusText = 'Unknown status';\r\n      break;\r\n  }\r\n\r\n  return <Chip label={statusText} color={badgeVariant} />;\r\n}\r\n\r\nfunction formatCurrency(price) {\r\n  if (!price) return '0';\r\n\r\n  const formatter = new Intl.NumberFormat('vi-VN', {\r\n    style: 'currency',\r\n    currency: 'VND',\r\n    minimumFractionDigits: 0,\r\n  });\r\n\r\n  return formatter.format(price);\r\n}\r\n\r\nexport default function UpdateSanPham() {\r\n  const [maSp, setMaSp] = useState('');\r\n  const [tenSp, setTenSp] = useState('');\r\n  const [moTa, setMoTa] = useState('');\r\n  const [trangThai, setTrangThai] = useState('0');\r\n\r\n  const [chatLieu, setChatLieu] = useState('');\r\n  const [loaiSP, setLoaiSP] = useState('');\r\n  const [xuatXu, setXuatXu] = useState('');\r\n  const [tayAo, setTayAo] = useState('');\r\n  const [coAo, setCoAo] = useState('');\r\n\r\n  const [mauSac, setMauSac] = useState('');\r\n  const [size, setSize] = useState('');\r\n\r\n  const [idCtsp, setIdCtsp] = useState('');\r\n  const [giaNhap, setGiaNhap] = useState('');\r\n  const [giaBan, setGiaBan] = useState('');\r\n  const [soLuongTon, setSoLuongTon] = useState('');\r\n  const [statusAtt, setStatusAtt] = useState('');\r\n\r\n  const [listCL, setListCL] = useState([]);\r\n  const [listLSP, setListLSP] = useState([]);\r\n  const [listXX, setListXX] = useState([]);\r\n  const [listTayAo, setListTayAo] = useState([]);\r\n  const [listCoAo, setListCoAo] = useState([]);\r\n  const [listCTSP, setListCTSP] = useState([]);\r\n  const [listImg, setListImg] = useState([]);\r\n  const [listMS, setListMS] = useState([]);\r\n  const [listSize, setListSize] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllList();\r\n  }, []);\r\n\r\n  const getAllList = async () => {\r\n    const resCL = await fetchCL();\r\n    setListCL(resCL);\r\n\r\n    const resLSP = await fetchLSP();\r\n    setListLSP(resLSP);\r\n\r\n    const resXX = await fetchXX();\r\n    setListXX(resXX);\r\n\r\n    const resTayAo = await fetchTayAo();\r\n    setListTayAo(resTayAo);\r\n\r\n    const resCoAo = await fetchCoAo();\r\n    setListCoAo(resCoAo);\r\n\r\n    const resMS = await fetchMS();\r\n    setListMS(resMS);\r\n\r\n    const resSize = await fetchSize();\r\n    setListSize(resSize);\r\n  };\r\n\r\n  // Detail sp\r\n  const param = useParams();\r\n  const idSpHttp = param.id;\r\n\r\n  const getListData = useCallback(async () => {\r\n    try {\r\n      const res = await detailSP(idSpHttp);\r\n      setMaSp(res.maSp);\r\n      setTenSp(res.tenSp);\r\n      setMoTa(res.moTa);\r\n      setTrangThai(res.trangThai);\r\n      setChatLieu(res.idCl.idCl);\r\n      setLoaiSP(res.idLsp.idLoaisp);\r\n      setXuatXu(res.idXx.idXx);\r\n      setTayAo(res.idTayAo.idTayAo);\r\n      setCoAo(res.idCoAo.idCoAo);\r\n\r\n      const resCTSP = await findCtspById(idSpHttp);\r\n      setListCTSP(resCTSP);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n  }, [idSpHttp]);\r\n  useEffect(() => {\r\n    getListData();\r\n  }, [getListData]);\r\n\r\n  // dong mo confirm\r\n  const [openUpdate, setOpenUpdate] = useState(false);\r\n\r\n  const handleClickUpdate = () => {\r\n    setOpenUpdate(true);\r\n  };\r\n\r\n  const handleCloseUpdate = () => {\r\n    setOpenUpdate(false);\r\n  };\r\n\r\n  const [openColorAndSize, setOpenColorAndSize] = useState(false);\r\n\r\n  const handleClickColorAndSize = () => {\r\n    setOpenColorAndSize(true);\r\n  };\r\n\r\n  const handleCloseColorAndSize = () => {\r\n    setOpenColorAndSize(false);\r\n  };\r\n\r\n  // edit attributes\r\n  const [openEditAtt, setOpenEditAtt] = useState(false);\r\n\r\n  const getCtspNumber = async (id) => {\r\n    try {\r\n      const res = await detailCTSP(id);\r\n      setIdCtsp(res.idCtsp);\r\n      if (res.giaNhap == null || res.giaBan == null || res.soLuongTon == null) {\r\n        setGiaNhap('');\r\n        setGiaBan('');\r\n        setSoLuongTon('');\r\n      } else {\r\n        setGiaNhap(res.giaNhap);\r\n        setGiaBan(res.giaBan);\r\n        setSoLuongTon(res.soLuongTon);\r\n      }\r\n\r\n      setStatusAtt(res.trangThai);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n  };\r\n\r\n  const handleClickEditAtt = (id) => {\r\n    // setIdCtsp(id);\r\n    getCtspNumber(id);\r\n    setOpenEditAtt(true);\r\n    setOpenColorAndSize(false);\r\n    setOpenDulicateUpdate(false);\r\n  };\r\n\r\n  const handleClostEditAtt = () => {\r\n    getListData();\r\n    setOpenEditAtt(false);\r\n  };\r\n\r\n  // alert\r\n\r\n  const [openAlert, setOpenAlert] = useState(false);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n  const [alertSeverity, setAlertSeverity] = useState('success');\r\n\r\n  const handleAlertClick = (message, severity) => {\r\n    setAlertMessage(message);\r\n    setAlertSeverity(severity);\r\n    setOpenAlert(true);\r\n  };\r\n\r\n  const handleAlertClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpenAlert(false);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSave = async () => {\r\n    // get object all\\\r\n    const getObjChatLieu = await detailCL(chatLieu);\r\n    const getObjLoaiSP = await detailLSP(loaiSP);\r\n    const getObjXuatXu = await detailXX(xuatXu);\r\n    const getObjTayAo = await detailTayAo(tayAo);\r\n    const getObjCoAo = await detailCoAo(coAo);\r\n\r\n    if (\r\n      setMaSp('') &&\r\n      setTenSp('') &&\r\n      setChatLieu('') &&\r\n      setLoaiSP('') &&\r\n      setXuatXu('') &&\r\n      setTayAo('') &&\r\n      setCoAo('') &&\r\n      setMoTa('') &&\r\n      setTrangThai('')\r\n    ) {\r\n      handleAlertClick('Cập nhật thất bại!', 'danger');\r\n    } else {\r\n      const res = await putUpdateSanPham(\r\n        idSpHttp,\r\n        maSp,\r\n        tenSp,\r\n        getObjChatLieu,\r\n        getObjLoaiSP,\r\n        getObjXuatXu,\r\n        getObjCoAo,\r\n        getObjTayAo,\r\n        moTa,\r\n        trangThai\r\n      );\r\n\r\n      console.log('Check res: ', res);\r\n      if (res && res.idSp) {\r\n        handleAlertClick('Cập nhật thành công!', 'success');\r\n        handleCloseUpdate();\r\n        navigate(`/dashboard/products`);\r\n      } else {\r\n        handleAlertClick('Cập nhật thất bại!', 'danger');\r\n        handleCloseUpdate();\r\n      }\r\n    }\r\n  };\r\n\r\n  // image\r\n  const getAnhData = useCallback(async () => {\r\n    try {\r\n      const res = await fetchAnh(idSpHttp);\r\n      setListImg(res);\r\n    } catch (error) {\r\n      console.log('error: ', error);\r\n    }\r\n  }, [idSpHttp]);\r\n  useEffect(() => {\r\n    getAnhData();\r\n  }, [getAnhData]);\r\n\r\n  const [selectedImages, setSelectedImages] = useState([]);\r\n\r\n  const uploadImage = useCallback(async () => {\r\n    if (selectedImages.length !== 0) {\r\n      const formData = new FormData();\r\n      selectedImages.forEach((image) => {\r\n        formData.append('images', image);\r\n        formData.append('idSp', idSpHttp);\r\n      });\r\n      const res = await postAddCloud(formData);\r\n      getAnhData();\r\n      console.log('Check res: ', res);\r\n      setSelectedImages([]);\r\n      const input = document.querySelector('input[type=\"file\"]');\r\n      if (input) {\r\n        input.value = '';\r\n      }\r\n    }\r\n  }, [selectedImages, getAnhData, idSpHttp]);\r\n\r\n  useEffect(() => {\r\n    if (selectedImages.length > 0) {\r\n      uploadImage();\r\n    }\r\n  }, [selectedImages, uploadImage]);\r\n\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    const imageFiles = acceptedFiles.filter((file) => file.type.startsWith('image/'));\r\n    setSelectedImages(imageFiles);\r\n    handleOpenBD();\r\n  }, []);\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: 'image/*',\r\n    multiple: true,\r\n  });\r\n\r\n  const handlDeleteImg = async (idImg, url) => {\r\n    const parts = url.split('/');\r\n    const publicId = parts[parts.length - 2].concat('/', parts[parts.length - 1].split('.')[0]);\r\n\r\n    await deleteCloud(publicId);\r\n    await deleteAnh(idImg);\r\n    getAnhData();\r\n  };\r\n\r\n  // add color and size\r\n  const hanldeAddColorAndSize = async () => {\r\n    const res = await addColorAndSize(idSpHttp, mauSac, size);\r\n    console.log('Check res: ', res);\r\n    if (res && res.idCtsp) {\r\n      if (res.trangThai === 1) {\r\n        handleAlertClick('Thêm thành công!', 'success');\r\n        handleClickEditAtt(res.idCtsp);\r\n        handleCloseColorAndSize();\r\n      } else {\r\n        handleOpenDulicateUpdate();\r\n        setIdCtsp(res.idCtsp);\r\n      }\r\n    } else {\r\n      handleAlertClick('Cập nhật thất bại!', 'danger');\r\n      handleCloseColorAndSize();\r\n    }\r\n  };\r\n\r\n  // update number\r\n\r\n  const handlUpdateNumber = async () => {\r\n    const res = await updateNumber(idCtsp, giaNhap, giaBan, soLuongTon, statusAtt);\r\n    console.log('Check res: ', res);\r\n    if (res && res.idCtsp) {\r\n      handleAlertClick('Cập nhật thành công!', 'success');\r\n      handleClostEditAtt();\r\n    } else {\r\n      handleAlertClick('Cập nhật thất bại!', 'danger');\r\n      handleClostEditAtt();\r\n    }\r\n  };\r\n\r\n  // comfirm update\r\n  const [openDulicateUpdate, setOpenDulicateUpdate] = useState(false);\r\n\r\n  const handleOpenDulicateUpdate = () => {\r\n    setOpenDulicateUpdate(true);\r\n  };\r\n\r\n  const handleCloseDulicateUpdate = () => {\r\n    setOpenDulicateUpdate(false);\r\n  };\r\n\r\n  // backdrop\r\n  const [openBD, setOpenBD] = useState(false);\r\n  const handleCloseBD = () => {\r\n    setOpenBD(false);\r\n  };\r\n  const handleOpenBD = () => {\r\n    setOpenBD(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleCloseBD();\r\n  }, [listImg]);\r\n\r\n  // set size\r\n  const [isSizeSelected, setIsSizeSelected] = useState(false);\r\n\r\n  const handleShowSize = (item) => {\r\n    if (isSizeSelected && size === item) {\r\n      setSize('');\r\n      setIsSizeSelected(false);\r\n    } else {\r\n      setSize(item);\r\n      setIsSizeSelected(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> User | Minimal UI </title>\r\n      </Helmet>\r\n\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Cập nhật sản phẩm\r\n          </Typography>\r\n        </Stack>\r\n\r\n        <Card sx={{ padding: '25px' }}>\r\n          <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n            <Grid item xs={12}>\r\n              <TextField id=\"fullWidth\" label=\"Mã sản phẩm\" fullWidth disabled value={maSp} />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                id=\"fullWidth\"\r\n                label=\"Tên sản phẩm\"\r\n                fullWidth\r\n                onChange={(event) => setTenSp(event.target.value)}\r\n                value={tenSp}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {listCL.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Chất liệu</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Chất liệu\"\r\n                    value={chatLieu}\r\n                    onChange={(event) => setChatLieu(event.target.value)}\r\n                  >\r\n                    {listCL.map((item, index) => (\r\n                      <MenuItem value={item.idCl} key={index}>\r\n                        {item.tenCl}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              {listLSP.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Loại sản phẩm</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Loại sản phẩm\"\r\n                    value={loaiSP}\r\n                    onChange={(event) => setLoaiSP(event.target.value)}\r\n                  >\r\n                    {listLSP.map((option, index) => (\r\n                      <MenuItem key={index} value={option.idLoaisp}>\r\n                        {option.tenLsp}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {listXX.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Xuất xứ</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Xuất xứ\"\r\n                    value={xuatXu}\r\n                    onChange={(event) => setXuatXu(event.target.value)}\r\n                  >\r\n                    {listXX.map((item, index) => (\r\n                      <MenuItem value={item.idXx} key={index}>\r\n                        {item.tenNuoc}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {listCoAo.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Loại cổ áo</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Loại cổ áo\"\r\n                    value={coAo}\r\n                    onChange={(event) => setCoAo(event.target.value)}\r\n                  >\r\n                    {listCoAo.map((item, index) => (\r\n                      <MenuItem value={item.idCoAo} key={index}>\r\n                        {item.loaiCoAo}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {listTayAo.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel id=\"demo-simple-select-label\">Ống tay áo</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    label=\"Ống tay áo\"\r\n                    value={tayAo}\r\n                    onChange={(event) => setTayAo(event.target.value)}\r\n                  >\r\n                    {listTayAo.map((option, index) => (\r\n                      <MenuItem key={index} value={option.idTayAo}>\r\n                        {option.loaiTayAo}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n              <div>\r\n                <RadioGroup\r\n                  row\r\n                  aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                  name=\"row-radio-buttons-group\"\r\n                  sx={{ marginTop: '15px' }}\r\n                >\r\n                  <FormControlLabel\r\n                    value=\"0\"\r\n                    control={<Radio />}\r\n                    label=\"Còn bán\"\r\n                    checked={Number(trangThai) === 0}\r\n                    onChange={(event) => setTrangThai(event.target.value)}\r\n                  />\r\n                  <FormControlLabel\r\n                    value=\"10\"\r\n                    control={<Radio />}\r\n                    label=\"Ngừng kinh doanh\"\r\n                    checked={Number(trangThai) === 10}\r\n                    onChange={(event) => setTrangThai(event.target.value)}\r\n                  />\r\n                </RadioGroup>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Mô tả\"\r\n                multiline\r\n                rows={4}\r\n                fullWidth\r\n                onChange={(event) => setMoTa(event.target.value)}\r\n                value={moTa}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              fullWidth\r\n              sx={{ marginTop: '25px' }}\r\n              onClick={() => handleClickUpdate()}\r\n            >\r\n              Cập nhật\r\n            </Button>\r\n          </div>\r\n        </Card>\r\n\r\n        <Card sx={{ padding: '25px', marginTop: '15px' }}>\r\n          <Grid container rowSpacing={2} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n            <Grid item xs={6}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Cập nhật thuộc tính\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6} style={{ textAlign: 'right' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                startIcon={<Iconify icon=\"eva:plus-fill\" />}\r\n                onClick={() => handleClickColorAndSize()}\r\n              >\r\n                Thêm thuộc tính\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TableContainer component={Paper}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Màu sắc</TableCell>\r\n                      <TableCell>Size</TableCell>\r\n                      <TableCell>Giá nhập</TableCell>\r\n                      <TableCell>Giá bán</TableCell>\r\n                      <TableCell>Số lượng tồn</TableCell>\r\n                      <TableCell>Trạng thái</TableCell>\r\n                      <TableCell> </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {listCTSP.map((row) => (\r\n                      <TableRow key={row.idCtsp} sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                          {row.idMs.tenMs}\r\n                        </TableCell>\r\n                        <TableCell>{row.idSize.tenSize}</TableCell>\r\n                        <TableCell>{formatCurrency(row.giaNhap)}</TableCell>\r\n                        <TableCell>{formatCurrency(row.giaBan)}</TableCell>\r\n                        <TableCell>{row.soLuongTon}</TableCell>\r\n                        <TableCell>{renderTrangThai(row.trangThai)}</TableCell>\r\n                        <TableCell>\r\n                          <IconButton aria-label=\"add an alarm\" onClick={() => handleClickEditAtt(row.idCtsp)}>\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n        <Card sx={{ padding: '25px', marginTop: '15px' }}>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ paddingBottom: '20px' }}>\r\n            Cập nhật hình ảnh\r\n          </Typography>\r\n\r\n          <div className=\"image-container\">\r\n            <CardGroup>\r\n              <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 3 }}>\r\n                {listImg &&\r\n                  listImg.length > 0 &&\r\n                  listImg.map((item, index) => (\r\n                    <Grid item xs={2.3} key={index}>\r\n                      <Card key={index} sx={{ width: 200, marginRight: 5, marginBottom: 5 }}>\r\n                        <CardActionArea>\r\n                          <Box position=\"relative\">\r\n                            <CardMedia component=\"img\" height=\"200\" image={item.url} alt=\"green iguana\" />\r\n                            <IconButton\r\n                              sx={{ position: 'absolute', top: 0, right: 0 }}\r\n                              size=\"small\"\r\n                              color=\"primary\"\r\n                              onClick={() => handlDeleteImg(item.idImage, item.url)}\r\n                            >\r\n                              <DeleteIcon sx={{ color: pink[500], fontSize: 40 }} />\r\n                            </IconButton>\r\n                          </Box>\r\n                        </CardActionArea>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))}\r\n\r\n                {listImg.length < 10 && (\r\n                  <Grid item xs={2.3}>\r\n                    <Card sx={{ width: 200, marginRight: 5, marginBottom: 5, padding: 2 }}>\r\n                      <div {...getRootProps()} className=\"dropzone\">\r\n                        <input {...getInputProps()} />\r\n                        <p>\r\n                          <AddPhotoAlternateIcon sx={{ fontSize: 40 }} /> Kéo hoặc thả ảnh vô đây, hoặc click để chọn\r\n                          ảnh\r\n                        </p>\r\n                      </div>\r\n                    </Card>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </CardGroup>\r\n          </div>\r\n        </Card>\r\n      </Container>\r\n      <Dialog\r\n        open={openUpdate}\r\n        onClose={handleCloseUpdate}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Xác nhận sửa?'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Bạn có chắc chắn muốn sửa sản phẩm này không?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleCloseUpdate()}>Canel</Button>\r\n          <Button onClick={() => handleSave()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={openColorAndSize}\r\n        onClose={handleCloseColorAndSize}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Thêm thuộc tính'}</DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"listMauSac\">\r\n            {listMS.length > 0 && (\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Màu sắc</InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  label=\"Màu sắc\"\r\n                  value={mauSac}\r\n                  onChange={(event) => setMauSac(event.target.value)}\r\n                >\r\n                  {listMS.map((item, index) => (\r\n                    <MenuItem value={item.idMs} key={index}>\r\n                      {item.tenMs}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            )}\r\n          </div>\r\n          <div className=\"listSize\">\r\n            <Box sx={{ display: 'flex', alignItems: 'center', pb: 1 }}>\r\n              <div>\r\n                Size:{' '}\r\n                {listSize.map((item, itemIndex) => (\r\n                  <Button\r\n                    style={{\r\n                      marginRight: '4px',\r\n                      marginBottom: '4px',\r\n                    }}\r\n                    key={`size-button-${itemIndex}`}\r\n                    onClick={() => handleShowSize(item.idSize)}\r\n                    variant={size === item.idSize ? 'contained' : 'outlined'}\r\n                    value={size}\r\n                    size=\"small\"\r\n                  >\r\n                    {item.tenSize}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n            </Box>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleCloseColorAndSize()}>Canel</Button>\r\n          <Button onClick={() => hanldeAddColorAndSize()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={openEditAtt}\r\n        onClose={handleClostEditAtt}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Cập nhật số lượng và trạng thái'}</DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"editAtt\">\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label=\"Giá nhập\"\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              value={giaNhap}\r\n              onChange={(event) => setGiaNhap(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"editAtt\">\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label=\"Giá bán\"\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              value={giaBan}\r\n              onChange={(event) => setGiaBan(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"editAtt\">\r\n            <TextField\r\n              id=\"outlined-number\"\r\n              label=\"Số lượng tồn\"\r\n              type=\"number\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              value={soLuongTon}\r\n              onChange={(event) => setSoLuongTon(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"editAtt\">\r\n            <FormControl>\r\n              <FormLabel id=\"demo-row-radio-buttons-group-label\">Trạng thái</FormLabel>\r\n              <RadioGroup\r\n                row\r\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                name=\"row-radio-buttons-group\"\r\n                value={statusAtt}\r\n                onChange={(event) => setStatusAtt(event.target.value)}\r\n              >\r\n                <FormControlLabel value=\"0\" control={<Radio />} label=\"Còn bán\" />\r\n                <FormControlLabel value=\"10\" control={<Radio />} label=\"Ngừng kinh doanh\" />\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleClostEditAtt()}>Canel</Button>\r\n          <Button onClick={() => handlUpdateNumber()} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Dialog\r\n        open={openDulicateUpdate}\r\n        onClose={handleCloseDulicateUpdate}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{'Thuộc tính đã tồn tại!'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Bạn có muốn chuyển đến trang cập nhật thuộc tính?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => handleCloseDulicateUpdate()}>Canel</Button>\r\n          <Button onClick={() => handleClickEditAtt(idCtsp)} autoFocus>\r\n            Ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Stack spacing={2} sx={{ width: '100%' }}>\r\n        <Snackbar\r\n          open={openAlert}\r\n          autoHideDuration={6000}\r\n          onClose={handleAlertClose}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleAlertClose} severity={alertSeverity} sx={{ width: '100%' }}>\r\n            {alertMessage}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Stack>\r\n\r\n      <Backdrop\r\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n        open={openBD}\r\n        onClick={() => handleCloseBD()}\r\n      >\r\n        <CircularProgress color=\"inherit\" />\r\n      </Backdrop>\r\n    </>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\taiKhoanKhachHang\\UpdateClients.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\SanPham\\ModelAdd.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\diaChi\\AllAddress.js",["985"],["986"],"import { Helmet } from 'react-helmet-async';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport Stack from '@mui/material/Stack';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  DataGrid,\r\n  GridToolbarColumnsButton,\r\n  GridToolbarContainer,\r\n  GridToolbarDensitySelector,\r\n  GridToolbarExport,\r\n  GridToolbarFilterButton,\r\n} from '@mui/x-data-grid';\r\nimport { Container, FormControl, IconButton, InputLabel, MenuItem, Select, TextField, Typography } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport { getPhuongXa, getQuanHuyen, getTinhThanhPho } from '../../service/apiDiaChi';\r\nimport { fetchAllDiaChi } from '../../service/diaChiSevice';\r\nimport AlertSnackbar from '../../layouts/dashboard/AlertSnackbar';\r\n\r\nconst AllAddress = () => {\r\n  const [listData, setListData] = useState([]);\r\n\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const [selectedStatus, setSelectedStatus] = useState('Tất cả');\r\n  const [selectedLoaiDiaChi, setSelectedLoaiDiaChi] = useState('Tất cả');\r\n  const [originalListData, setOriginalListData] = useState([]);\r\n  const navigate = useNavigate();\r\n  const isMounted = useRef(true);\r\n  const [listTP, setListTP] = useState([]);\r\n  const [listQH, setListQH] = useState([]);\r\n  const [listPX, setListPX] = useState([]);\r\n\r\n  const getListData = async (page, query) => {\r\n    try {\r\n      const res = await fetchAllDiaChi(page, query);\r\n      if (isMounted.current) {\r\n        setListData(res);\r\n\r\n        setOriginalListData(res);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    getListData(0);\r\n    getListTP();\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (listData.length > 0) {\r\n      listData.forEach((item) => {\r\n        fetchQuanHuyenAndPhuongXa(item.tinhThanh, item.quanHuyen);\r\n      });\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [listData]);\r\n  const getListTP = async () => {\r\n    const resTP = await getTinhThanhPho();\r\n\r\n    setListTP(resTP?.data.results);\r\n  };\r\n\r\n  const getNameByIdTP = (id) => {\r\n    const province = listTP.find((item) => item.province_id === id);\r\n    return province ? province.province_name : null;\r\n  };\r\n  const getNameByIdQH = (id) => {\r\n    const province = listQH.find((item) => item.district_id === id);\r\n    return province ? province.district_name : null;\r\n  };\r\n  const getNameByIdPX = (id) => {\r\n    const province = listPX.find((item) => item.ward_id === id);\r\n    return province ? province.ward_name : null;\r\n  };\r\n\r\n  const fetchQuanHuyenAndPhuongXa = async (tinhThanhID, quanHuyenID) => {\r\n    const existingQH = listQH.find((item) => item.district_id === quanHuyenID);\r\n    const existingPX = listPX.find((item) => item.ward_id === quanHuyenID);\r\n\r\n    if (existingQH && existingPX) {\r\n      // Data already exists, no need to fetch again\r\n      return;\r\n    }\r\n\r\n    const quanHuyenData = await getQuanHuyen(tinhThanhID);\r\n    const phuongXaData = await getPhuongXa(quanHuyenID);\r\n\r\n    if (quanHuyenData.status === 200 && phuongXaData.status === 200) {\r\n      setListQH((prevListQH) => [...prevListQH, ...quanHuyenData.data.results]);\r\n      setListPX((prevListPX) => [...prevListPX, ...phuongXaData.data.results]);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'index', headerName: '##', width: 30 },\r\n    { field: 'maTaiKhoan', headerName: 'Mã Tài Khoản', width: 130 },\r\n    { field: 'tenNguoiNhan', headerName: 'Tên Người Nhận', width: 120 },\r\n    { field: 'sdtKh', headerName: 'Số Điện Thoại', width: 120 },\r\n    { field: 'diaChi', headerName: 'Địa Chỉ', width: 300 },\r\n    { field: 'diaChiCuThe', headerName: 'Địa Chỉ Cụ Thể', width: 210 },\r\n    {\r\n      field: 'loaiDiaChi',\r\n      headerName: 'Loại Địa Chỉ',\r\n      width: 100,\r\n      renderCell: (params) => {\r\n        const { value: loaiDiaChi } = params;\r\n        let badgeVariant;\r\n        let statusText;\r\n        switch (loaiDiaChi) {\r\n          case 1:\r\n            badgeVariant = 'primary';\r\n            statusText = 'Nơi Làm Việc';\r\n            break;\r\n          default:\r\n            badgeVariant = 'light';\r\n            statusText = 'Nhà Riêng';\r\n            break;\r\n        }\r\n\r\n        return (\r\n          <Badge bg={badgeVariant} text=\"dark\">\r\n            {statusText}\r\n          </Badge>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: 'trangThai',\r\n      headerName: 'Trạng Thái',\r\n      width: 120,\r\n      renderCell: (params) => {\r\n        const { value: trangThai } = params;\r\n        let badgeVariant;\r\n        let statusText;\r\n        switch (trangThai) {\r\n          case 1:\r\n            badgeVariant = 'primary';\r\n            statusText = 'Đã Xác Nhận';\r\n            break;\r\n          case 4:\r\n            badgeVariant = 'info';\r\n            statusText = 'Đã Ngưng hoạt động';\r\n            break;\r\n          case 10:\r\n            badgeVariant = 'danger';\r\n            statusText = 'Đã Bị Xóa';\r\n            break;\r\n          default:\r\n            badgeVariant = 'light';\r\n            statusText = 'Chưa Xác Nhận';\r\n            break;\r\n        }\r\n\r\n        return (\r\n          <Badge bg={badgeVariant} text=\"dark\">\r\n            {statusText}\r\n          </Badge>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  // Xử lý dữ liệu của bảng vào mảng rows\r\n  const rows = listData\r\n    .filter((item) => {\r\n      const valuesToSearch = [\r\n        item.taiKhoan.maTaiKhoan, // Search maTaiKhoan directly\r\n        item.tenNguoiNhan,\r\n        item.sdt,\r\n        item.tinhThanh,\r\n        item.quanHuyen,\r\n        item.phuongXa,\r\n        item.diaChiCuThe, // Convert trangThai to string for search\r\n      ];\r\n      return valuesToSearch.some((value) => String(value).toLowerCase().includes(searchKeyword.toLowerCase()));\r\n    })\r\n    .map((item, index) => ({\r\n      idTaiKhoan: item.taiKhoan.idTaiKhoan,\r\n      id: item.id,\r\n      index: index + 1,\r\n      maTaiKhoan: item.taiKhoan.maTaiKhoan,\r\n      tenNguoiNhan: item.tenNguoiNhan,\r\n      sdtKh: item.sdt,\r\n      diaChi: `${getNameByIdTP(item.tinhThanh)}, ${getNameByIdQH(item.quanHuyen)}, ${getNameByIdPX(item.phuongXa)}`,\r\n      diaChiCuThe: item.diaChiCuThe,\r\n      loaiDiaChi: item.loaiDiaChi,\r\n      trangThai: item.trangThai,\r\n    }));\r\n\r\n  const handlePageClick = (page) => {\r\n    getListData(page + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filteredData =\r\n      selectedStatus === 'Tất cả'\r\n        ? originalListData // Sử dụng danh sách dữ liệu gốc khi chọn \"All\"\r\n        : originalListData.filter((item) => item.trangThai === parseInt(selectedStatus, 10));\r\n\r\n    const filteredLoai =\r\n      selectedLoaiDiaChi === 'Tất cả'\r\n        ? originalListData // Sử dụng danh sách dữ liệu gốc khi chọn \"All\"\r\n        : originalListData.filter((item) => item.loaiDiaChi === parseInt(selectedLoaiDiaChi, 10));\r\n    const combinedFilteredData = filteredData.filter((item) => filteredLoai.includes(item));\r\n\r\n    setListData(combinedFilteredData);\r\n  }, [selectedStatus, selectedLoaiDiaChi, originalListData]);\r\n\r\n  const handlClickRow = (item) => {\r\n    // console.log(\"Check click: \", item);\r\n    navigate(`/dashboard/address/detail/${item.id}`);\r\n  };\r\n\r\n  function CustomToolbar() {\r\n    return (\r\n      <GridToolbarContainer>\r\n        <GridToolbarFilterButton />\r\n        <GridToolbarColumnsButton />\r\n        <GridToolbarDensitySelector />\r\n        <GridToolbarExport\r\n          csvOptions={{\r\n            fileName: 'address',\r\n            utf8WithBom: true,\r\n          }}\r\n        />\r\n\r\n        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n          <InputLabel id=\"status-select\">Trạng Thái:</InputLabel>\r\n          <Select\r\n            labelId=\"status-select\"\r\n            id=\"status-select\"\r\n            value={selectedStatus}\r\n            label=\"Trạng Thái\"\r\n            onChange={(e) => setSelectedStatus(e.target.value)}\r\n          >\r\n            <MenuItem value={'Tất cả'}>Tất Cả</MenuItem>\r\n            <MenuItem value={0}>Chưa Kích Hoạt</MenuItem>\r\n            <MenuItem value={1}>Đã Kích Hoạt</MenuItem>\r\n            <MenuItem value={4}>Ngưng Hoạt Động</MenuItem>\r\n            <MenuItem value={10}>Đã Bị Xóa</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\r\n          <InputLabel id=\"status-select\">Loại Địa Chỉ:</InputLabel>\r\n          <Select\r\n            labelId=\"status-select\"\r\n            id=\"status-select\"\r\n            value={selectedStatus}\r\n            label=\"Trạng Thái\"\r\n            onChange={(e) => setSelectedLoaiDiaChi(e.target.value)}\r\n          >\r\n            <MenuItem value={'Tất cả'}>Tất Cả</MenuItem>\r\n            <MenuItem value={0}>Nhà Riêng</MenuItem>\r\n            <MenuItem value={1}>Nơi Làm Việc</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </GridToolbarContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      <Helmet>\r\n        <title> Address || 5F Store </title>\r\n      </Helmet>\r\n      <Container>\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Thông Tin Tất Cả Địa Chỉ\r\n          </Typography>\r\n        </Stack>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          sx={{ ml: 1, flex: 1 }}\r\n          placeholder=\"Tìm Kiếm\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <IconButton type=\"button\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                <SearchIcon />\r\n              </IconButton>\r\n            ),\r\n          }}\r\n          onChange={(e) => setSearchKeyword(e.target.value)}\r\n        />\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          initialState={{\r\n            pagination: {\r\n              paginationModel: { page: 0, pageSize: 10 },\r\n            },\r\n          }}\r\n          slots={{ toolbar: CustomToolbar }}\r\n          pageSizeOptions={[5, 10, 15]}\r\n          onRowClick={(params) => handlClickRow(params.row)}\r\n        />\r\n      </Container>\r\n      <AlertSnackbar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllAddress;\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\diaChi\\UpdateAddress.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\diaChi\\AddressByClient.js",["987","988","989"],["990"],"import React, {useEffect, useState} from \"react\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\nimport {Helmet} from \"react-helmet-async\";\r\nimport Badge from \"react-bootstrap/Badge\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport {\r\n    DataGrid,\r\n    GridActionsCellItem,\r\n    GridToolbarColumnsButton,\r\n    GridToolbarContainer,\r\n    GridToolbarDensitySelector,\r\n    GridToolbarExport,\r\n    GridToolbarFilterButton,\r\n} from \"@mui/x-data-grid\";\r\nimport {\r\n    Button,\r\n    Container,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogTitle,\r\n    FormControl,\r\n    IconButton,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n// import {toast, ToastContainer} from \"react-toastify\";\r\nimport {deleteDiaChi, fetchDiaChiByTK} from \"../../service/diaChiSevice\";\r\nimport {getPhuongXa, getQuanHuyen, getTinhThanhPho} from \"../../service/apiDiaChi\";\r\nimport Iconify from \"../../components/iconify\";\r\nimport {useAlert} from \"../../layouts/dashboard/AlertContext\";\r\n\r\n\r\nconst AddressByClient = () => {\r\n    const param = useParams();\r\n    const idTK = param.id;\r\n    const [listData, setListData] = useState([]);\r\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\r\n    const [selectedStatus, setSelectedStatus] = useState(\"Tất cả\");\r\n    const [selectedLoaiDiaChi, setSelectedLoaiDiaChi] = useState(\"Tất cả\");\r\n    const [originalListData, setOriginalListData] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const [listTP, setListTP] = useState([]);\r\n    const [listQH, setListQH] = useState([]);\r\n    const [listPX, setListPX] = useState([]);\r\n\r\n    const {showAlert} = useAlert();\r\n\r\n    const getListData = async (idTK, page) => {\r\n        try {\r\n            const res = await fetchDiaChiByTK(idTK, page);\r\n            setListData(res);\r\n            setOriginalListData(res);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getListData(idTK, 0);\r\n        getListTP();\r\n    }, [idTK]);\r\n\r\n    useEffect(() => {\r\n        listData.forEach((item) => {\r\n            fetchQuanHuyenAndPhuongXa(item.tinhThanh, item.quanHuyen);\r\n        });\r\n        // eslint-disable-next-line\r\n    }, [listData]);\r\n\r\n    const fetchUpdatedData = (page) => {\r\n        getListData(idTK, page);\r\n    };\r\n\r\n\r\n    const columns = [\r\n        {field: \"index\", headerName: \"##\", width: 30},\r\n        // {field: \"maTaiKhoan\", headerName: \"Mã Tài Khoản\", width: 130},\r\n        {field: \"tenNguoiNhan\", headerName: \"Tên Người Nhận\", width: 120},\r\n        {field: \"sdtKh\", headerName: \"Số Điện Thoại\", width: 120,},\r\n        {field: \"diaChi\", headerName: \"Địa Chỉ\", width: 200,},\r\n        {field: \"diaChiCuThe\", headerName: \"Địa Chỉ Cụ Thể\", width: 210,},\r\n        {\r\n            field: \"loaiDiaChi\", headerName: \"Loại Địa Chỉ\", width: 100, renderCell: (params) => {\r\n                const {value: loaiDiaChi} = params;\r\n                let badgeVariant;\r\n                let statusText;\r\n                switch (loaiDiaChi) {\r\n                    case 1:\r\n                        badgeVariant = \"primary\";\r\n                        statusText = \"Nơi Làm Việc\";\r\n                        break;\r\n                    default:\r\n                        badgeVariant = \"light\";\r\n                        statusText = \"Nhà Riêng\";\r\n                        break;\r\n                }\r\n\r\n                return (<Badge bg={badgeVariant} text=\"dark\">\r\n                    {statusText}\r\n                </Badge>);\r\n            },\r\n        }, {\r\n            field: \"trangThai\", headerName: \"Trạng Thái\", width: 160, renderCell: (params) => {\r\n                const {value: trangThai} = params;\r\n                let badgeVariant;\r\n                let statusText;\r\n                switch (trangThai) {\r\n                    case 1:\r\n                        badgeVariant = \"primary\";\r\n                        statusText = \"Đã Xác Nhận\";\r\n                        break;\r\n                    case 4:\r\n                        badgeVariant = \"info\";\r\n                        statusText = \"Đã Ngưng hoạt động\";\r\n                        break;\r\n                    default:\r\n                        badgeVariant = \"light\";\r\n                        statusText = \"Chưa Xác Nhận\";\r\n                        break;\r\n                }\r\n\r\n                return (<Badge bg={badgeVariant} text=\"dark\">\r\n                    {statusText}\r\n                </Badge>);\r\n            },\r\n        }, {\r\n            field: \"actions\", headerName: \"Hành Động\", width: 100, renderCell: (params) => {\r\n                const {row} = params;\r\n                return [\r\n                    <GridActionsCellItem\r\n                        color=\"primary\"\r\n                        onClick={() => handlClickRow(row)}\r\n                        icon={<EditIcon/>}\r\n                    />,\r\n                    <GridActionsCellItem\r\n                        color=\"error\"\r\n                        icon={<DeleteIcon/>}\r\n                        onClick={() => handleClickOpenDelete(row)}\r\n                    />,\r\n\r\n                ];\r\n            },\r\n        },];\r\n    const getListTP = async () => {\r\n        const resTP = await getTinhThanhPho();\r\n        setListTP(resTP?.data.results);\r\n    };\r\n\r\n    const getNameByIdTP = (id) => {\r\n        const province = listTP.find((item) => item.province_id === id);\r\n        return province ? province.province_name : null;\r\n    };\r\n    const getNameByIdQH = (id) => {\r\n        const province = listQH.find((item) => item.district_id === id);\r\n        return province ? province.district_name : null;\r\n    };\r\n    const getNameByIdPX = (id) => {\r\n        const province = listPX.find((item) => item.ward_id === id);\r\n        return province ? province.ward_name : null;\r\n    };\r\n\r\n    const fetchQuanHuyenAndPhuongXa = async (tinhThanhID, quanHuyenID) => {\r\n        const existingQH = listQH.find(item => item.district_id === quanHuyenID);\r\n        const existingPX = listPX.find(item => item.ward_id === quanHuyenID);\r\n\r\n        if (existingQH && existingPX) {\r\n            // Data already exists, no need to fetch again\r\n            return;\r\n        }\r\n\r\n        const quanHuyenData = await getQuanHuyen(tinhThanhID);\r\n        const phuongXaData = await getPhuongXa(quanHuyenID);\r\n\r\n        if (quanHuyenData.status === 200 && phuongXaData.status === 200) {\r\n            setListQH(prevListQH => [...prevListQH, ...quanHuyenData.data.results]);\r\n            setListPX(prevListPX => [...prevListPX, ...phuongXaData.data.results]);\r\n        }\r\n    };\r\n\r\n\r\n    // Xử lý dữ liệu của bảng vào mảng rows\r\n    const rows = listData\r\n        .filter((item) => {\r\n            const valuesToSearch = [item.taiKhoan.maTaiKhoan, // Search maTaiKhoan directly\r\n                item.tenNguoiNhan, item.sdt, item.tinhThanh, item.quanHuyen, item.phuongXa, item.diaChiCuThe, // Convert trangThai to string for search\r\n            ];\r\n            return valuesToSearch.some((value) => String(value).toLowerCase().includes(searchKeyword.toLowerCase()));\r\n        })\r\n        .map((item, index) => ({\r\n            idTaiKhoan: item.taiKhoan.idTaiKhoan,\r\n            id: item.id,\r\n            index: index + 1,\r\n            maTaiKhoan: item.taiKhoan.maTaiKhoan,\r\n            tenNguoiNhan: item.tenNguoiNhan,\r\n            sdtKh: item.sdt,\r\n            diaChi: `${getNameByIdTP(item.tinhThanh)}, ${getNameByIdQH(item.quanHuyen)}, ${getNameByIdPX(item.phuongXa)}`,\r\n            diaChiCuThe: item.diaChiCuThe,\r\n            loaiDiaChi: item.loaiDiaChi,\r\n            trangThai: item.trangThai,\r\n        }));\r\n\r\n\r\n    const handlePageClick = (page) => {\r\n        getListData(page + 1);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const filteredData = selectedStatus === \"Tất cả\" ? originalListData // Sử dụng danh sách dữ liệu gốc khi chọn \"All\"\r\n            : originalListData.filter((item) => item.trangThai === parseInt(selectedStatus, 10));\r\n\r\n        const filteredLoai = selectedLoaiDiaChi === \"Tất cả\" ? originalListData // Sử dụng danh sách dữ liệu gốc khi chọn \"All\"\r\n            : originalListData.filter((item) => item.loaiDiaChi === parseInt(selectedLoaiDiaChi, 10));\r\n        const combinedFilteredData = filteredData.filter(item => filteredLoai.includes(item));\r\n\r\n        setListData(combinedFilteredData);\r\n    }, [selectedStatus, selectedLoaiDiaChi, originalListData]);\r\n\r\n    const handlClickRow = (item) => {\r\n        navigate(`/dashboard/address/detail/${item.id}`);\r\n    };\r\n    const handAdd = () => {\r\n        navigate(`/dashboard/address/add/${idTK}`);\r\n    };\r\n\r\n\r\n    const handleDelete = async (item) => {\r\n        const res = await deleteDiaChi(item.id);\r\n        console.log(\"Check res: \", res);\r\n        if (res) {\r\n            showAlert('success', 'Chuyển trang thêm Thành Công');\r\n            handleClose();\r\n            fetchUpdatedData(0);\r\n        } else {\r\n            showAlert('warning', 'Thêm Địa Chỉ Thất Bại !');\r\n            handleClose();\r\n        }\r\n    };\r\n\r\n    // dong mo confirm\r\n    const [open, setOpen] = useState(false);\r\n    const [idDelete, setIdDelete] = useState(\"\");\r\n\r\n    const handleClickOpenDelete = (id) => {\r\n        setOpen(true);\r\n        setIdDelete(id);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    function CustomToolbar() {\r\n        return (\r\n            <GridToolbarContainer>\r\n                <GridToolbarFilterButton/>\r\n                <GridToolbarColumnsButton/>\r\n                <GridToolbarDensitySelector/>\r\n                <GridToolbarExport\r\n                    csvOptions={{\r\n                        fileName: 'address',\r\n                        utf8WithBom: true,\r\n                    }}\r\n                />\r\n\r\n                <FormControl variant=\"standard\" sx={{m: 1, minWidth: 120}}>\r\n                    <InputLabel id=\"status-select\">Trạng Thái:</InputLabel>\r\n                    <Select\r\n                        labelId=\"status-select\"\r\n                        id=\"status-select\"\r\n                        value={selectedStatus}\r\n                        label=\"Trạng Thái\"\r\n                        onChange={(e) => setSelectedStatus(e.target.value)}\r\n                    >\r\n                        <MenuItem value={\"Tất cả\"}>Tất Cả</MenuItem>\r\n                        <MenuItem value={0}>Chưa Kích Hoạt</MenuItem>\r\n                        <MenuItem value={1}>Đã Kích Hoạt</MenuItem>\r\n                        <MenuItem value={4}>Ngưng Hoạt Động</MenuItem>\r\n                        <MenuItem value={10}>Đã Bị Xóa</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"standard\" sx={{m: 1, minWidth: 120}}>\r\n                    <InputLabel id=\"status-select\">Loại Địa Chỉ:</InputLabel>\r\n                    <Select\r\n                        labelId=\"status-select\"\r\n                        id=\"status-select\"\r\n                        value={selectedStatus}\r\n                        label=\"Trạng Thái\"\r\n                        onChange={(e) => setSelectedLoaiDiaChi(e.target.value)}\r\n                    >\r\n                        <MenuItem value={\"Tất cả\"}>Tất Cả</MenuItem>\r\n                        <MenuItem value={0}>Nhà Riêng</MenuItem>\r\n                        <MenuItem value={1}>Nơi Làm Việc</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </GridToolbarContainer>\r\n        );\r\n    }\r\n\r\n\r\n    return (<>\r\n\r\n        <Helmet>\r\n            <title> Address || 5F Store </title>\r\n        </Helmet>\r\n        <Container>\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\r\n                <Typography variant=\"h4\" gutterBottom>\r\n                    Thông Tin Địa Chỉ Của Tài Khoản: {idTK}\r\n                </Typography>\r\n                <Button variant=\"contained\" startIcon={<Iconify icon=\"eva:plus-fill\"/>} onClick={() => handAdd()}>\r\n                    Tạo Địa Chỉ Mới\r\n                </Button>\r\n            </Stack>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                sx={{ml: 1, flex: 1}}\r\n                placeholder=\"Tìm Kiếm\"\r\n                InputProps={{\r\n                    startAdornment: (\r\n                        <IconButton type=\"button\" sx={{p: '10px'}} aria-label=\"search\">\r\n                            <SearchIcon/>\r\n                        </IconButton>\r\n                    ),\r\n                }}\r\n                onChange={(e) => setSearchKeyword(e.target.value)}\r\n            />\r\n\r\n            <DataGrid\r\n                rows={rows}\r\n                columns={columns}\r\n                initialState={{\r\n                    pagination: {\r\n                        paginationModel: {page: 0, pageSize: 5},\r\n                    },\r\n                }}\r\n                slots={{toolbar: CustomToolbar}}\r\n                getRowSpacing={(params) => ({\r\n                    top: params.isFirstVisible ? 0 : 5,\r\n                    bottom: params.isLastVisible ? 0 : 5,\r\n                })}\r\n                pageSizeOptions={[5, 10, 15]}\r\n            />\r\n\r\n\r\n        </Container>\r\n        <Dialog\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">{\"Xác nhận xóa?\"}</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\">\r\n                    Bạn có chắc chắn muốn xóa địa chỉ này không?\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={handleClose}>Hủy</Button>\r\n                <Button onClick={() => handleDelete(idDelete)} autoFocus>\r\n                    Xóa\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n\r\n    </>);\r\n};\r\n\r\nexport default AddressByClient;\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\diaChi\\AddAddress.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout-Client.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\palette.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\shadows.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\globalStyles.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\typography.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\customShadows.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\simple\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\chart\\styles.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\scroll-to-top\\ScrollToTop.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\chart\\useChart.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\hooks\\useResponsive.js",[],["991"],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\bill-service.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\taiKhoanKhachHangSevice.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\san-pham-service.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\OrderManagementTimeLine.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\OderManagementSevice.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\_mock\\user.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\BillSevice.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Delete-DirectSale.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Create-Online.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\_mock\\blog.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modals-AddProduct.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Delete-All-Product.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modals-Update-Product-Cart.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modals-AddKhachHang.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Payment-Confirm.js",["992"],[],"import { useNavigate, useParams } from 'react-router-dom';\r\nimport '../scss/Car-Bill-ADM.scss';\r\nimport { Alert, Dialog, FormControlLabel, Snackbar, Switch, TextField } from '@mui/material';\r\nimport { useState, forwardRef } from 'react';\r\nimport { format } from 'date-fns';\r\nimport Button from '@mui/material/Button';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport PropTypes from 'prop-types';\r\nimport { paymentOnline } from '../service/BillSevice';\r\nimport { updatePayment } from '../service/OrderManagementTimeLine';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nconst ModalPaymentComfirm = (props) => {\r\n  // Get Props\r\n  ModalPaymentComfirm.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    sdtKHTT: PropTypes.string.isRequired,\r\n    tenKhTT: PropTypes.string.isRequired,\r\n    thanhTien: PropTypes.number.isRequired,\r\n    listHD: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n  };\r\n  const { show, handleClose, listHD, thanhTien, tenKhTT, sdtKHTT } = props;\r\n\r\n  //   Insert product\r\n  const param = useParams();\r\n  const idHdParam = param.id;\r\n  const [moTa, setMoTa] = useState('');\r\n  const currentDate = new Date();\r\n  const formattedDate = format(currentDate, 'yyyy-MM-dd');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  //   Show  payment online\r\n  const [isDeliveryChecked, setIsDeliveryChecked] = useState(false);\r\n\r\n  const handleDeliveryChange = (event) => {\r\n    setIsDeliveryChecked(event.target.checked);\r\n    setChangeAmount(0);\r\n  };\r\n\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  const handlePaymentOnCash = async () => {\r\n    try {\r\n      if (isDeliveryChecked === true) {\r\n        const cashGivenValue = parseFloat(cashGiven);\r\n        if (!Number.isNaN(cashGivenValue)) {\r\n          const change = thanhTien - cashGivenValue;\r\n          if (change < 0) {\r\n            setAlertContent({\r\n              type: 'warning',\r\n              message: 'Tiền Mặt Khách Đưa Đã Dư',\r\n            });\r\n          } else if (change < 10000) {\r\n            setAlertContent({\r\n              type: 'warning',\r\n              message: 'Tiền Chuyển Khoản Phải Trên 10000',\r\n            });\r\n          } else {\r\n            console.log('Check listHD: ', listHD);\r\n            const paymentOn = await paymentOnline(changeAmount, listHD.idHd);\r\n            console.log('Check paymentOn: ', paymentOn);\r\n            // Mở tab mới với đường dẫn URL\r\n            window.location.href = paymentOn;\r\n          }\r\n        } else {\r\n          setChangeAmount(0);\r\n        }\r\n      } else {\r\n        const cashGivenValue = parseFloat(cashGiven);\r\n        const change = cashGivenValue - thanhTien;\r\n\r\n        if (change < 0) {\r\n          setAlertContent({\r\n            type: 'warning',\r\n            message: 'Tiền Khách Đưa Chưa Đủ',\r\n          });\r\n        } else {\r\n          await updatePayment(idHdParam, tenKhTT, sdtKHTT, formattedDate, thanhTien, cashGiven, change, 1, 9);\r\n          setAlertContent({\r\n            type: 'success',\r\n            message: 'Thanh Toán Tại Quầy Thành Công!!!',\r\n          });\r\n          navigate(`/order-management-timeline/${idHdParam}`);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.error('Error updating', e);\r\n    }\r\n  };\r\n  //   Payment\r\n  const [cashGiven, setCashGiven] = useState('');\r\n  const [changeAmount, setChangeAmount] = useState(0);\r\n\r\n  const handleCalculateChange = () => {\r\n    const cashGivenValue = parseFloat(cashGiven);\r\n\r\n    let change = 0;\r\n\r\n    if (!Number.isNaN(cashGivenValue)) {\r\n      if (isDeliveryChecked === true) {\r\n        change = thanhTien - cashGivenValue;\r\n      } else {\r\n        change = cashGivenValue - thanhTien;\r\n      }\r\n    }\r\n\r\n    if (change < 0) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: isDeliveryChecked ? 'Tiền Mặt Khách Đưa Đã Dư' : 'Tiền Khách Đưa Chưa Đủ',\r\n      });\r\n      setChangeAmount(0);\r\n    } else {\r\n      setChangeAmount(change);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Dialog\r\n          open={show}\r\n          TransitionComponent={Transition}\r\n          keepMounted\r\n          onClose={handleClose}\r\n          maxWidth=\"xl\"\r\n          aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n          <DialogTitle>{'THANH TOÁN HÓA ĐƠN'}</DialogTitle>\r\n          <DialogContent>\r\n            {/* <DialogContentText id=\"alert-dialog-slide-description\"> */}\r\n            <div>\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Mã Hóa Đơn\"\r\n                multiline\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={listHD.maHd}\r\n                fullWidth\r\n                sx={{ marginTop: 2 }}\r\n              />\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"Thành Tiền\"\r\n                multiline\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                InputProps={{\r\n                  readOnly: true,\r\n                }}\r\n                defaultValue={thanhTien}\r\n                fullWidth\r\n                sx={{ marginTop: 2 }}\r\n              />\r\n              <TextField\r\n                onChange={(e) => setMoTa(e.target.value)}\r\n                id=\"outlined-multiline-static\"\r\n                label=\"Mô Tả\"\r\n                sx={{ m: 1, marginTop: 2, marginLeft: 0 }}\r\n                fullWidth\r\n                maxRows={4}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                multiline\r\n              />\r\n              <FormControlLabel control={<Switch />} onChange={handleDeliveryChange} label=\"Thanh Toán Online\" />\r\n              {isDeliveryChecked ? (\r\n                <>\r\n                  <TextField\r\n                    id=\"standard-multiline-flexible\"\r\n                    label=\"Số Tiền Mặt Gửi\"\r\n                    type=\"number\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    defaultValue={0}\r\n                    sx={{ marginTop: 2, marginBottom: 2 }}\r\n                    onChange={(e) => setCashGiven(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    sx={{ marginBottom: 2 }}\r\n                    variant=\"contained\"\r\n                    endIcon={<SendIcon />}\r\n                    onClick={handleCalculateChange}\r\n                  >\r\n                    Tính Tiền\r\n                  </Button>\r\n                  <span>Số Tiền Chuyển Khoản: {changeAmount}</span>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <TextField\r\n                    id=\"standard-multiline-flexible\"\r\n                    label=\"Số Tiền Khách Gửi\"\r\n                    type=\"number\"\r\n                    multiline\r\n                    maxRows={4}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    sx={{ marginTop: 2, marginBottom: 2 }}\r\n                    onChange={(e) => setCashGiven(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    sx={{ marginBottom: 2 }}\r\n                    variant=\"contained\"\r\n                    endIcon={<SendIcon />}\r\n                    onClick={handleCalculateChange}\r\n                  >\r\n                    Tính Tiền\r\n                  </Button>\r\n                  <span>Số Tiền Thừa Của Khách: {changeAmount}</span>\r\n                </>\r\n              )}\r\n            </div>\r\n            {/* </DialogContentText> */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Hủy</Button>\r\n            <Button onClick={handlePaymentOnCash}>Đồng Ý</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ModalPaymentComfirm;\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\SanPhamService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Delete-Product.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Update-Status.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modals-SelectHistoryBill.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\MappingTimeLine\\Timeline.jsx",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\MappingTimeLine\\TimelineEvent.jsx",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\logo\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\iconify\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\scrollbar\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\giamGiaService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\utils\\formatNumber.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\client\\Detail-Product.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\discounts\\Modal-Delete-Discount.js",["993","994","995","996","997","998","999","1000","1001"],[],"import { Alert, Snackbar } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { remove } from '../../service/giamGiaService';\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function ModalDeleteDiscount(props) {\r\n  const { open, handleClose, information } = props;\r\n  const [idGgct, setIdGgct] = useState('');\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    if (information != null) {\r\n      setIdGgct(information.idGgct);\r\n    } else {\r\n      setIdGgct('');\r\n    }\r\n  }, [information]);\r\n\r\n  const handleDelete = async () => {\r\n    if (information.trangThai === 0) {\r\n      console.log(information.idGgct);\r\n      await remove(information.idGgct);\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Xóa thành công!',\r\n      });\r\n    } else if (information.trangThai === 1) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Không thể xóa!!!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Lỗi của chúng tôi!',\r\n      });\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{'Xóa Giảm Giá'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">Xóa Giảm Giá Có Mã Là: {idGgct}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Hủy</Button>\r\n          <Button onClick={handleDelete}>Đồng Ý</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\chucVuService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\taiKhoanNhanVienService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\client\\Detail-Cart.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\Staff\\Modal-Delete-Staff.js",["1002","1003","1004","1005","1006","1007","1008","1009","1010","1011"],[],"import { Alert, Snackbar } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Slide from '@mui/material/Slide';\r\nimport { useState, useEffect, forwardRef } from 'react';\r\nimport { deleteTaiKhoan } from '../../service/taiKhoanNhanVienService'\r\n\r\nconst Transition = forwardRef((props, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\nexport default function ModalDeleteDiscount(props) {\r\n  const { open, handleClose, information } = props;\r\n  const [idTaiKhoan, setidTaiKhoan] = useState('');\r\n  const [maTaiKhoan, setMaTaiKhoan] = useState('');\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (information != null) {\r\n      console.log(information);\r\n      setidTaiKhoan(information.idTaiKhoan);\r\n      setMaTaiKhoan(information.maTaiKhoan);\r\n    } else {\r\n      setidTaiKhoan('');\r\n    }\r\n  }, [information]);\r\n\r\n  const handleDelete = async () => {\r\n    // Kiểm tra trạng thái trước khi xóa\r\n    if (information.trangThai === 0) {\r\n      // Thay đổi trạng thái thành 10\r\n      information.trangThai = 10;\r\n\r\n      // Gửi yêu cầu xóa\r\n      await deleteTaiKhoan(information.idTaiKhoan);\r\n\r\n      // Cập nhật giao diện ngay lập tức\r\n      setAlertContent({\r\n        type: 'success',\r\n        message: 'Xóa thành công!',\r\n      });\r\n    } else if (information.trangThai === 10) {\r\n      setAlertContent({\r\n        type: 'warning',\r\n        message: 'Không thể xóa!!!',\r\n      });\r\n    } else {\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Lỗi của chúng tôi!',\r\n      });\r\n    }\r\n    handleClose();\r\n  };\r\n\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>{'Xóa Nhân Viên'}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">Xóa Mã Nhân Viên: {maTaiKhoan}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Hủy</Button>\r\n          <Button onClick={handleDelete}>Đồng Ý</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\auth\\login\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\user\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\AlertContext.js",["1012","1013"],[],"// AlertContext.js\r\n\r\nimport { createContext, useContext, useState } from 'react';\r\n\r\nconst AlertContext = createContext();\r\n\r\nexport const AlertProvider = ({ children }) => {\r\n    const [alertContent, setAlertContent] = useState(null);\r\n\r\n    const showAlert = (type, message) => {\r\n        setAlertContent({ type, message });\r\n    };\r\n\r\n    const clearAlert = () => {\r\n        setAlertContent(null);\r\n    };\r\n\r\n    return (\r\n        <AlertContext.Provider value={{ alertContent, showAlert, clearAlert }}>\r\n            {children}\r\n        </AlertContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAlert = () => {\r\n    return useContext(AlertContext);\r\n};\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\AnhService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\ChiTietSPService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\CloudinaryService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\XuatXuService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\ChatLieuService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\LoaiCoAoService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\MauSacService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\LoaiSPService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\OngTayAoService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\label\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\color-utils\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\SizeService.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\apiDiaChi.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\diaChiSevice.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\AlertSnackbar.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\simple\\SimpleLayout.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\DashboardLayout.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\utils\\cssStyles.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\client\\Footer.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\client\\Header.js",["1014"],[],"import Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useEffect, useState, Fragment } from 'react';\r\n\r\n// Icon styles\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ShoppingCartIcon from '@mui/icons-material/ShoppingCart';\r\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\r\nimport Badge from '@mui/material/Badge';\r\nimport { styled } from '@mui/material/styles';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\nimport { Avatar, Box, Chip, ListItemIcon, Menu, MenuItem, Tooltip } from '@mui/material';\r\nimport { Logout, PersonAdd, Settings } from '@mui/icons-material';\r\nimport logo5F from '../../assets/logo_5F.png';\r\n\r\n// mocks_\r\nimport account from '../../_mock/account';\r\nimport { listProductOnCart } from '../../service/client/Detail-Cart';\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n  '& .MuiBadge-badge': {\r\n    // right: -3,\r\n    // top: 13,\r\n    border: `2px solid ${theme.palette.background.paper}`,\r\n    // padding: '0 4px',\r\n  },\r\n}));\r\n\r\nconst Header = () => {\r\n  const [listData, setListData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const getLocalStore = localStorage.getItem('userFormToken');\r\n        const authorities = getLocalStore ? JSON.parse(getLocalStore).taiKhoan : '';\r\n        const getData = await listProductOnCart(authorities.idTaiKhoan);\r\n        setListData(getData || []);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setListData([]);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle select menu\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('userFormToken');\r\n    navigate('/');\r\n  };\r\n\r\n  // Select All Bill\r\n  const handleSelectAllBill = () => {\r\n    navigate(`/client/select-bill-client/${account.user.idTaiKhoan}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"gray-background\">\r\n        <Container>\r\n          <Nav className=\"justify-content-end\" activeKey=\"/home\">\r\n            <Nav.Item>\r\n              <Nav.Link href=\"/home\" className=\"nav-links\">\r\n                Help\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <span className=\"nav-separator\">|</span>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <Nav.Link eventKey=\"link-1\" className=\"nav-links\">\r\n                Join Us\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              <span className=\"nav-separator\">|</span>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n              {localStorage.getItem('userFormToken') ? (\r\n                <>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>\r\n                    <Tooltip title=\"Account settings\">\r\n                      <Chip\r\n                        avatar={<Avatar src=\"/static/images/avatar/1.jpg\" />}\r\n                        label={account.displayName}\r\n                        onClick={handleClick}\r\n                      />\r\n                    </Tooltip>\r\n                  </Box>\r\n                  <Menu\r\n                    anchorEl={anchorEl}\r\n                    id=\"account-menu\"\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    onClick={handleClose}\r\n                    PaperProps={{\r\n                      elevation: 0,\r\n                      sx: {\r\n                        overflow: 'visible',\r\n                        filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',\r\n                        mt: 1.5,\r\n                        '& .MuiAvatar-root': {\r\n                          width: 32,\r\n                          height: 32,\r\n                          ml: -0.5,\r\n                          mr: 1,\r\n                        },\r\n                        '&:before': {\r\n                          content: '\"\"',\r\n                          display: 'block',\r\n                          position: 'absolute',\r\n                          top: 0,\r\n                          right: 14,\r\n                          width: 10,\r\n                          height: 10,\r\n                          bgcolor: 'background.paper',\r\n                          transform: 'translateY(-50%) rotate(45deg)',\r\n                          zIndex: 0,\r\n                        },\r\n                      },\r\n                    }}\r\n                    transformOrigin={{ horizontal: 'right', vertical: 'top' }}\r\n                    anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                  >\r\n                    <MenuItem onClick={handleSelectAllBill}>\r\n                      <ListItemIcon>\r\n                        <PersonAdd fontSize=\"small\" />\r\n                      </ListItemIcon>\r\n                      Hóa Đơn Của Tôi\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleClose}>\r\n                      <ListItemIcon>\r\n                        <Settings fontSize=\"small\" />\r\n                      </ListItemIcon>\r\n                      Thông Tin\r\n                    </MenuItem>\r\n                    <MenuItem onClick={handleLogout}>\r\n                      <ListItemIcon>\r\n                        <Logout fontSize=\"small\" />\r\n                      </ListItemIcon>\r\n                      Đăng Xuất\r\n                    </MenuItem>\r\n                  </Menu>\r\n                  {/* <Chip\r\n                    avatar={<Avatar src=\"/static/images/avatar/1.jpg\" />}\r\n                    label={account.displayName}\r\n                    onClick={handleClick}\r\n                  />\r\n\r\n                  <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={handleClose}>\r\n                    <MenuItem onClick={handleClose}>Hóa Đơn</MenuItem>\r\n                    <MenuItem onClick={handleClose}>Thông Tin</MenuItem>\r\n                    <MenuItem onClick={handleLogout}>Đăng Xuất</MenuItem>\r\n                  </Menu> */}\r\n                </>\r\n              ) : (\r\n                <Nav.Link href=\"/login\" eventKey=\"link-2\" className=\"nav-links\">\r\n                  Login\r\n                </Nav.Link>\r\n              )}\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Container>\r\n      </div>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"while\" variant=\"while\">\r\n        <Container>\r\n          <img src={logo5F} alt=\"logo_5F\" height={'50px'} />\r\n          <Navbar.Brand href=\"#home\">\r\n            <Link to=\"/client/home\" className={'nav-link'}>\r\n              Home\r\n            </Link>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Link to=\"/\" className={'nav-link'}>\r\n                Shope\r\n              </Link>\r\n              <NavLink to=\"/\" className={'nav-link'}>\r\n                Sale\r\n              </NavLink>\r\n              <NavLink to=\"/client/products\" className={'nav-link'}>\r\n                Sản phẩm\r\n              </NavLink>\r\n            </Nav>\r\n            <Nav>\r\n              <Form className=\"d-flex search-form\">\r\n                <Form.Control type=\"search\" placeholder=\"Search\" className=\"me-2 search-input\" aria-label=\"Search\" />\r\n                <Button variant=\"outline-success\" className=\"search-button\">\r\n                  <FontAwesomeIcon icon={faMagnifyingGlass} size=\"xs\" />\r\n                </Button>\r\n              </Form>\r\n              <IconButton aria-label=\"cart\">\r\n                <StyledBadge badgeContent={4} color=\"secondary\">\r\n                  <MailIcon />\r\n                </StyledBadge>\r\n              </IconButton>\r\n              <Link to=\"/client/cart\" className={'nav-link'}>\r\n                <StyledBadge badgeContent={listData && listData.length} color=\"secondary\">\r\n                  <ShoppingCartIcon />\r\n                </StyledBadge>\r\n              </Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\service\\custom-axios.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Paper.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Tooltip.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Backdrop.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Table.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Card.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Typography.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Autocomplete.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Input.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\theme\\overrides\\Button.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\DirectSaleSevice.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\iconify\\Iconify.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\logo\\Logo.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\scrollbar\\Scrollbar.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentVisits.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\auth\\login\\LoginForm.js",["1015"],[],"import { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n// @mui\r\nimport { Link, Stack, IconButton, InputAdornment, TextField, Checkbox, Snackbar, Alert } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// components\r\n\r\n\r\n\r\nimport {GoogleLogin, GoogleOAuthProvider} from \"@react-oauth/google\";\r\nimport Iconify from '../../../components/iconify';\r\n\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginForm() {\r\n  const navigate = useNavigate();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const [params, setParams] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const getParam = (e) => {\r\n    setParams({ ...params, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle login\r\n  const [alertContent, setAlertContent] = useState(null);\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setAlertContent(null);\r\n  };\r\n  const fetchUserData = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/api/detail-user', {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem('accessToken')}`,\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        localStorage.setItem('userFormToken', JSON.stringify(response.data));\r\n        console.log('response:', response.data);\r\n        console.log('response: ', response);\r\n        const authorities = response.data.authorities[0].authority;\r\n        navigate(authorities === 'ROLE_ADMIN' || authorities === 'ROLE_STAFF' ? '/dashboard/app' : '/client/home');\r\n        window.location.reload();\r\n\r\n      } else {\r\n        throw Error(response.status);\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    console.log(params);\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Content-Type', 'application/json');\r\n    myHeaders.append('Authorization', 'Basic Og==');\r\n\r\n    const raw = JSON.stringify({\r\n      username: params.email,\r\n      password: params.password,\r\n    });\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: 'follow',\r\n    };\r\n    console.log(\"requestOptions:\",requestOptions);\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/login', requestOptions);\r\n\r\n      if (response.ok) {\r\n        setAlertContent({\r\n          type: 'success',\r\n          message: 'Login Success',\r\n        });\r\n        const result = await response.json();\r\n        console.log('result: ', result);\r\n        localStorage.setItem('accessToken', result.accessToken);\r\n        await fetchUserData();\r\n      } else {\r\n        throw new Error(response.status);\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Login Failed',\r\n      });\r\n    }\r\n  };\r\n  const responseGoogle = async (credentialResponse ) => {\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:8080/google-login', credentialResponse.credential );\r\n\r\n      if (res) {\r\n        setAlertContent({\r\n          type: 'success',\r\n          message: 'Login Success',\r\n        });\r\n        localStorage.setItem('accessToken', res.data);\r\n        await fetchUserData();\r\n\r\n      } else {\r\n        throw new Error(res);\r\n      }\r\n    } catch (error) {\r\n      console.log('error', error);\r\n      setAlertContent({\r\n        type: 'error',\r\n        message: 'Login Failed',\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Stack spacing={3}>\r\n        <GoogleOAuthProvider clientId=\"964666128031-58ftilgfcv1dtnn3ke442vv5qjmei4da.apps.googleusercontent.com\">\r\n        <GoogleLogin\r\n\r\n            onSuccess={responseGoogle}\r\n            onFailure={responseGoogle}\r\n            cookiePolicy='single_host_origin'\r\n        />\r\n        </GoogleOAuthProvider>\r\n        \r\n\r\n        <TextField name=\"email\" label=\"Email address\" value={params.email} onChange={(e) => getParam(e)} />\r\n\r\n        <TextField\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          onChange={(e) => getParam(e)}\r\n          value={params.password}\r\n          type={showPassword ? 'text' : 'password'}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={() => setShowPassword(!showPassword)} edge=\"end\">\r\n                  <Iconify icon={showPassword ? 'eva:eye-fill' : 'eva:eye-off-fill'} />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Stack>\r\n\r\n      <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\r\n        <Checkbox name=\"remember\" label=\"Remember me\" />\r\n        <Link variant=\"subtitle2\" underline=\"hover\">\r\n          Forgot password?\r\n        </Link>\r\n      </Stack>\r\n\r\n      <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" onClick={handleClick}>\r\n        Login\r\n      </LoadingButton>\r\n      {alertContent && (\r\n        <Snackbar\r\n          open\r\n          autoHideDuration={3000}\r\n          onClose={handleSnackbarClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleSnackbarClose} severity={alertContent.type} sx={{ width: '100%' }}>\r\n            {alertContent.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport const accessToken = localStorage.getItem('accessToken');\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTasks.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppOrderTimeline.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppNewsUpdate.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppTrafficBySite.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWebsiteVisits.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppWidgetSummary.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppConversionRates.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostCard.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\MappingTimeLine\\Placeholder.jsx",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostsSort.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\app\\AppCurrentSubject.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\blog\\BlogPostsSearch.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar-NoFilter.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListHead-NoCheckbox.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCard.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\user\\UserListToolbar.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-ADM.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductList-Client.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCartWidget.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductListAll.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSidebar.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductCardAll.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductFilterSB.js",["1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032"],[],"import PropTypes from 'prop-types';\r\nimport { useEffect, useMemo, useState } from 'react';\r\n// @mui\r\nimport {\r\n  Box,\r\n  Radio,\r\n  Stack,\r\n  Button,\r\n  Drawer,\r\n  Rating,\r\n  Divider,\r\n  Checkbox,\r\n  FormGroup,\r\n  IconButton,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n} from '@mui/material';\r\n// components\r\nimport Iconify from '../../../components/iconify';\r\nimport Scrollbar from '../../../components/scrollbar';\r\nimport { ColorMultiPicker } from '../../../components/color-utils';\r\n\r\nimport { fetchLSP } from '../../../service/LoaiSPService';\r\nimport { fetchCL } from '../../../service/ChatLieuService';\r\nimport { fetchXX } from '../../../service/XuatXuService';\r\nimport { fetchTayAo } from '../../../service/OngTayAoService';\r\nimport { fetchCoAo } from '../../../service/LoaiCoAoService';\r\nimport { fetchMS } from '../../../service/MauSacService';\r\nimport { fetchSize } from '../../../service/SizeService';\r\n// ----------------------------------------------------------------------\r\n\r\n// export const SORT_BY_OPTIONS = [\r\n//   { value: 'featured', label: 'Featured' },\r\n//   { value: 'newest', label: 'Newest' },\r\n//   { value: 'priceDesc', label: 'Price: High-Low' },\r\n//   { value: 'priceAsc', label: 'Price: Low-High' },\r\n// ];\r\n// export const FILTER_GENDER_OPTIONS = ['Men', 'Women', 'Kids'];\r\n// export const FILTER_CATEGORY_OPTIONS = ['All', 'Shose', 'Apparel', 'Accessories'];\r\n// export const FILTER_RATING_OPTIONS = ['up4Star', 'up3Star', 'up2Star', 'up1Star'];\r\n// export const FILTER_PRICE_OPTIONS = [\r\n//   { value: 'below', label: 'Below $25' },\r\n//   { value: 'between', label: 'Between $25 - $75' },\r\n//   { value: 'above', label: 'Above $75' },\r\n// ];\r\n// export const FILTER_COLOR_OPTIONS = [\r\n//   '#00AB55',\r\n//   '#000000',\r\n//   '#FFFFFF',\r\n//   '#FFC0CB',\r\n//   '#FF4842',\r\n//   '#1890FF',\r\n//   '#94D82D',\r\n//   '#FFC107',\r\n// ];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nShopFilterSidebar.propTypes = {\r\n  openFilter: PropTypes.bool,\r\n  onOpenFilter: PropTypes.func,\r\n  onCloseFilter: PropTypes.func,\r\n  listSP: PropTypes.array,\r\n  onFilter: PropTypes.func,\r\n};\r\n\r\nexport default function ShopFilterSidebar({ openFilter, onOpenFilter, onCloseFilter, listSP, onFilter }) {\r\n  const [chatLieu, setChatLieu] = useState('');\r\n  const [loaiSP, setLoaiSP] = useState('');\r\n  const [xuatXu, setXuatXu] = useState('');\r\n  const [tayAo, setTayAo] = useState('');\r\n  const [coAo, setCoAo] = useState('');\r\n\r\n  const [mauSac, setMauSac] = useState('');\r\n  const [size, setSize] = useState('');\r\n\r\n  const [listCL, setListCL] = useState([]);\r\n  const [listLSP, setListLSP] = useState([]);\r\n  const [listXX, setListXX] = useState([]);\r\n  const [listTayAo, setListTayAo] = useState([]);\r\n  const [listCoAo, setListCoAo] = useState([]);\r\n  const [listMS, setListMS] = useState([]);\r\n  const [listSize, setListSize] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllList();\r\n  }, []);\r\n\r\n  const getAllList = async () => {\r\n    const resCL = await fetchCL();\r\n    setListCL(resCL);\r\n\r\n    const resLSP = await fetchLSP();\r\n    setListLSP(resLSP);\r\n\r\n    const resXX = await fetchXX();\r\n    setListXX(resXX);\r\n\r\n    const resTayAo = await fetchTayAo();\r\n    setListTayAo(resTayAo);\r\n\r\n    const resCoAo = await fetchCoAo();\r\n    setListCoAo(resCoAo);\r\n\r\n    const resMS = await fetchMS();\r\n    setListMS(resMS);\r\n\r\n    const resSize = await fetchSize();\r\n    setListSize(resSize);\r\n  };\r\n\r\n  // const filteredList = listSP.filter((sp) => sp.chatLieus.includes('12'));\r\n  // onFilter(filteredList);\r\n  return (\r\n    <>\r\n      <Button disableRipple color=\"inherit\" endIcon={<Iconify icon=\" ic:round-filter-list\" />} onClick={onOpenFilter}>\r\n        Filters&nbsp;\r\n      </Button>\r\n\r\n      <Drawer\r\n        anchor=\"right\"\r\n        open={openFilter}\r\n        onClose={onCloseFilter}\r\n        PaperProps={{\r\n          sx: { width: 280, border: 'none', overflow: 'hidden' },\r\n        }}\r\n      >\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ px: 1, py: 2 }}>\r\n          <Typography variant=\"subtitle1\" sx={{ ml: 1 }}>\r\n            Lọc\r\n          </Typography>\r\n          <IconButton onClick={onCloseFilter}>\r\n            <Iconify icon=\"eva:close-fill\" />\r\n          </IconButton>\r\n        </Stack>\r\n\r\n        <Divider />\r\n\r\n        <Scrollbar>\r\n          <Stack spacing={3} sx={{ p: 3 }}>\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Loại sản phẩm\r\n              </Typography>\r\n              {listLSP.length > 0 && (\r\n                <FormControl>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                    name=\"radio-buttons-group\"\r\n                    value={loaiSP}\r\n                    onChange={(event) => setLoaiSP(event.target.value)}\r\n                  >\r\n                    <FormControlLabel value={'all'} control={<Radio defaultChecked />} label=\"Tất cả\" />\r\n                    {listLSP.map((item, index) => (\r\n                      <FormControlLabel key={index} value={item.idLoaisp} control={<Radio />} label={item.tenLsp} />\r\n                    ))}\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Chất liệu\r\n              </Typography>\r\n\r\n              {listCL.length > 0 && (\r\n                <FormGroup>\r\n                  {listCL.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idCl} control={<Checkbox />} label={item.tenCl} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Xuất xứ\r\n              </Typography>\r\n\r\n              {listXX.length > 0 && (\r\n                <FormGroup>\r\n                  {listXX.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idXx} control={<Checkbox />} label={item.tenNuoc} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Tay áo\r\n              </Typography>\r\n\r\n              {listTayAo.length > 0 && (\r\n                <FormGroup>\r\n                  {listTayAo.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idTayAo} control={<Checkbox />} label={item.loaiTayAo} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Cổ áo\r\n              </Typography>\r\n\r\n              {listCoAo.length > 0 && (\r\n                <FormGroup>\r\n                  {listCoAo.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idCoAo} control={<Checkbox />} label={item.loaiCoAo} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Màu sắc\r\n              </Typography>\r\n\r\n              {listMS.length > 0 && (\r\n                <FormGroup>\r\n                  {listMS.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idMs} control={<Checkbox />} label={item.tenMs} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            {/* Mau sac real :v */}\r\n            {/* <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Colors\r\n              </Typography>\r\n              <ColorMultiPicker\r\n                name=\"colors\"\r\n                selected={[]}\r\n                colors={FILTER_COLOR_OPTIONS}\r\n                onChangeColor={(color) => [].includes(color)}\r\n                sx={{ maxWidth: 38 * 4 }}\r\n              />\r\n            </div> */}\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Size\r\n              </Typography>\r\n\r\n              {listSize.length > 0 && (\r\n                <FormGroup>\r\n                  {listSize.map((item, index) => (\r\n                    <FormControlLabel key={index} value={item.idSize} control={<Checkbox />} label={item.tenSize} />\r\n                  ))}\r\n                </FormGroup>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Giá\r\n              </Typography>\r\n              <RadioGroup\r\n                aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                name=\"radio-buttons-group\"\r\n                defaultValue=\"all\"\r\n              >\r\n                <FormControlLabel value=\"all\" control={<Radio defaultChecked />} label=\"Tất cả\" />\r\n                <FormControlLabel value=\"below\" control={<Radio />} label=\"Dưới 250.000đ\" />\r\n                <FormControlLabel value=\"between\" control={<Radio />} label=\"Từ 250.000đ - 750.000đ\" />\r\n                <FormControlLabel value=\"above\" control={<Radio />} label=\"Trên 750.000đ\" />\r\n              </RadioGroup>\r\n            </div>\r\n\r\n            {/* Rating\r\n            <div>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Rating\r\n              </Typography>\r\n              <RadioGroup>\r\n                {FILTER_RATING_OPTIONS.map((item, index) => (\r\n                  <FormControlLabel\r\n                    key={item}\r\n                    value={item}\r\n                    control={\r\n                      <Radio\r\n                        disableRipple\r\n                        color=\"default\"\r\n                        icon={<Rating readOnly value={4 - index} />}\r\n                        checkedIcon={<Rating readOnly value={4 - index} />}\r\n                        sx={{\r\n                          '&:hover': { bgcolor: 'transparent' },\r\n                        }}\r\n                      />\r\n                    }\r\n                    label=\"& Up\"\r\n                    sx={{\r\n                      my: 0.5,\r\n                      borderRadius: 1,\r\n                      '&:hover': { opacity: 0.48 },\r\n                    }}\r\n                  />\r\n                ))}\r\n              </RadioGroup>\r\n            </div> */}\r\n          </Stack>\r\n        </Scrollbar>\r\n\r\n        <Box sx={{ p: 3 }}>\r\n          <Button\r\n            fullWidth\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            startIcon={<Iconify icon=\"ic:round-clear-all\" />}\r\n          >\r\n            Clear All\r\n          </Button>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\sections\\@dashboard\\products\\ProductSort.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\_mock\\account.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\color-utils\\ColorPreview.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\label\\Label.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\color-utils\\ColorMultiPicker.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\color-utils\\ColorSinglePicker.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\header\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\index.js",["1033"],["1034"],"import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n// @mui\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material';\r\n// mock\r\nimport account from '../../../_mock/account';\r\n// hooks\r\nimport useResponsive from '../../../hooks/useResponsive';\r\n// components\r\nimport Logo from '../../../components/logo';\r\nimport Scrollbar from '../../../components/scrollbar';\r\nimport NavSection from '../../../components/nav-section';\r\n//\r\nimport navConfig from './config';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst NAV_WIDTH = 280;\r\n\r\nconst StyledAccount = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 2.5),\r\n  borderRadius: Number(theme.shape.borderRadius) * 1.5,\r\n  backgroundColor: alpha(theme.palette.grey[500], 0.12),\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nNav.propTypes = {\r\n  openNav: PropTypes.bool,\r\n  onCloseNav: PropTypes.func,\r\n};\r\n\r\nexport default function Nav({ openNav, onCloseNav }) {\r\n  const { pathname } = useLocation();\r\n\r\n  const isDesktop = useResponsive('up', 'lg');\r\n\r\n  useEffect(() => {\r\n    if (openNav) {\r\n      onCloseNav();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pathname]);\r\n\r\n  const renderContent = (\r\n    <Scrollbar\r\n      sx={{\r\n        height: 1,\r\n        '& .simplebar-content': { height: 1, display: 'flex', flexDirection: 'column' },\r\n      }}\r\n    >\r\n      <Box sx={{ px: 2.5, py: 3, display: 'inline-flex' }}>\r\n        <Logo />\r\n      </Box>\r\n\r\n      <Box sx={{ mb: 5, mx: 2.5 }}>\r\n        <Link underline=\"none\">\r\n          <StyledAccount>\r\n            <Avatar src={account.photoURL} alt=\"photoURL\" />\r\n\r\n            <Box sx={{ ml: 2 }}>\r\n              <Typography variant=\"subtitle2\" sx={{ color: 'text.primary' }}>\r\n                {account.displayName}\r\n              </Typography>\r\n\r\n              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                {account.role}\r\n              </Typography>\r\n            </Box>\r\n          </StyledAccount>\r\n        </Link>\r\n      </Box>\r\n\r\n      <NavSection data={navConfig} />\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n\r\n      <Box sx={{ px: 2.5, pb: 3, mt: 10 }}>\r\n        <Stack alignItems=\"center\" spacing={3} sx={{ pt: 5, borderRadius: 2, position: 'relative' }}>\r\n          <Box\r\n            component=\"img\"\r\n            src=\"/assets/illustrations/illustration_avatar.png\"\r\n            sx={{ width: 100, position: 'absolute', top: -50 }}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    </Scrollbar>\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      component=\"nav\"\r\n      sx={{\r\n        flexShrink: { lg: 0 },\r\n        width: { lg: NAV_WIDTH },\r\n      }}\r\n    >\r\n      {isDesktop ? (\r\n        <Drawer\r\n          open\r\n          variant=\"permanent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: NAV_WIDTH,\r\n              bgcolor: 'background.default',\r\n              borderRightStyle: 'dashed',\r\n            },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      ) : (\r\n        <Drawer\r\n          open={openNav}\r\n          onClose={onCloseNav}\r\n          ModalProps={{\r\n            keepMounted: true,\r\n          }}\r\n          PaperProps={{\r\n            sx: { width: NAV_WIDTH },\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\utils\\formatTime.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\scrollbar\\styles.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modal-Detail-SanPham.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\svg-color\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\color-utils\\Icon.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\label\\styles.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\nav-section\\index.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\header\\LanguagePopover.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\header\\Searchbar.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\header\\AccountPopover.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\header\\NotificationsPopover.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\layouts\\dashboard\\nav\\config.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\svg-color\\SvgColor.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\nav-section\\NavSection.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\components\\nav-section\\styles.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\OrderClient-Timeline.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\SelectAllBill.js",["1035","1036"],[],"import PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport UpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { green } from '@mui/material/colors';\r\nimport Box from '@mui/material/Box';\r\nimport { Fragment, useCallback, useEffect, useState } from 'react';\r\nimport { Button, Container, Grid, Paper } from '@mui/material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n// Service\r\nimport { viewAllHDByIDKH } from '../../service/client/SelectBill';\r\nimport { listImg } from '../../service/client/Detail-Product';\r\n\r\nconst StyledProductImg = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute',\r\n});\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`action-tabpanel-${index}`}\r\n      aria-labelledby={`action-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `action-tab-${index}`,\r\n    'aria-controls': `action-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst fabStyle = {\r\n  position: 'absolute',\r\n  bottom: 16,\r\n  right: 16,\r\n};\r\n\r\nconst fabGreenStyle = {\r\n  color: 'common.white',\r\n  bgcolor: green[500],\r\n  '&:hover': {\r\n    bgcolor: green[600],\r\n  },\r\n};\r\n\r\nexport default function SelectAllBillOfClient() {\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    console.log('newValue: ', newValue);\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    console.log('Hihi: ', index);\r\n    setValue(index);\r\n  };\r\n\r\n  const transitionDuration = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen,\r\n  };\r\n\r\n  const fabs = [\r\n    {\r\n      color: 'primary',\r\n      sx: fabStyle,\r\n      icon: <AddIcon />,\r\n      label: 'Add',\r\n    },\r\n    {\r\n      color: 'secondary',\r\n      sx: fabStyle,\r\n      icon: <EditIcon />,\r\n      label: 'Edit',\r\n    },\r\n    {\r\n      color: 'inherit',\r\n      sx: { ...fabStyle, ...fabGreenStyle },\r\n      icon: <UpIcon />,\r\n      label: 'Expand',\r\n    },\r\n  ];\r\n  // Select All Bill\r\n  const param = useParams();\r\n  const idParam = param.idKH;\r\n  //   console.log('param: ', param);\r\n\r\n  const [DataCart, setDataCart] = useState([]);\r\n  const [productOnCart, setProductOnCart] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const SelectAllBill = useCallback(async () => {\r\n    try {\r\n      const res = await viewAllHDByIDKH(idParam, currentPage);\r\n      console.log('ré: ', res);\r\n      setDataCart(res);\r\n      const productId = res.content.map((item) => item.idCtsp.idSp.idSp);\r\n      console.log('productId: ', productId);\r\n\r\n      const imgDataArray = await Promise.all(productId.map((productId) => listImg(productId)));\r\n      const combinedData = res.content.map((item, index) => ({\r\n        ...item,\r\n        image: imgDataArray[index], // Assuming 'image' is the key to hold image data\r\n      }));\r\n      console.log('combinedData: ', combinedData);\r\n\r\n      // const uniqueSizes = [...new Set(combinedData.map((hd) => hd.idHd))];\r\n\r\n      const groupedData = {};\r\n\r\n      combinedData.forEach((item) => {\r\n        const { idHd, idCtsp, image, ...rest } = item;\r\n\r\n        if (!groupedData[item.idHd.maHd]) {\r\n          groupedData[item.idHd.maHd] = {\r\n            idHd,\r\n            hdct: [{ idCtsp, ...rest }],\r\n            image: image ? [...image] : [],\r\n          };\r\n        } else {\r\n          if (image) {\r\n            groupedData[item.idHd.maHd].image.push(...image);\r\n          }\r\n          groupedData[item.idHd.maHd].hdct.push({ idCtsp, ...rest });\r\n        }\r\n      });\r\n\r\n      const mergedData = Object.values(groupedData);\r\n\r\n      mergedData.forEach((item) => {\r\n        item.hdct.forEach((ctsp) => {\r\n          const correspondingImage = item.image.find((img) => img.idSp.idSp === ctsp.idCtsp.idSp.idSp);\r\n          if (correspondingImage) {\r\n            ctsp.idCtsp.url = correspondingImage.url;\r\n          }\r\n        });\r\n      });\r\n      console.log('mergedData: ', mergedData);\r\n\r\n      if (mergedData) {\r\n        const filterDataByStatus = (status) => {\r\n          const filteredData = mergedData.filter((item) => item.idHd.trangThai === status);\r\n          console.log('filteredData: ', filteredData);\r\n          return filteredData;\r\n        };\r\n        if (value === 0) {\r\n          setTimeout(() => {\r\n            setProductOnCart((prevList) => [...prevList, ...mergedData]);\r\n            // setProductOnCart(mergedData);\r\n          }, 2000);\r\n        } else if (value === 1) {\r\n          setProductOnCart(filterDataByStatus(0));\r\n        } else if (value === 2) {\r\n          setProductOnCart(filterDataByStatus(1));\r\n        } else if (value === 3) {\r\n          setProductOnCart(filterDataByStatus(2));\r\n        } else if (value === 4) {\r\n          setProductOnCart(filterDataByStatus(3));\r\n        } else if (value === 5) {\r\n          setProductOnCart(filterDataByStatus(4));\r\n        } else if (value === 6) {\r\n          setProductOnCart(filterDataByStatus(10));\r\n        } else if (value === 7) {\r\n          setProductOnCart(filterDataByStatus(6));\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }, [currentPage, idParam, value]);\r\n\r\n  useEffect(() => {\r\n    SelectAllBill();\r\n  }, [SelectAllBill]);\r\n\r\n  const fetchMoreData = () => {\r\n    if (DataCart.totalElements - 1 === productOnCart.length) {\r\n      setHasMore(false);\r\n    } else {\r\n      setCurrentPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n  // Handle Click\r\n  const navigate = useNavigate();\r\n  const handleClick = (idHd) => {\r\n    console.log(idHd.idHd);\r\n    navigate(`/client/client-timeline/${idHd.idHd}`);\r\n  };\r\n  // Select renderTabPanel\r\n  const renderTabPanel = (indexTab) => (\r\n    <TabPanel value={value} index={indexTab} dir={theme.direction}>\r\n      <InfiniteScroll\r\n        dataLength={productOnCart.length}\r\n        next={fetchMoreData}\r\n        hasMore={hasMore}\r\n        loader={<p style={{ textAlign: 'center' }}>Loading...</p>}\r\n        endMessage={<p style={{ textAlign: 'center' }}>Đã tải hết hóa đơn của bạn!!!</p>}\r\n      >\r\n        <Grid container spacing={3}>\r\n          {productOnCart && productOnCart.length > 0 ? (\r\n            productOnCart.map((item, index) => {\r\n              const { idHd, hdct } = item || {};\r\n              const maHd = idHd?.maHd || '';\r\n              const diaChi = idHd?.diaChi || '';\r\n              const sdtKh = idHd?.sdtKh || '';\r\n              const tenKh = idHd?.tenKh || '';\r\n\r\n              return (\r\n                <Fragment key={index}>\r\n                  <Grid item xs={12} md={6} lg={12} sx={{ marginTop: 3, backgroundColor: 'white' }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\r\n                      <Typography sx={{ fontSize: 16 }} variant=\"subtitle2\" gutterBottom>\r\n                        Mã Hóa Đơn: {maHd}\r\n                      </Typography>\r\n                      <Typography sx={{ fontSize: 16, marginLeft: 'auto' }} variant=\"button\" gutterBottom>\r\n                        {tenKh}\r\n                      </Typography>\r\n                      <Typography sx={{ fontSize: 16, marginLeft: 2 }} variant=\"button\" gutterBottom>\r\n                        {sdtKh}\r\n                      </Typography>\r\n                      <Typography sx={{ fontSize: 16, marginLeft: 4 }} variant=\"body2\" gutterBottom>\r\n                        {diaChi && diaChi}\r\n                      </Typography>\r\n                    </div>\r\n                  </Grid>\r\n                  {hdct.map((ctsp, ctspIndex) => {\r\n                    const { idCtsp, soLuong } = ctsp || {};\r\n                    const tenSp = idCtsp?.idSp?.tenSp || '';\r\n                    const tenMs = idCtsp?.idMs?.tenMs || '';\r\n                    const tenSize = idCtsp?.idSize?.tenSize || '';\r\n                    const imageUrl = idCtsp?.url || '';\r\n\r\n                    return (\r\n                      <Grid\r\n                        key={ctspIndex}\r\n                        container\r\n                        item\r\n                        xs={12}\r\n                        md={6}\r\n                        lg={12}\r\n                        sx={{ marginTop: 1, backgroundColor: 'white', alignItems: 'center' }}\r\n                      >\r\n                        <StyledProductImg\r\n                          sx={{\r\n                            position: 'relative',\r\n                            width: '140px',\r\n                            height: '180px',\r\n                            marginLeft: '14px',\r\n                          }}\r\n                          alt={imageUrl}\r\n                          src={imageUrl}\r\n                        />\r\n                        <div style={{ marginLeft: '16px' }}>\r\n                          <Typography variant=\"body1\" gutterBottom>\r\n                            Tên Sản Phẩm: {tenSp}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" gutterBottom>\r\n                            Phân Loại: {tenMs} {tenSize}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" gutterBottom>\r\n                            Số Lượng: {soLuong}\r\n                          </Typography>\r\n                        </div>\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n                  <Grid item xs={12} md={6} lg={12} sx={{ textAlign: 'right', marginTop: 1, backgroundColor: 'white' }}>\r\n                    <Button onClick={() => handleClick(idHd)} variant=\"contained\" color=\"success\">\r\n                      Chi Tiết\r\n                    </Button>\r\n                  </Grid>\r\n                </Fragment>\r\n              );\r\n            })\r\n          ) : (\r\n            <Grid item xs={12} md={6} lg={12} sx={{ marginTop: 3, backgroundColor: 'white' }}>\r\n              <Paper\r\n                sx={{\r\n                  textAlign: 'center',\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\" paragraph>\r\n                  Dữ Liệu Trống\r\n                </Typography>\r\n\r\n                <Typography variant=\"body2\">\r\n                  Bạn Không Có Hóa Đơn Nào Ở Trạng Thái Này &nbsp;\r\n                  <br /> Xin Vui Lòng Đặt Hàng.\r\n                </Typography>\r\n              </Paper>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </InfiniteScroll>\r\n    </TabPanel>\r\n  );\r\n\r\n  // Sử dụng renderTabPanel trong return của component\r\n  // Ví dụ: renderTabPanel(0), renderTabPanel(1),...\r\n\r\n  return (\r\n    <Container>\r\n      <Box\r\n        sx={{\r\n          // bgcolor: 'background.paper',\r\n          width: '100%',\r\n          position: 'relative',\r\n          minHeight: 200,\r\n          paddingTop: 3,\r\n          paddingBottom: 3,\r\n        }}\r\n      >\r\n        <AppBar position=\"static\" color=\"default\">\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            variant=\"fullWidth\"\r\n            aria-label=\"action tabs example\"\r\n          >\r\n            <Tab label=\"Tất Cả\" {...a11yProps(0)} />\r\n            <Tab label=\"Chờ Xác Nhận Đơn\" {...a11yProps(1)} />\r\n            <Tab label=\"Chờ Xác Nhận Thông Tin\" {...a11yProps(2)} />\r\n            <Tab label=\"Đã Chuyển Cho Đơn Vị\" {...a11yProps(3)} />\r\n            <Tab label=\"Xác Nhận Thanh Toán\" {...a11yProps(4)} />\r\n            <Tab label=\"Đã Giao Thành Công\" {...a11yProps(3)} />\r\n            <Tab label=\"Đơn hàng đã hủy\" {...a11yProps(2)} />\r\n            <Tab label=\"Đổi/Trả Hàng\" {...a11yProps(1)} />\r\n          </Tabs>\r\n        </AppBar>\r\n        <SwipeableViews\r\n          axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n          index={value}\r\n          onChangeIndex={handleChangeIndex}\r\n        >\r\n          {renderTabPanel(0)}\r\n          {renderTabPanel(1)}\r\n          {renderTabPanel(2)}\r\n          {renderTabPanel(3)}\r\n          {renderTabPanel(4)}\r\n          {renderTabPanel(5)}\r\n          {renderTabPanel(6)}\r\n          {renderTabPanel(7)}\r\n        </SwipeableViews>\r\n        {fabs.map((fab, index) => (\r\n          <Zoom\r\n            key={fab.color}\r\n            in={value === index}\r\n            timeout={transitionDuration}\r\n            style={{\r\n              transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\r\n            }}\r\n            unmountOnExit\r\n          >\r\n            <Fab sx={fab.sx} aria-label={fab.label} color={fab.color}>\r\n              {fab.icon}\r\n            </Fab>\r\n          </Zoom>\r\n        ))}\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\pages\\client\\Payment-Page1.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\client\\SelectBill.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\Modals-Add-Address.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\service\\client\\Payment.js",[],[],"E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\client\\Modals-ReturnItem.js",["1037"],[],"import { useState } from 'react';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport { Image } from 'react-bootstrap';\r\nimport KeyboardReturnIcon from '@mui/icons-material/KeyboardReturn';\r\nimport { pink } from '@mui/material/colors';\r\nimport Paper from '@mui/material/Paper';\r\nimport ModalDetailItemReturn from './Modals-DetailReturnItem';\r\n\r\n// @mui\r\n\r\nconst ModalItemReturn = (props) => {\r\n  // Sle\r\n  // Get Props\r\n  ModalItemReturn.propTypes = {\r\n    show: PropTypes.bool.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n    selectDataCart: PropTypes.func.isRequired,\r\n    DataCart: PropTypes.array.isRequired,\r\n  };\r\n  const { show, handleClose, selectDataCart, DataCart } = props;\r\n\r\n  //   Select card product\r\n  // const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  // const handleOpenFilter = () => {\r\n  //   setOpenFilter(true);\r\n  // };\r\n\r\n  // const handleCloseFilter = () => {\r\n  //   setOpenFilter(false);\r\n  // };\r\n\r\n  // Return one product on cart\r\n  const [showModalsReturnOne, setShowModalReturnOne] = useState(false);\r\n  const [itemReturnOne, setIntemReturnOne] = useState();\r\n\r\n  const handleReturnOne = (item) => {\r\n    console.log('item return: ', item);\r\n    setShowModalReturnOne(true);\r\n    setIntemReturnOne(item);\r\n  };\r\n\r\n  const handleCloseModalReturnOne = () => {\r\n    setShowModalReturnOne(false);\r\n  };\r\n\r\n  const handleReturnAll = () => {\r\n    setShowModalReturnOne(false);\r\n  };\r\n  // Format thanhTien\r\n  const formatCurrency = (amount) => amount.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Dialog open={show} onClose={handleClose} maxWidth=\"xl\" fullWidth>\r\n          <DialogTitle>\r\n            <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n              Danh Sách Sản Phẩm\r\n            </Typography>\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TableContainer sx={{ marginTop: 2, marginBottom: 2 }} component={Paper}>\r\n              <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Ảnh</TableCell>\r\n                    <TableCell>Mã Sản Phẩm</TableCell>\r\n                    <TableCell align=\"right\">Sản Phẩm</TableCell>\r\n                    <TableCell align=\"right\">Thuộc tính</TableCell>\r\n                    <TableCell align=\"right\">Giá</TableCell>\r\n                    <TableCell align=\"right\">Số Lượng</TableCell>\r\n                    <TableCell align=\"right\">Tổng</TableCell>\r\n                    <TableCell align=\"right\">Thao Tác</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {DataCart && DataCart.length > 0 ? (\r\n                    DataCart.map((item, index) => {\r\n                      const imagesArray = item[2].split(','); // Tách chuỗi thành mảng\r\n                      const firstImage = imagesArray[0];\r\n                      return (\r\n                        <TableRow\r\n                          key={index}\r\n                          sx={{\r\n                            '&:last-child td, &:last-child th': { border: 0 },\r\n                          }}\r\n                        >\r\n                          <TableCell>\r\n                            <Image rounded style={{ width: '150px', height: 'auto' }} src={firstImage} />\r\n                          </TableCell>\r\n                          <TableCell>{item[4]}</TableCell>\r\n                          <TableCell align=\"right\">{item[5]}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            Size: {item[6]}\r\n                            <br />\r\n                            Màu: {item[11]}\r\n                          </TableCell>\r\n                          <TableCell align=\"right\">{formatCurrency(item[7])}</TableCell>\r\n                          <TableCell align=\"right\">{item[8]}</TableCell>\r\n                          <TableCell align=\"right\">{formatCurrency(item[9])}</TableCell>\r\n                          <TableCell align=\"right\">\r\n                            <IconButton aria-label=\"delete\" size=\"large\" onClick={() => handleReturnOne(item)}>\r\n                              <KeyboardReturnIcon sx={{ color: pink[500] }} />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <TableRow>\r\n                      <TableCell align=\"right\" colSpan={8}>\r\n                        KHÔNG CÓ DỮ LIỆU\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                  <TableRow>\r\n                    <TableCell rowSpan={3} />\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>{' '}\r\n            </TableContainer>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Hủy</Button>\r\n            <Button onClick={handleReturnAll}>Hoàn Trả Tất Cả</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Container>\r\n      {itemReturnOne && (\r\n        <ModalDetailItemReturn\r\n          show={showModalsReturnOne}\r\n          handleClose={handleCloseModalReturnOne}\r\n          itemReturnOne={itemReturnOne}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalItemReturn;\r\n","E:\\Du_an_5F\\fullstack-fontend\\src\\forms\\client\\Modals-DetailReturnItem.js",[],[],{"ruleId":"1038","replacedBy":"1039"},{"ruleId":"1040","replacedBy":"1041"},{"ruleId":"1042","replacedBy":"1043"},{"ruleId":"1044","replacedBy":"1045"},{"ruleId":"1046","replacedBy":"1047"},{"ruleId":"1048","replacedBy":"1049"},{"ruleId":"1050","replacedBy":"1051"},{"ruleId":"1052","severity":2,"message":"1053","line":12,"column":30,"nodeType":"1054","endLine":12,"endColumn":56},{"ruleId":"1055","severity":2,"message":"1053","line":12,"column":30,"nodeType":"1054","endLine":12,"endColumn":56},{"ruleId":"1056","severity":1,"message":"1057","line":4,"column":48,"nodeType":"1058","messageId":"1059","endLine":4,"endColumn":53},{"ruleId":"1056","severity":1,"message":"1060","line":4,"column":55,"nodeType":"1058","messageId":"1059","endLine":4,"endColumn":61},{"ruleId":"1056","severity":1,"message":"1061","line":9,"column":8,"nodeType":"1058","messageId":"1059","endLine":9,"endColumn":15},{"ruleId":"1056","severity":1,"message":"1062","line":3,"column":10,"nodeType":"1058","messageId":"1059","endLine":3,"endColumn":22},{"ruleId":"1056","severity":1,"message":"1063","line":105,"column":9,"nodeType":"1058","messageId":"1059","endLine":105,"endColumn":23},{"ruleId":"1064","severity":2,"message":"1065","line":4,"column":33,"nodeType":"1054","endLine":4,"endColumn":65},{"ruleId":"1056","severity":1,"message":"1066","line":430,"column":19,"nodeType":"1058","messageId":"1059","endLine":430,"endColumn":29},{"ruleId":"1056","severity":1,"message":"1067","line":2,"column":31,"nodeType":"1058","messageId":"1059","endLine":2,"endColumn":38},{"ruleId":"1056","severity":1,"message":"1068","line":43,"column":10,"nodeType":"1058","messageId":"1059","endLine":43,"endColumn":22},{"ruleId":"1056","severity":1,"message":"1069","line":43,"column":24,"nodeType":"1058","messageId":"1059","endLine":43,"endColumn":39},{"ruleId":"1056","severity":1,"message":"1070","line":3,"column":3,"nodeType":"1058","messageId":"1059","endLine":3,"endColumn":14},{"ruleId":"1056","severity":1,"message":"1071","line":37,"column":8,"nodeType":"1058","messageId":"1059","endLine":37,"endColumn":26},{"ruleId":"1056","severity":1,"message":"1072","line":203,"column":9,"nodeType":"1058","messageId":"1059","endLine":203,"endColumn":24},{"ruleId":"1056","severity":1,"message":"1073","line":213,"column":7,"nodeType":"1058","messageId":"1059","endLine":213,"endColumn":16},{"ruleId":"1056","severity":1,"message":"1074","line":216,"column":9,"nodeType":"1058","messageId":"1059","endLine":216,"endColumn":22},{"ruleId":"1075","severity":1,"message":"1076","line":29,"column":31,"nodeType":"1058","messageId":"1077","endLine":29,"endColumn":35},{"ruleId":"1056","severity":1,"message":"1078","line":44,"column":17,"nodeType":"1058","messageId":"1059","endLine":44,"endColumn":25},{"ruleId":"1056","severity":1,"message":"1079","line":45,"column":10,"nodeType":"1058","messageId":"1059","endLine":45,"endColumn":16},{"ruleId":"1056","severity":1,"message":"1080","line":45,"column":18,"nodeType":"1058","messageId":"1059","endLine":45,"endColumn":27},{"ruleId":"1081","severity":1,"message":"1082","line":85,"column":6,"nodeType":"1083","endLine":85,"endColumn":8,"suggestions":"1084"},{"ruleId":"1056","severity":1,"message":"1085","line":360,"column":9,"nodeType":"1058","messageId":"1059","endLine":360,"endColumn":20},{"ruleId":"1056","severity":1,"message":"1086","line":364,"column":9,"nodeType":"1058","messageId":"1059","endLine":364,"endColumn":24},{"ruleId":"1087","severity":1,"message":"1088","line":502,"column":17,"nodeType":"1089","messageId":"1090","endLine":502,"endColumn":130},{"ruleId":"1056","severity":1,"message":"1078","line":55,"column":17,"nodeType":"1058","messageId":"1059","endLine":55,"endColumn":25},{"ruleId":"1056","severity":1,"message":"1091","line":27,"column":21,"nodeType":"1058","messageId":"1059","endLine":27,"endColumn":26},{"ruleId":"1056","severity":1,"message":"1092","line":40,"column":10,"nodeType":"1058","messageId":"1059","endLine":40,"endColumn":22},{"ruleId":"1056","severity":1,"message":"1093","line":12,"column":22,"nodeType":"1058","messageId":"1059","endLine":12,"endColumn":35},{"ruleId":"1056","severity":1,"message":"1094","line":20,"column":21,"nodeType":"1058","messageId":"1059","endLine":20,"endColumn":33},{"ruleId":"1056","severity":1,"message":"1095","line":23,"column":10,"nodeType":"1058","messageId":"1059","endLine":23,"endColumn":16},{"ruleId":"1096","severity":1,"message":"1097","line":114,"column":21,"nodeType":"1089","messageId":"1098","endLine":118,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1097","line":119,"column":21,"nodeType":"1089","messageId":"1098","endLine":123,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1097","line":124,"column":21,"nodeType":"1089","messageId":"1098","endLine":128,"endColumn":23},{"ruleId":"1056","severity":1,"message":"1099","line":8,"column":8,"nodeType":"1058","messageId":"1059","endLine":8,"endColumn":20},{"ruleId":"1056","severity":1,"message":"1100","line":9,"column":8,"nodeType":"1058","messageId":"1059","endLine":9,"endColumn":25},{"ruleId":"1056","severity":1,"message":"1101","line":196,"column":9,"nodeType":"1058","messageId":"1059","endLine":196,"endColumn":24},{"ruleId":"1081","severity":1,"message":"1102","line":62,"column":6,"nodeType":"1083","endLine":62,"endColumn":16,"suggestions":"1103","suppressions":"1104"},{"ruleId":"1096","severity":1,"message":"1097","line":139,"column":21,"nodeType":"1089","messageId":"1098","endLine":143,"endColumn":23},{"ruleId":"1096","severity":1,"message":"1097","line":144,"column":21,"nodeType":"1089","messageId":"1098","endLine":148,"endColumn":23},{"ruleId":"1056","severity":1,"message":"1101","line":212,"column":11,"nodeType":"1058","messageId":"1059","endLine":212,"endColumn":26},{"ruleId":"1081","severity":1,"message":"1102","line":77,"column":8,"nodeType":"1083","endLine":77,"endColumn":18,"suggestions":"1105","suppressions":"1106"},{"ruleId":"1107","severity":2,"message":"1108","line":43,"column":23,"nodeType":"1058","endLine":43,"endColumn":36,"suppressions":"1109"},{"ruleId":"1056","severity":1,"message":"1110","line":33,"column":10,"nodeType":"1058","messageId":"1059","endLine":33,"endColumn":14},{"ruleId":"1056","severity":1,"message":"1111","line":10,"column":10,"nodeType":"1058","messageId":"1059","endLine":10,"endColumn":21},{"ruleId":"1075","severity":1,"message":"1112","line":16,"column":11,"nodeType":"1113","messageId":"1077","endLine":16,"endColumn":15},{"ruleId":"1075","severity":1,"message":"1114","line":16,"column":17,"nodeType":"1113","messageId":"1077","endLine":16,"endColumn":28},{"ruleId":"1075","severity":1,"message":"1115","line":16,"column":30,"nodeType":"1113","messageId":"1077","endLine":16,"endColumn":41},{"ruleId":"1075","severity":1,"message":"1116","line":23,"column":29,"nodeType":"1058","messageId":"1077","endLine":23,"endColumn":35},{"ruleId":"1075","severity":1,"message":"1117","line":30,"column":21,"nodeType":"1058","messageId":"1077","endLine":30,"endColumn":30},{"ruleId":"1075","severity":1,"message":"1116","line":31,"column":31,"nodeType":"1058","messageId":"1077","endLine":31,"endColumn":37},{"ruleId":"1075","severity":1,"message":"1116","line":32,"column":32,"nodeType":"1058","messageId":"1077","endLine":32,"endColumn":38},{"ruleId":"1075","severity":1,"message":"1117","line":37,"column":28,"nodeType":"1058","messageId":"1077","endLine":37,"endColumn":37},{"ruleId":"1075","severity":1,"message":"1112","line":15,"column":11,"nodeType":"1113","messageId":"1077","endLine":15,"endColumn":15},{"ruleId":"1075","severity":1,"message":"1114","line":15,"column":17,"nodeType":"1113","messageId":"1077","endLine":15,"endColumn":28},{"ruleId":"1075","severity":1,"message":"1115","line":15,"column":30,"nodeType":"1113","messageId":"1077","endLine":15,"endColumn":41},{"ruleId":"1056","severity":1,"message":"1118","line":16,"column":10,"nodeType":"1058","messageId":"1059","endLine":16,"endColumn":20},{"ruleId":"1075","severity":1,"message":"1119","line":23,"column":33,"nodeType":"1058","messageId":"1077","endLine":23,"endColumn":43},{"ruleId":"1075","severity":1,"message":"1120","line":24,"column":33,"nodeType":"1058","messageId":"1077","endLine":24,"endColumn":43},{"ruleId":"1075","severity":1,"message":"1117","line":32,"column":21,"nodeType":"1058","messageId":"1077","endLine":32,"endColumn":30},{"ruleId":"1075","severity":1,"message":"1117","line":34,"column":19,"nodeType":"1058","messageId":"1077","endLine":34,"endColumn":28},{"ruleId":"1075","severity":1,"message":"1119","line":37,"column":40,"nodeType":"1058","messageId":"1077","endLine":37,"endColumn":50},{"ruleId":"1075","severity":1,"message":"1117","line":44,"column":28,"nodeType":"1058","messageId":"1077","endLine":44,"endColumn":37},{"ruleId":"1075","severity":1,"message":"1121","line":7,"column":33,"nodeType":"1113","messageId":"1077","endLine":7,"endColumn":41},{"ruleId":"1122","severity":1,"message":"1123","line":25,"column":31,"nodeType":"1124","messageId":"1125","endLine":27,"endColumn":2,"fix":"1126"},{"ruleId":"1064","severity":2,"message":"1065","line":7,"column":33,"nodeType":"1054","endLine":7,"endColumn":65},{"ruleId":"1064","severity":2,"message":"1127","line":12,"column":48,"nodeType":"1054","endLine":12,"endColumn":69},{"ruleId":"1056","severity":1,"message":"1067","line":2,"column":21,"nodeType":"1058","messageId":"1059","endLine":2,"endColumn":28},{"ruleId":"1056","severity":1,"message":"1128","line":10,"column":3,"nodeType":"1058","messageId":"1059","endLine":10,"endColumn":9},{"ruleId":"1056","severity":1,"message":"1129","line":23,"column":10,"nodeType":"1058","messageId":"1059","endLine":23,"endColumn":26},{"ruleId":"1056","severity":1,"message":"1130","line":69,"column":86,"nodeType":"1058","messageId":"1059","endLine":69,"endColumn":92},{"ruleId":"1056","severity":1,"message":"1131","line":69,"column":94,"nodeType":"1058","messageId":"1059","endLine":69,"endColumn":102},{"ruleId":"1056","severity":1,"message":"1132","line":70,"column":10,"nodeType":"1058","messageId":"1059","endLine":70,"endColumn":18},{"ruleId":"1056","severity":1,"message":"1133","line":70,"column":20,"nodeType":"1058","messageId":"1059","endLine":70,"endColumn":31},{"ruleId":"1056","severity":1,"message":"1134","line":72,"column":10,"nodeType":"1058","messageId":"1059","endLine":72,"endColumn":16},{"ruleId":"1056","severity":1,"message":"1135","line":72,"column":18,"nodeType":"1058","messageId":"1059","endLine":72,"endColumn":27},{"ruleId":"1056","severity":1,"message":"1136","line":73,"column":10,"nodeType":"1058","messageId":"1059","endLine":73,"endColumn":15},{"ruleId":"1056","severity":1,"message":"1137","line":73,"column":17,"nodeType":"1058","messageId":"1059","endLine":73,"endColumn":25},{"ruleId":"1056","severity":1,"message":"1138","line":74,"column":10,"nodeType":"1058","messageId":"1059","endLine":74,"endColumn":14},{"ruleId":"1056","severity":1,"message":"1139","line":74,"column":16,"nodeType":"1058","messageId":"1059","endLine":74,"endColumn":23},{"ruleId":"1056","severity":1,"message":"1140","line":76,"column":10,"nodeType":"1058","messageId":"1059","endLine":76,"endColumn":16},{"ruleId":"1056","severity":1,"message":"1141","line":76,"column":18,"nodeType":"1058","messageId":"1059","endLine":76,"endColumn":27},{"ruleId":"1056","severity":1,"message":"1142","line":77,"column":10,"nodeType":"1058","messageId":"1059","endLine":77,"endColumn":14},{"ruleId":"1056","severity":1,"message":"1143","line":77,"column":16,"nodeType":"1058","messageId":"1059","endLine":77,"endColumn":23},{"ruleId":"1056","severity":1,"message":"1060","line":6,"column":21,"nodeType":"1058","messageId":"1059","endLine":6,"endColumn":27},{"ruleId":"1081","severity":1,"message":"1144","line":47,"column":6,"nodeType":"1083","endLine":47,"endColumn":16,"suggestions":"1145","suppressions":"1146"},{"ruleId":"1064","severity":2,"message":"1147","line":2,"column":28,"nodeType":"1054","endLine":2,"endColumn":51},{"ruleId":"1064","severity":2,"message":"1148","line":18,"column":28,"nodeType":"1054","endLine":18,"endColumn":61},{"ruleId":"1056","severity":1,"message":"1149","line":36,"column":30,"nodeType":"1058","messageId":"1059","endLine":36,"endColumn":44},"lines-around-directive",["1150"],"no-new-object",["1151"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-return-await",[],"import/no-named-as-default","Parse errors in imported module './pages/DashboardAppPage': Unexpected token (11:1) (11:1)","Literal","import/no-named-as-default-member","no-unused-vars","'Stack' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Iconify' is defined but never used.","'sentenceCase' is defined but never used.","'handleOpenMenu' is assigned a value but never used.","import/no-unresolved","Unable to resolve path to module '@fortawesome/react-fontawesome'.","'setLoading' is assigned a value but never used.","'useMemo' is defined but never used.","'filteredList' is assigned a value but never used.","'setFilteredList' is assigned a value but never used.","'ButtonGroup' is defined but never used.","'ModelUpdateGiamGia' is defined but never used.","'generateNewCode' is assigned a value but never used.","'getIdHttp' is defined but never used.","'formattedDate' is assigned a value but never used.","react/prop-types","'data' is missing in props validation","missingPropType","'setImage' is assigned a value but never used.","'images' is assigned a value but never used.","'setImages' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getAllSp'. Either include it or remove the dependency array.","ArrayExpression",["1152"],"'todayAtNoon' is assigned a value but never used.","'parsedStartDate' is assigned a value but never used.","react/button-has-type","Missing an explicit type attribute for button","JSXElement","missingType","'props' is defined but never used.","'alertContent' is assigned a value but never used.","'setMaTaiKhoan' is assigned a value but never used.","'setTrangThai' is assigned a value but never used.","'result' is assigned a value but never used.","react/jsx-key","Missing \"key\" prop for element in array","missingArrayKey","'ToggleButton' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'handlePageClick' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchQuanHuyenAndPhuongXa'. Either include it or remove the dependency array.",["1153"],["1154"],["1155"],["1156"],"react-hooks/rules-of-hooks","React Hook \"useMediaQuery\" cannot be called inside a callback. React Hooks must be called in a React function component or a custom React Hook function.",["1157"],"'moTa' is assigned a value but never used.","'useNavigate' is defined but never used.","'open' is missing in props validation","Property","'handleClose' is missing in props validation","'information' is missing in props validation","'information.idGgct' is missing in props validation","'information.trangThai' is missing in props validation","'idTaiKhoan' is assigned a value but never used.","'information.idTaiKhoan' is missing in props validation","'information.maTaiKhoan' is missing in props validation","'children' is missing in props validation","arrow-body-style","Unexpected block statement surrounding arrow body; move the returned value immediately after the `=>`.","ArrowFunctionExpression","unexpectedSingleBlock",{"range":"1158","text":"1159"},"Unable to resolve path to module '@react-oauth/google'.","'Rating' is defined but never used.","'ColorMultiPicker' is defined but never used.","'listSP' is defined but never used.","'onFilter' is defined but never used.","'chatLieu' is assigned a value but never used.","'setChatLieu' is assigned a value but never used.","'xuatXu' is assigned a value but never used.","'setXuatXu' is assigned a value but never used.","'tayAo' is assigned a value but never used.","'setTayAo' is assigned a value but never used.","'coAo' is assigned a value but never used.","'setCoAo' is assigned a value but never used.","'mauSac' is assigned a value but never used.","'setMauSac' is assigned a value but never used.","'size' is assigned a value but never used.","'setSize' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'onCloseNav' and 'openNav'. Either include them or remove the dependency array. If 'onCloseNav' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1160"],["1161"],"Unable to resolve path to module 'react-swipeable-views'.","Unable to resolve path to module 'react-infinite-scroll-component'.","'selectDataCart' is assigned a value but never used.","padding-line-between-statements","no-object-constructor",{"desc":"1162","fix":"1163"},{"desc":"1164","fix":"1165"},{"kind":"1166","justification":"1167"},{"desc":"1164","fix":"1168"},{"kind":"1166","justification":"1167"},{"kind":"1166","justification":"1167"},[610,652],"useContext(AlertContext)",{"desc":"1169","fix":"1170"},{"kind":"1166","justification":"1167"},"Update the dependencies array to be: [getAllSp]",{"range":"1171","text":"1172"},"Update the dependencies array to be: [fetchQuanHuyenAndPhuongXa, listData]",{"range":"1173","text":"1174"},"directive","",{"range":"1175","text":"1174"},"Update the dependencies array to be: [onCloseNav, openNav, pathname]",{"range":"1176","text":"1177"},[2848,2850],"[getAllSp]",[2039,2049],"[fetchQuanHuyenAndPhuongXa, listData]",[2429,2439],[1419,1429],"[onCloseNav, openNav, pathname]"]
>>>>>>> origin/duyvd
